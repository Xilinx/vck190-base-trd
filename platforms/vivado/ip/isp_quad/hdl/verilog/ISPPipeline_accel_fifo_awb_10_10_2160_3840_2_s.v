// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
// Version: 2021.1
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module ISPPipeline_accel_fifo_awb_10_10_2160_3840_2_s (
        p_read,
        p_read1,
        demosaic_out_4198_dout,
        demosaic_out_4198_empty_n,
        demosaic_out_4198_read,
        p_read2,
        p_read3,
        ltm_in_4199_din,
        ltm_in_4199_full_n,
        ltm_in_4199_write,
        hist0_address0,
        hist0_ce0,
        hist0_d0,
        hist0_q0,
        hist0_we0,
        hist0_address1,
        hist0_ce1,
        hist0_d1,
        hist0_q1,
        hist0_we1,
        hist01_address0,
        hist01_ce0,
        hist01_d0,
        hist01_q0,
        hist01_we0,
        hist01_address1,
        hist01_ce1,
        hist01_d1,
        hist01_q1,
        hist01_we1,
        hist02_address0,
        hist02_ce0,
        hist02_d0,
        hist02_q0,
        hist02_we0,
        hist02_address1,
        hist02_ce1,
        hist02_d1,
        hist02_q1,
        hist02_we1,
        hist1_address0,
        hist1_ce0,
        hist1_d0,
        hist1_q0,
        hist1_we0,
        hist1_address1,
        hist1_ce1,
        hist1_d1,
        hist1_q1,
        hist1_we1,
        hist13_address0,
        hist13_ce0,
        hist13_d0,
        hist13_q0,
        hist13_we0,
        hist13_address1,
        hist13_ce1,
        hist13_d1,
        hist13_q1,
        hist13_we1,
        hist14_address0,
        hist14_ce0,
        hist14_d0,
        hist14_q0,
        hist14_we0,
        hist14_address1,
        hist14_ce1,
        hist14_d1,
        hist14_q1,
        hist14_we1,
        thresh,
        ap_clk,
        ap_rst,
        p_read_ap_vld,
        p_read1_ap_vld,
        ap_start,
        ap_done,
        p_read2_ap_vld,
        p_read3_ap_vld,
        thresh_ap_vld,
        ap_ready,
        ap_idle,
        ap_continue
);


input  [11:0] p_read;
input  [11:0] p_read1;
input  [95:0] demosaic_out_4198_dout;
input   demosaic_out_4198_empty_n;
output   demosaic_out_4198_read;
input  [11:0] p_read2;
input  [11:0] p_read3;
output  [95:0] ltm_in_4199_din;
input   ltm_in_4199_full_n;
output   ltm_in_4199_write;
output  [11:0] hist0_address0;
output   hist0_ce0;
output  [31:0] hist0_d0;
input  [31:0] hist0_q0;
output   hist0_we0;
output  [11:0] hist0_address1;
output   hist0_ce1;
output  [31:0] hist0_d1;
input  [31:0] hist0_q1;
output   hist0_we1;
output  [11:0] hist01_address0;
output   hist01_ce0;
output  [31:0] hist01_d0;
input  [31:0] hist01_q0;
output   hist01_we0;
output  [11:0] hist01_address1;
output   hist01_ce1;
output  [31:0] hist01_d1;
input  [31:0] hist01_q1;
output   hist01_we1;
output  [11:0] hist02_address0;
output   hist02_ce0;
output  [31:0] hist02_d0;
input  [31:0] hist02_q0;
output   hist02_we0;
output  [11:0] hist02_address1;
output   hist02_ce1;
output  [31:0] hist02_d1;
input  [31:0] hist02_q1;
output   hist02_we1;
output  [11:0] hist1_address0;
output   hist1_ce0;
output  [31:0] hist1_d0;
input  [31:0] hist1_q0;
output   hist1_we0;
output  [11:0] hist1_address1;
output   hist1_ce1;
output  [31:0] hist1_d1;
input  [31:0] hist1_q1;
output   hist1_we1;
output  [11:0] hist13_address0;
output   hist13_ce0;
output  [31:0] hist13_d0;
input  [31:0] hist13_q0;
output   hist13_we0;
output  [11:0] hist13_address1;
output   hist13_ce1;
output  [31:0] hist13_d1;
input  [31:0] hist13_q1;
output   hist13_we1;
output  [11:0] hist14_address0;
output   hist14_ce0;
output  [31:0] hist14_d0;
input  [31:0] hist14_q0;
output   hist14_we0;
output  [11:0] hist14_address1;
output   hist14_ce1;
output  [31:0] hist14_d1;
input  [31:0] hist14_q1;
output   hist14_we1;
input  [31:0] thresh;
input   ap_clk;
input   ap_rst;
input   p_read_ap_vld;
input   p_read1_ap_vld;
input   ap_start;
output   ap_done;
input   p_read2_ap_vld;
input   p_read3_ap_vld;
input   thresh_ap_vld;
output   ap_ready;
output   ap_idle;
input   ap_continue;

wire    AWBhistogram_10_10_2160_3840_2_1_4096_U0_ap_start;
wire    AWBhistogram_10_10_2160_3840_2_1_4096_U0_ap_done;
wire    AWBhistogram_10_10_2160_3840_2_1_4096_U0_ap_continue;
wire    AWBhistogram_10_10_2160_3840_2_1_4096_U0_ap_idle;
wire    AWBhistogram_10_10_2160_3840_2_1_4096_U0_ap_ready;
wire    AWBhistogram_10_10_2160_3840_2_1_4096_U0_demosaic_out_4198_read;
wire   [95:0] AWBhistogram_10_10_2160_3840_2_1_4096_U0_impop_41_din;
wire    AWBhistogram_10_10_2160_3840_2_1_4096_U0_impop_41_write;
wire   [11:0] AWBhistogram_10_10_2160_3840_2_1_4096_U0_histogram_address0;
wire    AWBhistogram_10_10_2160_3840_2_1_4096_U0_histogram_ce0;
wire    AWBhistogram_10_10_2160_3840_2_1_4096_U0_histogram_we0;
wire   [31:0] AWBhistogram_10_10_2160_3840_2_1_4096_U0_histogram_d0;
wire   [11:0] AWBhistogram_10_10_2160_3840_2_1_4096_U0_histogram1_address0;
wire    AWBhistogram_10_10_2160_3840_2_1_4096_U0_histogram1_ce0;
wire    AWBhistogram_10_10_2160_3840_2_1_4096_U0_histogram1_we0;
wire   [31:0] AWBhistogram_10_10_2160_3840_2_1_4096_U0_histogram1_d0;
wire   [11:0] AWBhistogram_10_10_2160_3840_2_1_4096_U0_histogram2_address0;
wire    AWBhistogram_10_10_2160_3840_2_1_4096_U0_histogram2_ce0;
wire    AWBhistogram_10_10_2160_3840_2_1_4096_U0_histogram2_we0;
wire   [31:0] AWBhistogram_10_10_2160_3840_2_1_4096_U0_histogram2_d0;
wire    ap_sync_continue;
wire    AWBNormalization_10_10_2160_3840_2_1_4096_U0_ap_start;
wire    AWBNormalization_10_10_2160_3840_2_1_4096_U0_ap_done;
wire    AWBNormalization_10_10_2160_3840_2_1_4096_U0_ap_continue;
wire    AWBNormalization_10_10_2160_3840_2_1_4096_U0_ap_idle;
wire    AWBNormalization_10_10_2160_3840_2_1_4096_U0_ap_ready;
wire    AWBNormalization_10_10_2160_3840_2_1_4096_U0_impop_41_read;
wire   [95:0] AWBNormalization_10_10_2160_3840_2_1_4096_U0_ltm_in_4199_din;
wire    AWBNormalization_10_10_2160_3840_2_1_4096_U0_ltm_in_4199_write;
wire   [11:0] AWBNormalization_10_10_2160_3840_2_1_4096_U0_histogram_address0;
wire    AWBNormalization_10_10_2160_3840_2_1_4096_U0_histogram_ce0;
wire   [11:0] AWBNormalization_10_10_2160_3840_2_1_4096_U0_histogram1_address0;
wire    AWBNormalization_10_10_2160_3840_2_1_4096_U0_histogram1_ce0;
wire   [11:0] AWBNormalization_10_10_2160_3840_2_1_4096_U0_histogram2_address0;
wire    AWBNormalization_10_10_2160_3840_2_1_4096_U0_histogram2_ce0;
wire    impop_data_full_n;
wire   [95:0] impop_data_dout;
wire    impop_data_empty_n;
wire    ap_sync_done;
wire    ap_sync_ready;
reg    ap_sync_reg_AWBhistogram_10_10_2160_3840_2_1_4096_U0_ap_ready;
wire    ap_sync_AWBhistogram_10_10_2160_3840_2_1_4096_U0_ap_ready;
reg    ap_sync_reg_AWBNormalization_10_10_2160_3840_2_1_4096_U0_ap_ready;
wire    ap_sync_AWBNormalization_10_10_2160_3840_2_1_4096_U0_ap_ready;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_sync_reg_AWBhistogram_10_10_2160_3840_2_1_4096_U0_ap_ready = 1'b0;
#0 ap_sync_reg_AWBNormalization_10_10_2160_3840_2_1_4096_U0_ap_ready = 1'b0;
end

ISPPipeline_accel_AWBhistogram_10_10_2160_3840_2_1_4096_s AWBhistogram_10_10_2160_3840_2_1_4096_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(AWBhistogram_10_10_2160_3840_2_1_4096_U0_ap_start),
    .ap_done(AWBhistogram_10_10_2160_3840_2_1_4096_U0_ap_done),
    .ap_continue(AWBhistogram_10_10_2160_3840_2_1_4096_U0_ap_continue),
    .ap_idle(AWBhistogram_10_10_2160_3840_2_1_4096_U0_ap_idle),
    .ap_ready(AWBhistogram_10_10_2160_3840_2_1_4096_U0_ap_ready),
    .p_read(p_read),
    .p_read1(p_read1),
    .demosaic_out_4198_dout(demosaic_out_4198_dout),
    .demosaic_out_4198_empty_n(demosaic_out_4198_empty_n),
    .demosaic_out_4198_read(AWBhistogram_10_10_2160_3840_2_1_4096_U0_demosaic_out_4198_read),
    .impop_41_din(AWBhistogram_10_10_2160_3840_2_1_4096_U0_impop_41_din),
    .impop_41_full_n(impop_data_full_n),
    .impop_41_write(AWBhistogram_10_10_2160_3840_2_1_4096_U0_impop_41_write),
    .histogram_address0(AWBhistogram_10_10_2160_3840_2_1_4096_U0_histogram_address0),
    .histogram_ce0(AWBhistogram_10_10_2160_3840_2_1_4096_U0_histogram_ce0),
    .histogram_we0(AWBhistogram_10_10_2160_3840_2_1_4096_U0_histogram_we0),
    .histogram_d0(AWBhistogram_10_10_2160_3840_2_1_4096_U0_histogram_d0),
    .histogram1_address0(AWBhistogram_10_10_2160_3840_2_1_4096_U0_histogram1_address0),
    .histogram1_ce0(AWBhistogram_10_10_2160_3840_2_1_4096_U0_histogram1_ce0),
    .histogram1_we0(AWBhistogram_10_10_2160_3840_2_1_4096_U0_histogram1_we0),
    .histogram1_d0(AWBhistogram_10_10_2160_3840_2_1_4096_U0_histogram1_d0),
    .histogram2_address0(AWBhistogram_10_10_2160_3840_2_1_4096_U0_histogram2_address0),
    .histogram2_ce0(AWBhistogram_10_10_2160_3840_2_1_4096_U0_histogram2_ce0),
    .histogram2_we0(AWBhistogram_10_10_2160_3840_2_1_4096_U0_histogram2_we0),
    .histogram2_d0(AWBhistogram_10_10_2160_3840_2_1_4096_U0_histogram2_d0)
);

ISPPipeline_accel_AWBNormalization_10_10_2160_3840_2_1_4096_s AWBNormalization_10_10_2160_3840_2_1_4096_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(AWBNormalization_10_10_2160_3840_2_1_4096_U0_ap_start),
    .ap_done(AWBNormalization_10_10_2160_3840_2_1_4096_U0_ap_done),
    .ap_continue(AWBNormalization_10_10_2160_3840_2_1_4096_U0_ap_continue),
    .ap_idle(AWBNormalization_10_10_2160_3840_2_1_4096_U0_ap_idle),
    .ap_ready(AWBNormalization_10_10_2160_3840_2_1_4096_U0_ap_ready),
    .impop_41_dout(impop_data_dout),
    .impop_41_empty_n(impop_data_empty_n),
    .impop_41_read(AWBNormalization_10_10_2160_3840_2_1_4096_U0_impop_41_read),
    .p_read(p_read2),
    .p_read1(p_read3),
    .ltm_in_4199_din(AWBNormalization_10_10_2160_3840_2_1_4096_U0_ltm_in_4199_din),
    .ltm_in_4199_full_n(ltm_in_4199_full_n),
    .ltm_in_4199_write(AWBNormalization_10_10_2160_3840_2_1_4096_U0_ltm_in_4199_write),
    .histogram_address0(AWBNormalization_10_10_2160_3840_2_1_4096_U0_histogram_address0),
    .histogram_ce0(AWBNormalization_10_10_2160_3840_2_1_4096_U0_histogram_ce0),
    .histogram_q0(hist1_q0),
    .histogram1_address0(AWBNormalization_10_10_2160_3840_2_1_4096_U0_histogram1_address0),
    .histogram1_ce0(AWBNormalization_10_10_2160_3840_2_1_4096_U0_histogram1_ce0),
    .histogram1_q0(hist13_q0),
    .histogram2_address0(AWBNormalization_10_10_2160_3840_2_1_4096_U0_histogram2_address0),
    .histogram2_ce0(AWBNormalization_10_10_2160_3840_2_1_4096_U0_histogram2_ce0),
    .histogram2_q0(hist14_q0),
    .thresh(thresh)
);

ISPPipeline_accel_fifo_w96_d2_S impop_data_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(AWBhistogram_10_10_2160_3840_2_1_4096_U0_impop_41_din),
    .if_full_n(impop_data_full_n),
    .if_write(AWBhistogram_10_10_2160_3840_2_1_4096_U0_impop_41_write),
    .if_dout(impop_data_dout),
    .if_empty_n(impop_data_empty_n),
    .if_read(AWBNormalization_10_10_2160_3840_2_1_4096_U0_impop_41_read)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_AWBNormalization_10_10_2160_3840_2_1_4096_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_AWBNormalization_10_10_2160_3840_2_1_4096_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_AWBNormalization_10_10_2160_3840_2_1_4096_U0_ap_ready <= ap_sync_AWBNormalization_10_10_2160_3840_2_1_4096_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_AWBhistogram_10_10_2160_3840_2_1_4096_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_AWBhistogram_10_10_2160_3840_2_1_4096_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_AWBhistogram_10_10_2160_3840_2_1_4096_U0_ap_ready <= ap_sync_AWBhistogram_10_10_2160_3840_2_1_4096_U0_ap_ready;
        end
    end
end

assign AWBNormalization_10_10_2160_3840_2_1_4096_U0_ap_continue = ap_sync_continue;

assign AWBNormalization_10_10_2160_3840_2_1_4096_U0_ap_start = ((ap_sync_reg_AWBNormalization_10_10_2160_3840_2_1_4096_U0_ap_ready ^ 1'b1) & ap_start);

assign AWBhistogram_10_10_2160_3840_2_1_4096_U0_ap_continue = ap_sync_continue;

assign AWBhistogram_10_10_2160_3840_2_1_4096_U0_ap_start = ((ap_sync_reg_AWBhistogram_10_10_2160_3840_2_1_4096_U0_ap_ready ^ 1'b1) & ap_start);

assign ap_done = ap_sync_done;

assign ap_idle = (AWBhistogram_10_10_2160_3840_2_1_4096_U0_ap_idle & AWBNormalization_10_10_2160_3840_2_1_4096_U0_ap_idle);

assign ap_ready = ap_sync_ready;

assign ap_sync_AWBNormalization_10_10_2160_3840_2_1_4096_U0_ap_ready = (ap_sync_reg_AWBNormalization_10_10_2160_3840_2_1_4096_U0_ap_ready | AWBNormalization_10_10_2160_3840_2_1_4096_U0_ap_ready);

assign ap_sync_AWBhistogram_10_10_2160_3840_2_1_4096_U0_ap_ready = (ap_sync_reg_AWBhistogram_10_10_2160_3840_2_1_4096_U0_ap_ready | AWBhistogram_10_10_2160_3840_2_1_4096_U0_ap_ready);

assign ap_sync_continue = (ap_sync_done & ap_continue);

assign ap_sync_done = (AWBhistogram_10_10_2160_3840_2_1_4096_U0_ap_done & AWBNormalization_10_10_2160_3840_2_1_4096_U0_ap_done);

assign ap_sync_ready = (ap_sync_AWBhistogram_10_10_2160_3840_2_1_4096_U0_ap_ready & ap_sync_AWBNormalization_10_10_2160_3840_2_1_4096_U0_ap_ready);

assign demosaic_out_4198_read = AWBhistogram_10_10_2160_3840_2_1_4096_U0_demosaic_out_4198_read;

assign hist01_address0 = AWBhistogram_10_10_2160_3840_2_1_4096_U0_histogram1_address0;

assign hist01_address1 = 12'd0;

assign hist01_ce0 = AWBhistogram_10_10_2160_3840_2_1_4096_U0_histogram1_ce0;

assign hist01_ce1 = 1'b0;

assign hist01_d0 = AWBhistogram_10_10_2160_3840_2_1_4096_U0_histogram1_d0;

assign hist01_d1 = 32'd0;

assign hist01_we0 = AWBhistogram_10_10_2160_3840_2_1_4096_U0_histogram1_we0;

assign hist01_we1 = 1'b0;

assign hist02_address0 = AWBhistogram_10_10_2160_3840_2_1_4096_U0_histogram2_address0;

assign hist02_address1 = 12'd0;

assign hist02_ce0 = AWBhistogram_10_10_2160_3840_2_1_4096_U0_histogram2_ce0;

assign hist02_ce1 = 1'b0;

assign hist02_d0 = AWBhistogram_10_10_2160_3840_2_1_4096_U0_histogram2_d0;

assign hist02_d1 = 32'd0;

assign hist02_we0 = AWBhistogram_10_10_2160_3840_2_1_4096_U0_histogram2_we0;

assign hist02_we1 = 1'b0;

assign hist0_address0 = AWBhistogram_10_10_2160_3840_2_1_4096_U0_histogram_address0;

assign hist0_address1 = 12'd0;

assign hist0_ce0 = AWBhistogram_10_10_2160_3840_2_1_4096_U0_histogram_ce0;

assign hist0_ce1 = 1'b0;

assign hist0_d0 = AWBhistogram_10_10_2160_3840_2_1_4096_U0_histogram_d0;

assign hist0_d1 = 32'd0;

assign hist0_we0 = AWBhistogram_10_10_2160_3840_2_1_4096_U0_histogram_we0;

assign hist0_we1 = 1'b0;

assign hist13_address0 = AWBNormalization_10_10_2160_3840_2_1_4096_U0_histogram1_address0;

assign hist13_address1 = 12'd0;

assign hist13_ce0 = AWBNormalization_10_10_2160_3840_2_1_4096_U0_histogram1_ce0;

assign hist13_ce1 = 1'b0;

assign hist13_d0 = 32'd0;

assign hist13_d1 = 32'd0;

assign hist13_we0 = 1'b0;

assign hist13_we1 = 1'b0;

assign hist14_address0 = AWBNormalization_10_10_2160_3840_2_1_4096_U0_histogram2_address0;

assign hist14_address1 = 12'd0;

assign hist14_ce0 = AWBNormalization_10_10_2160_3840_2_1_4096_U0_histogram2_ce0;

assign hist14_ce1 = 1'b0;

assign hist14_d0 = 32'd0;

assign hist14_d1 = 32'd0;

assign hist14_we0 = 1'b0;

assign hist14_we1 = 1'b0;

assign hist1_address0 = AWBNormalization_10_10_2160_3840_2_1_4096_U0_histogram_address0;

assign hist1_address1 = 12'd0;

assign hist1_ce0 = AWBNormalization_10_10_2160_3840_2_1_4096_U0_histogram_ce0;

assign hist1_ce1 = 1'b0;

assign hist1_d0 = 32'd0;

assign hist1_d1 = 32'd0;

assign hist1_we0 = 1'b0;

assign hist1_we1 = 1'b0;

assign ltm_in_4199_din = AWBNormalization_10_10_2160_3840_2_1_4096_U0_ltm_in_4199_din;

assign ltm_in_4199_write = AWBNormalization_10_10_2160_3840_2_1_4096_U0_ltm_in_4199_write;

endmodule //ISPPipeline_accel_fifo_awb_10_10_2160_3840_2_s
