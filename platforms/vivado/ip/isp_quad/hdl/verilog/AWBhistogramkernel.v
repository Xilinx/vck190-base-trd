// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.2
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module AWBhistogramkernel (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        src1_rows_read,
        src1_cols_read,
        src1_data_V_V_dout,
        src1_data_V_V_empty_n,
        src1_data_V_V_read,
        src2_data_V_V_din,
        src2_data_V_V_full_n,
        src2_data_V_V_write,
        hist_0_address0,
        hist_0_ce0,
        hist_0_we0,
        hist_0_d0,
        hist_1_address0,
        hist_1_ce0,
        hist_1_we0,
        hist_1_d0,
        hist_2_address0,
        hist_2_ce0,
        hist_2_we0,
        hist_2_d0
);

parameter    ap_ST_fsm_state1 = 11'd1;
parameter    ap_ST_fsm_state2 = 11'd2;
parameter    ap_ST_fsm_state3 = 11'd4;
parameter    ap_ST_fsm_state4 = 11'd8;
parameter    ap_ST_fsm_state5 = 11'd16;
parameter    ap_ST_fsm_state6 = 11'd32;
parameter    ap_ST_fsm_pp2_stage0 = 11'd64;
parameter    ap_ST_fsm_pp2_stage1 = 11'd128;
parameter    ap_ST_fsm_state11 = 11'd256;
parameter    ap_ST_fsm_pp3_stage0 = 11'd512;
parameter    ap_ST_fsm_state15 = 11'd1024;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [15:0] src1_rows_read;
input  [15:0] src1_cols_read;
input  [59:0] src1_data_V_V_dout;
input   src1_data_V_V_empty_n;
output   src1_data_V_V_read;
output  [59:0] src2_data_V_V_din;
input   src2_data_V_V_full_n;
output   src2_data_V_V_write;
output  [9:0] hist_0_address0;
output   hist_0_ce0;
output   hist_0_we0;
output  [31:0] hist_0_d0;
output  [9:0] hist_1_address0;
output   hist_1_ce0;
output   hist_1_we0;
output  [31:0] hist_1_d0;
output  [9:0] hist_2_address0;
output   hist_2_ce0;
output   hist_2_we0;
output  [31:0] hist_2_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg src1_data_V_V_read;
reg src2_data_V_V_write;
reg[9:0] hist_0_address0;
reg hist_0_ce0;
reg hist_0_we0;
reg[31:0] hist_0_d0;
reg[9:0] hist_1_address0;
reg hist_1_ce0;
reg hist_1_we0;
reg[31:0] hist_1_d0;
reg[9:0] hist_2_address0;
reg hist_2_ce0;
reg hist_2_we0;
reg[31:0] hist_2_d0;

(* fsm_encoding = "none" *) reg   [10:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    src1_data_V_V_blk_n;
wire    ap_CS_fsm_pp2_stage1;
reg    ap_enable_reg_pp2_iter0;
wire    ap_block_pp2_stage1;
reg   [0:0] icmp_ln503_reg_1360;
wire    ap_CS_fsm_pp2_stage0;
reg    ap_enable_reg_pp2_iter1;
wire    ap_block_pp2_stage0;
reg    src2_data_V_V_blk_n;
reg   [31:0] col_0_reg_621;
reg   [10:0] t_V_1_reg_633;
wire   [15:0] zext_ln426_fu_704_p1;
reg   [15:0] zext_ln426_reg_1325;
wire   [10:0] k_fu_714_p2;
wire    ap_CS_fsm_state2;
wire   [10:0] i_V_fu_733_p2;
wire    ap_CS_fsm_state4;
wire   [0:0] icmp_ln497_fu_755_p2;
wire    ap_CS_fsm_state6;
wire   [15:0] row_fu_760_p2;
reg   [15:0] row_reg_1350;
wire   [31:0] zext_ln503_fu_789_p1;
reg   [31:0] zext_ln503_reg_1355;
wire   [0:0] icmp_ln503_fu_793_p2;
wire    ap_block_state7_pp2_stage0_iter0;
reg    ap_block_state9_pp2_stage0_iter1;
reg    ap_block_pp2_stage0_11001;
reg   [0:0] icmp_ln503_reg_1360_pp2_iter1_reg;
reg   [9:0] tmp_hist_0_V_addr_2_reg_1364;
reg    ap_block_state8_pp2_stage1_iter0;
wire    ap_block_state10_pp2_stage1_iter1;
reg    ap_block_pp2_stage1_11001;
reg   [9:0] tmp_hist_1_V_addr_2_reg_1369;
reg   [9:0] tmp_hist_2_V_addr_2_reg_1374;
reg   [9:0] tmp_hist_3_V_addr_2_reg_1379;
reg   [9:0] tmp_hist_4_V_addr_2_reg_1384;
reg   [9:0] tmp_hist_5_V_addr_2_reg_1389;
wire   [31:0] col_fu_976_p2;
reg   [31:0] col_reg_1394;
reg   [9:0] tmp_hist1_0_V_addr_2_reg_1399;
reg   [9:0] tmp_hist1_1_V_addr_2_reg_1404;
reg   [9:0] tmp_hist1_2_V_addr_2_reg_1409;
reg   [9:0] tmp_hist1_3_V_addr_2_reg_1414;
reg   [9:0] tmp_hist1_4_V_addr_2_reg_1419;
reg   [9:0] tmp_hist1_5_V_addr_2_reg_1424;
wire   [0:0] icmp_ln887_6_fu_1244_p2;
reg   [0:0] icmp_ln887_6_reg_1429;
wire    ap_CS_fsm_pp3_stage0;
wire    ap_block_state12_pp3_stage0_iter0;
wire    ap_block_state13_pp3_stage0_iter1;
wire    ap_block_state14_pp3_stage0_iter2;
wire    ap_block_pp3_stage0_11001;
reg   [0:0] icmp_ln887_6_reg_1429_pp3_iter1_reg;
wire   [10:0] i_V_1_fu_1250_p2;
reg    ap_enable_reg_pp3_iter0;
wire   [63:0] zext_ln544_1_fu_1256_p1;
reg   [63:0] zext_ln544_1_reg_1438;
reg   [63:0] zext_ln544_1_reg_1438_pp3_iter1_reg;
wire   [31:0] add_ln563_1_fu_1266_p2;
reg   [31:0] add_ln563_1_reg_1491;
wire   [31:0] add_ln563_4_fu_1272_p2;
reg   [31:0] add_ln563_4_reg_1506;
wire   [31:0] add_ln563_7_fu_1278_p2;
reg   [31:0] add_ln563_7_reg_1521;
reg    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_exit_iter0_state7;
reg    ap_block_pp2_stage1_subdone;
wire    ap_block_pp3_stage0_subdone;
reg    ap_condition_pp3_exit_iter0_state12;
reg    ap_enable_reg_pp3_iter1;
reg    ap_enable_reg_pp3_iter2;
reg   [9:0] tmp_hist_0_V_address0;
reg    tmp_hist_0_V_ce0;
reg    tmp_hist_0_V_we0;
reg   [31:0] tmp_hist_0_V_d0;
wire   [31:0] tmp_hist_0_V_q0;
reg   [9:0] tmp_hist_1_V_address0;
reg    tmp_hist_1_V_ce0;
reg    tmp_hist_1_V_we0;
reg   [31:0] tmp_hist_1_V_d0;
wire   [31:0] tmp_hist_1_V_q0;
reg   [9:0] tmp_hist_2_V_address0;
reg    tmp_hist_2_V_ce0;
reg    tmp_hist_2_V_we0;
reg   [31:0] tmp_hist_2_V_d0;
wire   [31:0] tmp_hist_2_V_q0;
reg   [9:0] tmp_hist_3_V_address0;
reg    tmp_hist_3_V_ce0;
reg    tmp_hist_3_V_we0;
reg   [31:0] tmp_hist_3_V_d0;
wire   [31:0] tmp_hist_3_V_q0;
reg   [9:0] tmp_hist_4_V_address0;
reg    tmp_hist_4_V_ce0;
reg    tmp_hist_4_V_we0;
reg   [31:0] tmp_hist_4_V_d0;
wire   [31:0] tmp_hist_4_V_q0;
reg   [9:0] tmp_hist_5_V_address0;
reg    tmp_hist_5_V_ce0;
reg    tmp_hist_5_V_we0;
reg   [31:0] tmp_hist_5_V_d0;
wire   [31:0] tmp_hist_5_V_q0;
reg   [9:0] tmp_hist1_0_V_address0;
reg    tmp_hist1_0_V_ce0;
reg    tmp_hist1_0_V_we0;
reg   [31:0] tmp_hist1_0_V_d0;
wire   [31:0] tmp_hist1_0_V_q0;
reg   [9:0] tmp_hist1_1_V_address0;
reg    tmp_hist1_1_V_ce0;
reg    tmp_hist1_1_V_we0;
reg   [31:0] tmp_hist1_1_V_d0;
wire   [31:0] tmp_hist1_1_V_q0;
reg   [9:0] tmp_hist1_2_V_address0;
reg    tmp_hist1_2_V_ce0;
reg    tmp_hist1_2_V_we0;
reg   [31:0] tmp_hist1_2_V_d0;
wire   [31:0] tmp_hist1_2_V_q0;
reg   [9:0] tmp_hist1_3_V_address0;
reg    tmp_hist1_3_V_ce0;
reg    tmp_hist1_3_V_we0;
reg   [31:0] tmp_hist1_3_V_d0;
wire   [31:0] tmp_hist1_3_V_q0;
reg   [9:0] tmp_hist1_4_V_address0;
reg    tmp_hist1_4_V_ce0;
reg    tmp_hist1_4_V_we0;
reg   [31:0] tmp_hist1_4_V_d0;
wire   [31:0] tmp_hist1_4_V_q0;
reg   [9:0] tmp_hist1_5_V_address0;
reg    tmp_hist1_5_V_ce0;
reg    tmp_hist1_5_V_we0;
reg   [31:0] tmp_hist1_5_V_d0;
wire   [31:0] tmp_hist1_5_V_q0;
reg   [10:0] k_0_reg_588;
wire   [0:0] icmp_ln445_fu_708_p2;
reg   [10:0] t_V_reg_599;
wire    ap_CS_fsm_state3;
wire   [0:0] icmp_ln887_fu_727_p2;
reg   [15:0] row_0_reg_610;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state5;
reg   [31:0] ap_phi_mux_col_0_phi_fu_625_p4;
wire   [63:0] zext_ln455_fu_720_p1;
wire   [63:0] zext_ln544_fu_739_p1;
wire   [63:0] zext_ln535_fu_826_p1;
wire   [63:0] zext_ln535_1_fu_855_p1;
wire   [63:0] zext_ln535_2_fu_884_p1;
wire   [63:0] zext_ln535_3_fu_913_p1;
wire   [63:0] zext_ln535_4_fu_942_p1;
wire   [63:0] zext_ln535_5_fu_971_p1;
wire   [63:0] zext_ln536_fu_1017_p1;
wire   [63:0] zext_ln536_1_fu_1053_p1;
wire   [63:0] zext_ln536_2_fu_1089_p1;
wire   [63:0] zext_ln536_3_fu_1125_p1;
wire   [63:0] zext_ln536_4_fu_1161_p1;
wire   [63:0] zext_ln536_5_fu_1197_p1;
wire    ap_block_pp3_stage0;
reg    ap_block_pp2_stage1_01001;
reg    ap_block_pp2_stage0_01001;
wire   [31:0] add_ln563_2_fu_1290_p2;
wire   [31:0] add_ln563_5_fu_1302_p2;
wire   [31:0] add_ln563_8_fu_1314_p2;
wire   [31:0] add_ln700_fu_1010_p2;
wire   [31:0] add_ln700_8_fu_1202_p2;
wire   [31:0] add_ln700_9_fu_1046_p2;
wire   [31:0] add_ln700_10_fu_1209_p2;
wire   [31:0] add_ln700_2_fu_1082_p2;
wire   [31:0] add_ln700_11_fu_1216_p2;
wire   [31:0] add_ln700_3_fu_1118_p2;
wire   [31:0] add_ln700_12_fu_1223_p2;
wire   [31:0] add_ln700_4_fu_1154_p2;
wire   [31:0] add_ln700_13_fu_1230_p2;
wire   [31:0] add_ln700_5_fu_1190_p2;
wire   [31:0] add_ln700_14_fu_1237_p2;
wire   [14:0] tmp_83_fu_694_p4;
wire   [15:0] add_ln503_fu_766_p2;
wire   [14:0] tmp_84_fu_771_p4;
wire   [15:0] tmp_85_fu_781_p3;
wire   [9:0] trunc_ln728_fu_798_p1;
wire   [15:0] shl_ln_fu_802_p3;
wire   [15:0] or_ln1193_fu_810_p2;
wire   [9:0] tmp_61_fu_816_p4;
wire   [9:0] grp_fu_644_p4;
wire   [15:0] shl_ln728_2_fu_831_p3;
wire   [15:0] or_ln1193_2_fu_839_p2;
wire   [9:0] tmp_63_fu_845_p4;
wire   [9:0] grp_fu_654_p4;
wire   [15:0] shl_ln728_4_fu_860_p3;
wire   [15:0] or_ln1193_4_fu_868_p2;
wire   [9:0] tmp_65_fu_874_p4;
wire   [9:0] grp_fu_664_p4;
wire   [15:0] shl_ln728_6_fu_889_p3;
wire   [15:0] or_ln1193_6_fu_897_p2;
wire   [9:0] tmp_67_fu_903_p4;
wire   [9:0] grp_fu_674_p4;
wire   [15:0] shl_ln728_8_fu_918_p3;
wire   [15:0] or_ln1193_8_fu_926_p2;
wire   [9:0] tmp_69_fu_932_p4;
wire   [9:0] grp_fu_684_p4;
wire   [15:0] shl_ln728_s_fu_947_p3;
wire   [15:0] or_ln1193_10_fu_955_p2;
wire   [9:0] tmp_71_fu_961_p4;
wire   [9:0] trunc_ln728_1_fu_982_p1;
wire   [15:0] shl_ln728_1_fu_986_p3;
wire   [15:0] or_ln1193_1_fu_994_p2;
wire   [9:0] tmp_62_fu_1000_p4;
wire   [15:0] shl_ln728_3_fu_1022_p3;
wire   [15:0] or_ln1193_3_fu_1030_p2;
wire   [9:0] tmp_64_fu_1036_p4;
wire   [15:0] shl_ln728_5_fu_1058_p3;
wire   [15:0] or_ln1193_5_fu_1066_p2;
wire   [9:0] tmp_66_fu_1072_p4;
wire   [15:0] shl_ln728_7_fu_1094_p3;
wire   [15:0] or_ln1193_7_fu_1102_p2;
wire   [9:0] tmp_68_fu_1108_p4;
wire   [15:0] shl_ln728_9_fu_1130_p3;
wire   [15:0] or_ln1193_9_fu_1138_p2;
wire   [9:0] tmp_70_fu_1144_p4;
wire   [15:0] shl_ln728_10_fu_1166_p3;
wire   [15:0] or_ln1193_11_fu_1174_p2;
wire   [9:0] tmp_72_fu_1180_p4;
wire   [31:0] add_ln563_fu_1284_p2;
wire   [31:0] add_ln563_3_fu_1296_p2;
wire   [31:0] add_ln563_6_fu_1308_p2;
wire    ap_CS_fsm_state15;
reg   [10:0] ap_NS_fsm;
reg    ap_block_pp2;
reg    ap_block_pp3;
reg    ap_enable_operation_115;
reg    ap_enable_state8_pp2_iter0_stage1;
reg    ap_enable_operation_158;
reg    ap_enable_state9_pp2_iter1_stage0;
reg    ap_enable_operation_160;
reg    ap_enable_operation_122;
reg    ap_enable_operation_168;
reg    ap_enable_operation_170;
reg    ap_enable_operation_129;
reg    ap_enable_operation_178;
reg    ap_enable_operation_180;
reg    ap_enable_operation_136;
reg    ap_enable_operation_188;
reg    ap_enable_operation_190;
reg    ap_enable_operation_143;
reg    ap_enable_operation_198;
reg    ap_enable_operation_200;
reg    ap_enable_operation_150;
reg    ap_enable_operation_208;
reg    ap_enable_operation_210;
reg    ap_enable_operation_163;
reg    ap_enable_operation_219;
reg    ap_enable_state10_pp2_iter1_stage1;
reg    ap_enable_operation_221;
reg    ap_enable_operation_173;
reg    ap_enable_operation_224;
reg    ap_enable_operation_226;
reg    ap_enable_operation_183;
reg    ap_enable_operation_229;
reg    ap_enable_operation_231;
reg    ap_enable_operation_193;
reg    ap_enable_operation_234;
reg    ap_enable_operation_236;
reg    ap_enable_operation_203;
reg    ap_enable_operation_239;
reg    ap_enable_operation_241;
reg    ap_enable_operation_213;
reg    ap_enable_operation_244;
reg    ap_enable_operation_246;
reg    ap_idle_pp2;
wire    ap_enable_pp2;
reg    ap_idle_pp3;
wire    ap_enable_pp3;

// power-on initialization
initial begin
#0 ap_CS_fsm = 11'd1;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp3_iter0 = 1'b0;
#0 ap_enable_reg_pp3_iter1 = 1'b0;
#0 ap_enable_reg_pp3_iter2 = 1'b0;
end

AWBhistogramkernercU #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
tmp_hist_0_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(tmp_hist_0_V_address0),
    .ce0(tmp_hist_0_V_ce0),
    .we0(tmp_hist_0_V_we0),
    .d0(tmp_hist_0_V_d0),
    .q0(tmp_hist_0_V_q0)
);

AWBhistogramkernercU #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
tmp_hist_1_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(tmp_hist_1_V_address0),
    .ce0(tmp_hist_1_V_ce0),
    .we0(tmp_hist_1_V_we0),
    .d0(tmp_hist_1_V_d0),
    .q0(tmp_hist_1_V_q0)
);

AWBhistogramkernercU #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
tmp_hist_2_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(tmp_hist_2_V_address0),
    .ce0(tmp_hist_2_V_ce0),
    .we0(tmp_hist_2_V_we0),
    .d0(tmp_hist_2_V_d0),
    .q0(tmp_hist_2_V_q0)
);

AWBhistogramkernercU #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
tmp_hist_3_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(tmp_hist_3_V_address0),
    .ce0(tmp_hist_3_V_ce0),
    .we0(tmp_hist_3_V_we0),
    .d0(tmp_hist_3_V_d0),
    .q0(tmp_hist_3_V_q0)
);

AWBhistogramkernercU #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
tmp_hist_4_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(tmp_hist_4_V_address0),
    .ce0(tmp_hist_4_V_ce0),
    .we0(tmp_hist_4_V_we0),
    .d0(tmp_hist_4_V_d0),
    .q0(tmp_hist_4_V_q0)
);

AWBhistogramkernercU #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
tmp_hist_5_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(tmp_hist_5_V_address0),
    .ce0(tmp_hist_5_V_ce0),
    .we0(tmp_hist_5_V_we0),
    .d0(tmp_hist_5_V_d0),
    .q0(tmp_hist_5_V_q0)
);

AWBhistogramkernercU #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
tmp_hist1_0_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(tmp_hist1_0_V_address0),
    .ce0(tmp_hist1_0_V_ce0),
    .we0(tmp_hist1_0_V_we0),
    .d0(tmp_hist1_0_V_d0),
    .q0(tmp_hist1_0_V_q0)
);

AWBhistogramkernercU #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
tmp_hist1_1_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(tmp_hist1_1_V_address0),
    .ce0(tmp_hist1_1_V_ce0),
    .we0(tmp_hist1_1_V_we0),
    .d0(tmp_hist1_1_V_d0),
    .q0(tmp_hist1_1_V_q0)
);

AWBhistogramkernercU #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
tmp_hist1_2_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(tmp_hist1_2_V_address0),
    .ce0(tmp_hist1_2_V_ce0),
    .we0(tmp_hist1_2_V_we0),
    .d0(tmp_hist1_2_V_d0),
    .q0(tmp_hist1_2_V_q0)
);

AWBhistogramkernercU #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
tmp_hist1_3_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(tmp_hist1_3_V_address0),
    .ce0(tmp_hist1_3_V_ce0),
    .we0(tmp_hist1_3_V_we0),
    .d0(tmp_hist1_3_V_d0),
    .q0(tmp_hist1_3_V_q0)
);

AWBhistogramkernercU #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
tmp_hist1_4_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(tmp_hist1_4_V_address0),
    .ce0(tmp_hist1_4_V_ce0),
    .we0(tmp_hist1_4_V_we0),
    .d0(tmp_hist1_4_V_d0),
    .q0(tmp_hist1_4_V_q0)
);

AWBhistogramkernercU #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
tmp_hist1_5_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(tmp_hist1_5_V_address0),
    .ce0(tmp_hist1_5_V_ce0),
    .we0(tmp_hist1_5_V_we0),
    .d0(tmp_hist1_5_V_d0),
    .q0(tmp_hist1_5_V_q0)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_condition_pp2_exit_iter0_state7))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if (((icmp_ln497_fu_755_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage1_subdone) & (1'b1 == ap_CS_fsm_pp2_stage1))) begin
            ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
        end else if (((icmp_ln497_fu_755_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
            ap_enable_reg_pp2_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp3_stage0_subdone) & (1'b1 == ap_condition_pp3_exit_iter0_state12) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
            ap_enable_reg_pp3_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln497_fu_755_p2 == 1'd1))) begin
            ap_enable_reg_pp3_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp3_exit_iter0_state12)) begin
                ap_enable_reg_pp3_iter1 <= (1'b1 ^ ap_condition_pp3_exit_iter0_state12);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter2 <= ap_enable_reg_pp3_iter1;
        end else if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln497_fu_755_p2 == 1'd1))) begin
            ap_enable_reg_pp3_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln503_reg_1360 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        col_0_reg_621 <= col_reg_1394;
    end else if (((icmp_ln497_fu_755_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        col_0_reg_621 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln445_fu_708_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        k_0_reg_588 <= k_fu_714_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        k_0_reg_588 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        row_0_reg_610 <= 16'd0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        row_0_reg_610 <= row_reg_1350;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln497_fu_755_p2 == 1'd1))) begin
        t_V_1_reg_633 <= 11'd0;
    end else if (((icmp_ln887_6_fu_1244_p2 == 1'd0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        t_V_1_reg_633 <= i_V_1_fu_1250_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln887_fu_727_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        t_V_reg_599 <= i_V_fu_733_p2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        t_V_reg_599 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln887_6_reg_1429 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        add_ln563_1_reg_1491 <= add_ln563_1_fu_1266_p2;
        add_ln563_4_reg_1506 <= add_ln563_4_fu_1272_p2;
        add_ln563_7_reg_1521 <= add_ln563_7_fu_1278_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln503_reg_1360 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_block_pp2_stage1_11001))) begin
        col_reg_1394 <= col_fu_976_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        icmp_ln503_reg_1360 <= icmp_ln503_fu_793_p2;
        icmp_ln503_reg_1360_pp2_iter1_reg <= icmp_ln503_reg_1360;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        icmp_ln887_6_reg_1429 <= icmp_ln887_6_fu_1244_p2;
        icmp_ln887_6_reg_1429_pp3_iter1_reg <= icmp_ln887_6_reg_1429;
        zext_ln544_1_reg_1438_pp3_iter1_reg[10 : 0] <= zext_ln544_1_reg_1438[10 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        row_reg_1350 <= row_fu_760_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln503_reg_1360 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        tmp_hist1_0_V_addr_2_reg_1399 <= zext_ln536_fu_1017_p1;
        tmp_hist1_1_V_addr_2_reg_1404 <= zext_ln536_1_fu_1053_p1;
        tmp_hist1_2_V_addr_2_reg_1409 <= zext_ln536_2_fu_1089_p1;
        tmp_hist1_3_V_addr_2_reg_1414 <= zext_ln536_3_fu_1125_p1;
        tmp_hist1_4_V_addr_2_reg_1419 <= zext_ln536_4_fu_1161_p1;
        tmp_hist1_5_V_addr_2_reg_1424 <= zext_ln536_5_fu_1197_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln503_reg_1360 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_block_pp2_stage1_11001))) begin
        tmp_hist_0_V_addr_2_reg_1364 <= zext_ln535_fu_826_p1;
        tmp_hist_1_V_addr_2_reg_1369 <= zext_ln535_1_fu_855_p1;
        tmp_hist_2_V_addr_2_reg_1374 <= zext_ln535_2_fu_884_p1;
        tmp_hist_3_V_addr_2_reg_1379 <= zext_ln535_3_fu_913_p1;
        tmp_hist_4_V_addr_2_reg_1384 <= zext_ln535_4_fu_942_p1;
        tmp_hist_5_V_addr_2_reg_1389 <= zext_ln535_5_fu_971_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        zext_ln426_reg_1325[14 : 0] <= zext_ln426_fu_704_p1[14 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln497_fu_755_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        zext_ln503_reg_1355[15 : 1] <= zext_ln503_fu_789_p1[15 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln887_6_fu_1244_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        zext_ln544_1_reg_1438[10 : 0] <= zext_ln544_1_fu_1256_p1[10 : 0];
    end
end

always @ (*) begin
    if ((icmp_ln503_fu_793_p2 == 1'd1)) begin
        ap_condition_pp2_exit_iter0_state7 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state7 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln887_6_fu_1244_p2 == 1'd1)) begin
        ap_condition_pp3_exit_iter0_state12 = 1'b1;
    end else begin
        ap_condition_pp3_exit_iter0_state12 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter2 == 1'b0) & (ap_enable_reg_pp3_iter1 == 1'b0) & (ap_enable_reg_pp3_iter0 == 1'b0))) begin
        ap_idle_pp3 = 1'b1;
    end else begin
        ap_idle_pp3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (icmp_ln503_reg_1360 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        ap_phi_mux_col_0_phi_fu_625_p4 = col_reg_1394;
    end else begin
        ap_phi_mux_col_0_phi_fu_625_p4 = col_0_reg_621;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter2 == 1'b1))) begin
        hist_0_address0 = zext_ln544_1_reg_1438_pp3_iter1_reg;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        hist_0_address0 = zext_ln455_fu_720_p1;
    end else begin
        hist_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((ap_enable_reg_pp3_iter2 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001)))) begin
        hist_0_ce0 = 1'b1;
    end else begin
        hist_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter2 == 1'b1))) begin
        hist_0_d0 = add_ln563_2_fu_1290_p2;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        hist_0_d0 = 32'd0;
    end else begin
        hist_0_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln887_6_reg_1429_pp3_iter1_reg == 1'd0) & (ap_enable_reg_pp3_iter2 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001)) | ((icmp_ln445_fu_708_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        hist_0_we0 = 1'b1;
    end else begin
        hist_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter2 == 1'b1))) begin
        hist_1_address0 = zext_ln544_1_reg_1438_pp3_iter1_reg;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        hist_1_address0 = zext_ln455_fu_720_p1;
    end else begin
        hist_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((ap_enable_reg_pp3_iter2 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001)))) begin
        hist_1_ce0 = 1'b1;
    end else begin
        hist_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter2 == 1'b1))) begin
        hist_1_d0 = add_ln563_5_fu_1302_p2;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        hist_1_d0 = 32'd0;
    end else begin
        hist_1_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln887_6_reg_1429_pp3_iter1_reg == 1'd0) & (ap_enable_reg_pp3_iter2 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001)) | ((icmp_ln445_fu_708_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        hist_1_we0 = 1'b1;
    end else begin
        hist_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter2 == 1'b1))) begin
        hist_2_address0 = zext_ln544_1_reg_1438_pp3_iter1_reg;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        hist_2_address0 = zext_ln455_fu_720_p1;
    end else begin
        hist_2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((ap_enable_reg_pp3_iter2 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001)))) begin
        hist_2_ce0 = 1'b1;
    end else begin
        hist_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter2 == 1'b1))) begin
        hist_2_d0 = add_ln563_8_fu_1314_p2;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        hist_2_d0 = 32'd0;
    end else begin
        hist_2_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln887_6_reg_1429_pp3_iter1_reg == 1'd0) & (ap_enable_reg_pp3_iter2 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001)) | ((icmp_ln445_fu_708_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        hist_2_we0 = 1'b1;
    end else begin
        hist_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage0) & (icmp_ln503_reg_1360 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((icmp_ln503_reg_1360 == 1'd0) & (1'b0 == ap_block_pp2_stage1) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1)))) begin
        src1_data_V_V_blk_n = src1_data_V_V_empty_n;
    end else begin
        src1_data_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((icmp_ln503_reg_1360 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001)) | ((icmp_ln503_reg_1360 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_block_pp2_stage1_11001)))) begin
        src1_data_V_V_read = 1'b1;
    end else begin
        src1_data_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage0) & (icmp_ln503_reg_1360 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((icmp_ln503_reg_1360 == 1'd0) & (1'b0 == ap_block_pp2_stage1) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1)))) begin
        src2_data_V_V_blk_n = src2_data_V_V_full_n;
    end else begin
        src2_data_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((icmp_ln503_reg_1360 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001)) | ((icmp_ln503_reg_1360 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_block_pp2_stage1_11001)))) begin
        src2_data_V_V_write = 1'b1;
    end else begin
        src2_data_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        tmp_hist1_0_V_address0 = zext_ln544_1_reg_1438;
    end else if (((1'b0 == ap_block_pp2_stage1) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1))) begin
        tmp_hist1_0_V_address0 = tmp_hist1_0_V_addr_2_reg_1399;
    end else if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        tmp_hist1_0_V_address0 = zext_ln536_fu_1017_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        tmp_hist1_0_V_address0 = zext_ln544_fu_739_p1;
    end else begin
        tmp_hist1_0_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | ((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001)) | ((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_block_pp2_stage1_11001)) | ((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001)))) begin
        tmp_hist1_0_V_ce0 = 1'b1;
    end else begin
        tmp_hist1_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage1) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1))) begin
        tmp_hist1_0_V_d0 = add_ln700_8_fu_1202_p2;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        tmp_hist1_0_V_d0 = 32'd0;
    end else begin
        tmp_hist1_0_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln503_reg_1360_pp2_iter1_reg == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_block_pp2_stage1_11001)) | ((icmp_ln887_fu_727_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4)))) begin
        tmp_hist1_0_V_we0 = 1'b1;
    end else begin
        tmp_hist1_0_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        tmp_hist1_1_V_address0 = zext_ln544_1_reg_1438;
    end else if (((1'b0 == ap_block_pp2_stage1) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1))) begin
        tmp_hist1_1_V_address0 = tmp_hist1_1_V_addr_2_reg_1404;
    end else if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        tmp_hist1_1_V_address0 = zext_ln536_1_fu_1053_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        tmp_hist1_1_V_address0 = zext_ln544_fu_739_p1;
    end else begin
        tmp_hist1_1_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | ((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001)) | ((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_block_pp2_stage1_11001)) | ((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001)))) begin
        tmp_hist1_1_V_ce0 = 1'b1;
    end else begin
        tmp_hist1_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage1) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1))) begin
        tmp_hist1_1_V_d0 = add_ln700_10_fu_1209_p2;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        tmp_hist1_1_V_d0 = 32'd0;
    end else begin
        tmp_hist1_1_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln503_reg_1360_pp2_iter1_reg == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_block_pp2_stage1_11001)) | ((icmp_ln887_fu_727_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4)))) begin
        tmp_hist1_1_V_we0 = 1'b1;
    end else begin
        tmp_hist1_1_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        tmp_hist1_2_V_address0 = zext_ln544_1_reg_1438;
    end else if (((1'b0 == ap_block_pp2_stage1) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1))) begin
        tmp_hist1_2_V_address0 = tmp_hist1_2_V_addr_2_reg_1409;
    end else if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        tmp_hist1_2_V_address0 = zext_ln536_2_fu_1089_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        tmp_hist1_2_V_address0 = zext_ln544_fu_739_p1;
    end else begin
        tmp_hist1_2_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | ((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001)) | ((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_block_pp2_stage1_11001)) | ((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001)))) begin
        tmp_hist1_2_V_ce0 = 1'b1;
    end else begin
        tmp_hist1_2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage1) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1))) begin
        tmp_hist1_2_V_d0 = add_ln700_11_fu_1216_p2;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        tmp_hist1_2_V_d0 = 32'd0;
    end else begin
        tmp_hist1_2_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln503_reg_1360_pp2_iter1_reg == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_block_pp2_stage1_11001)) | ((icmp_ln887_fu_727_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4)))) begin
        tmp_hist1_2_V_we0 = 1'b1;
    end else begin
        tmp_hist1_2_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        tmp_hist1_3_V_address0 = zext_ln544_1_fu_1256_p1;
    end else if (((1'b0 == ap_block_pp2_stage1) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1))) begin
        tmp_hist1_3_V_address0 = tmp_hist1_3_V_addr_2_reg_1414;
    end else if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        tmp_hist1_3_V_address0 = zext_ln536_3_fu_1125_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        tmp_hist1_3_V_address0 = zext_ln544_fu_739_p1;
    end else begin
        tmp_hist1_3_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | ((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001)) | ((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_block_pp2_stage1_11001)) | ((ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001)))) begin
        tmp_hist1_3_V_ce0 = 1'b1;
    end else begin
        tmp_hist1_3_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage1) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1))) begin
        tmp_hist1_3_V_d0 = add_ln700_12_fu_1223_p2;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        tmp_hist1_3_V_d0 = 32'd0;
    end else begin
        tmp_hist1_3_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln503_reg_1360_pp2_iter1_reg == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_block_pp2_stage1_11001)) | ((icmp_ln887_fu_727_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4)))) begin
        tmp_hist1_3_V_we0 = 1'b1;
    end else begin
        tmp_hist1_3_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        tmp_hist1_4_V_address0 = zext_ln544_1_fu_1256_p1;
    end else if (((1'b0 == ap_block_pp2_stage1) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1))) begin
        tmp_hist1_4_V_address0 = tmp_hist1_4_V_addr_2_reg_1419;
    end else if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        tmp_hist1_4_V_address0 = zext_ln536_4_fu_1161_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        tmp_hist1_4_V_address0 = zext_ln544_fu_739_p1;
    end else begin
        tmp_hist1_4_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | ((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001)) | ((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_block_pp2_stage1_11001)) | ((ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001)))) begin
        tmp_hist1_4_V_ce0 = 1'b1;
    end else begin
        tmp_hist1_4_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage1) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1))) begin
        tmp_hist1_4_V_d0 = add_ln700_13_fu_1230_p2;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        tmp_hist1_4_V_d0 = 32'd0;
    end else begin
        tmp_hist1_4_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln503_reg_1360_pp2_iter1_reg == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_block_pp2_stage1_11001)) | ((icmp_ln887_fu_727_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4)))) begin
        tmp_hist1_4_V_we0 = 1'b1;
    end else begin
        tmp_hist1_4_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        tmp_hist1_5_V_address0 = zext_ln544_1_fu_1256_p1;
    end else if (((1'b0 == ap_block_pp2_stage1) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1))) begin
        tmp_hist1_5_V_address0 = tmp_hist1_5_V_addr_2_reg_1424;
    end else if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        tmp_hist1_5_V_address0 = zext_ln536_5_fu_1197_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        tmp_hist1_5_V_address0 = zext_ln544_fu_739_p1;
    end else begin
        tmp_hist1_5_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | ((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001)) | ((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_block_pp2_stage1_11001)) | ((ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001)))) begin
        tmp_hist1_5_V_ce0 = 1'b1;
    end else begin
        tmp_hist1_5_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage1) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1))) begin
        tmp_hist1_5_V_d0 = add_ln700_14_fu_1237_p2;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        tmp_hist1_5_V_d0 = 32'd0;
    end else begin
        tmp_hist1_5_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln503_reg_1360_pp2_iter1_reg == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_block_pp2_stage1_11001)) | ((icmp_ln887_fu_727_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4)))) begin
        tmp_hist1_5_V_we0 = 1'b1;
    end else begin
        tmp_hist1_5_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        tmp_hist_0_V_address0 = zext_ln544_1_reg_1438;
    end else if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        tmp_hist_0_V_address0 = tmp_hist_0_V_addr_2_reg_1364;
    end else if (((1'b0 == ap_block_pp2_stage1) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1))) begin
        tmp_hist_0_V_address0 = zext_ln535_fu_826_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        tmp_hist_0_V_address0 = zext_ln544_fu_739_p1;
    end else begin
        tmp_hist_0_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | ((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001)) | ((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_block_pp2_stage1_11001)) | ((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001)))) begin
        tmp_hist_0_V_ce0 = 1'b1;
    end else begin
        tmp_hist_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        tmp_hist_0_V_d0 = add_ln700_fu_1010_p2;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        tmp_hist_0_V_d0 = 32'd0;
    end else begin
        tmp_hist_0_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln503_reg_1360 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001)) | ((icmp_ln887_fu_727_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4)))) begin
        tmp_hist_0_V_we0 = 1'b1;
    end else begin
        tmp_hist_0_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        tmp_hist_1_V_address0 = zext_ln544_1_reg_1438;
    end else if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        tmp_hist_1_V_address0 = tmp_hist_1_V_addr_2_reg_1369;
    end else if (((1'b0 == ap_block_pp2_stage1) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1))) begin
        tmp_hist_1_V_address0 = zext_ln535_1_fu_855_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        tmp_hist_1_V_address0 = zext_ln544_fu_739_p1;
    end else begin
        tmp_hist_1_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | ((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001)) | ((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_block_pp2_stage1_11001)) | ((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001)))) begin
        tmp_hist_1_V_ce0 = 1'b1;
    end else begin
        tmp_hist_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        tmp_hist_1_V_d0 = add_ln700_9_fu_1046_p2;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        tmp_hist_1_V_d0 = 32'd0;
    end else begin
        tmp_hist_1_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln503_reg_1360 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001)) | ((icmp_ln887_fu_727_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4)))) begin
        tmp_hist_1_V_we0 = 1'b1;
    end else begin
        tmp_hist_1_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        tmp_hist_2_V_address0 = zext_ln544_1_reg_1438;
    end else if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        tmp_hist_2_V_address0 = tmp_hist_2_V_addr_2_reg_1374;
    end else if (((1'b0 == ap_block_pp2_stage1) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1))) begin
        tmp_hist_2_V_address0 = zext_ln535_2_fu_884_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        tmp_hist_2_V_address0 = zext_ln544_fu_739_p1;
    end else begin
        tmp_hist_2_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | ((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001)) | ((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_block_pp2_stage1_11001)) | ((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001)))) begin
        tmp_hist_2_V_ce0 = 1'b1;
    end else begin
        tmp_hist_2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        tmp_hist_2_V_d0 = add_ln700_2_fu_1082_p2;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        tmp_hist_2_V_d0 = 32'd0;
    end else begin
        tmp_hist_2_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln503_reg_1360 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001)) | ((icmp_ln887_fu_727_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4)))) begin
        tmp_hist_2_V_we0 = 1'b1;
    end else begin
        tmp_hist_2_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        tmp_hist_3_V_address0 = zext_ln544_1_fu_1256_p1;
    end else if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        tmp_hist_3_V_address0 = tmp_hist_3_V_addr_2_reg_1379;
    end else if (((1'b0 == ap_block_pp2_stage1) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1))) begin
        tmp_hist_3_V_address0 = zext_ln535_3_fu_913_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        tmp_hist_3_V_address0 = zext_ln544_fu_739_p1;
    end else begin
        tmp_hist_3_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | ((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001)) | ((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_block_pp2_stage1_11001)) | ((ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001)))) begin
        tmp_hist_3_V_ce0 = 1'b1;
    end else begin
        tmp_hist_3_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        tmp_hist_3_V_d0 = add_ln700_3_fu_1118_p2;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        tmp_hist_3_V_d0 = 32'd0;
    end else begin
        tmp_hist_3_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln503_reg_1360 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001)) | ((icmp_ln887_fu_727_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4)))) begin
        tmp_hist_3_V_we0 = 1'b1;
    end else begin
        tmp_hist_3_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        tmp_hist_4_V_address0 = zext_ln544_1_fu_1256_p1;
    end else if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        tmp_hist_4_V_address0 = tmp_hist_4_V_addr_2_reg_1384;
    end else if (((1'b0 == ap_block_pp2_stage1) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1))) begin
        tmp_hist_4_V_address0 = zext_ln535_4_fu_942_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        tmp_hist_4_V_address0 = zext_ln544_fu_739_p1;
    end else begin
        tmp_hist_4_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | ((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001)) | ((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_block_pp2_stage1_11001)) | ((ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001)))) begin
        tmp_hist_4_V_ce0 = 1'b1;
    end else begin
        tmp_hist_4_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        tmp_hist_4_V_d0 = add_ln700_4_fu_1154_p2;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        tmp_hist_4_V_d0 = 32'd0;
    end else begin
        tmp_hist_4_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln503_reg_1360 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001)) | ((icmp_ln887_fu_727_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4)))) begin
        tmp_hist_4_V_we0 = 1'b1;
    end else begin
        tmp_hist_4_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        tmp_hist_5_V_address0 = zext_ln544_1_fu_1256_p1;
    end else if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        tmp_hist_5_V_address0 = tmp_hist_5_V_addr_2_reg_1389;
    end else if (((1'b0 == ap_block_pp2_stage1) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1))) begin
        tmp_hist_5_V_address0 = zext_ln535_5_fu_971_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        tmp_hist_5_V_address0 = zext_ln544_fu_739_p1;
    end else begin
        tmp_hist_5_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | ((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001)) | ((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_block_pp2_stage1_11001)) | ((ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001)))) begin
        tmp_hist_5_V_ce0 = 1'b1;
    end else begin
        tmp_hist_5_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        tmp_hist_5_V_d0 = add_ln700_5_fu_1190_p2;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        tmp_hist_5_V_d0 = 32'd0;
    end else begin
        tmp_hist_5_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln503_reg_1360 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001)) | ((icmp_ln887_fu_727_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4)))) begin
        tmp_hist_5_V_we0 = 1'b1;
    end else begin
        tmp_hist_5_V_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln445_fu_708_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((icmp_ln887_fu_727_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln497_fu_755_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_pp2_stage0 : begin
            if ((~((ap_enable_reg_pp2_iter1 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter0 == 1'b1) & (icmp_ln503_fu_793_p2 == 1'd1)) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage1;
            end else if (((ap_enable_reg_pp2_iter1 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter0 == 1'b1) & (icmp_ln503_fu_793_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_pp2_stage1 : begin
            if ((~((ap_enable_reg_pp2_iter0 == 1'b0) & (1'b0 == ap_block_pp2_stage1_subdone) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1)) & (1'b0 == ap_block_pp2_stage1_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if (((ap_enable_reg_pp2_iter0 == 1'b0) & (1'b0 == ap_block_pp2_stage1_subdone) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage1;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_pp3_stage0 : begin
            if ((~((ap_enable_reg_pp3_iter1 == 1'b0) & (1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter0 == 1'b1) & (icmp_ln887_6_fu_1244_p2 == 1'd1)) & ~((ap_enable_reg_pp3_iter1 == 1'b0) & (1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else if ((((ap_enable_reg_pp3_iter1 == 1'b0) & (1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter2 == 1'b1)) | ((ap_enable_reg_pp3_iter1 == 1'b0) & (1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter0 == 1'b1) & (icmp_ln887_6_fu_1244_p2 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln503_fu_766_p2 = (zext_ln426_reg_1325 + 16'd1);

assign add_ln563_1_fu_1266_p2 = (tmp_hist_3_V_q0 + tmp_hist1_3_V_q0);

assign add_ln563_2_fu_1290_p2 = (add_ln563_1_reg_1491 + add_ln563_fu_1284_p2);

assign add_ln563_3_fu_1296_p2 = (tmp_hist1_1_V_q0 + tmp_hist_1_V_q0);

assign add_ln563_4_fu_1272_p2 = (tmp_hist_4_V_q0 + tmp_hist1_4_V_q0);

assign add_ln563_5_fu_1302_p2 = (add_ln563_4_reg_1506 + add_ln563_3_fu_1296_p2);

assign add_ln563_6_fu_1308_p2 = (tmp_hist1_2_V_q0 + tmp_hist_2_V_q0);

assign add_ln563_7_fu_1278_p2 = (tmp_hist_5_V_q0 + tmp_hist1_5_V_q0);

assign add_ln563_8_fu_1314_p2 = (add_ln563_7_reg_1521 + add_ln563_6_fu_1308_p2);

assign add_ln563_fu_1284_p2 = (tmp_hist1_0_V_q0 + tmp_hist_0_V_q0);

assign add_ln700_10_fu_1209_p2 = (32'd1 + tmp_hist1_1_V_q0);

assign add_ln700_11_fu_1216_p2 = (32'd1 + tmp_hist1_2_V_q0);

assign add_ln700_12_fu_1223_p2 = (32'd1 + tmp_hist1_3_V_q0);

assign add_ln700_13_fu_1230_p2 = (32'd1 + tmp_hist1_4_V_q0);

assign add_ln700_14_fu_1237_p2 = (32'd1 + tmp_hist1_5_V_q0);

assign add_ln700_2_fu_1082_p2 = (32'd1 + tmp_hist_2_V_q0);

assign add_ln700_3_fu_1118_p2 = (32'd1 + tmp_hist_3_V_q0);

assign add_ln700_4_fu_1154_p2 = (32'd1 + tmp_hist_4_V_q0);

assign add_ln700_5_fu_1190_p2 = (32'd1 + tmp_hist_5_V_q0);

assign add_ln700_8_fu_1202_p2 = (32'd1 + tmp_hist1_0_V_q0);

assign add_ln700_9_fu_1046_p2 = (32'd1 + tmp_hist_1_V_q0);

assign add_ln700_fu_1010_p2 = (32'd1 + tmp_hist_0_V_q0);

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp2_stage1 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp3_stage0 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

always @ (*) begin
    ap_block_pp2 = (((ap_ST_fsm_pp2_stage0 == ap_CS_fsm) & (1'b1 == ap_block_pp2_stage0_subdone)) | ((1'b1 == ap_block_pp2_stage1_subdone) & (ap_ST_fsm_pp2_stage1 == ap_CS_fsm)));
end

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp2_stage0_01001 = ((ap_enable_reg_pp2_iter1 == 1'b1) & (((icmp_ln503_reg_1360 == 1'd0) & (src2_data_V_V_full_n == 1'b0)) | ((icmp_ln503_reg_1360 == 1'd0) & (src1_data_V_V_empty_n == 1'b0))));
end

always @ (*) begin
    ap_block_pp2_stage0_11001 = ((ap_enable_reg_pp2_iter1 == 1'b1) & (((icmp_ln503_reg_1360 == 1'd0) & (src2_data_V_V_full_n == 1'b0)) | ((icmp_ln503_reg_1360 == 1'd0) & (src1_data_V_V_empty_n == 1'b0))));
end

always @ (*) begin
    ap_block_pp2_stage0_subdone = ((ap_enable_reg_pp2_iter1 == 1'b1) & (((icmp_ln503_reg_1360 == 1'd0) & (src2_data_V_V_full_n == 1'b0)) | ((icmp_ln503_reg_1360 == 1'd0) & (src1_data_V_V_empty_n == 1'b0))));
end

assign ap_block_pp2_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp2_stage1_01001 = ((ap_enable_reg_pp2_iter0 == 1'b1) & (((icmp_ln503_reg_1360 == 1'd0) & (src2_data_V_V_full_n == 1'b0)) | ((icmp_ln503_reg_1360 == 1'd0) & (src1_data_V_V_empty_n == 1'b0))));
end

always @ (*) begin
    ap_block_pp2_stage1_11001 = ((ap_enable_reg_pp2_iter0 == 1'b1) & (((icmp_ln503_reg_1360 == 1'd0) & (src2_data_V_V_full_n == 1'b0)) | ((icmp_ln503_reg_1360 == 1'd0) & (src1_data_V_V_empty_n == 1'b0))));
end

always @ (*) begin
    ap_block_pp2_stage1_subdone = ((ap_enable_reg_pp2_iter0 == 1'b1) & (((icmp_ln503_reg_1360 == 1'd0) & (src2_data_V_V_full_n == 1'b0)) | ((icmp_ln503_reg_1360 == 1'd0) & (src1_data_V_V_empty_n == 1'b0))));
end

always @ (*) begin
    ap_block_pp3 = ((1'b1 == ap_block_pp3_stage0_subdone) & (ap_ST_fsm_pp3_stage0 == ap_CS_fsm));
end

assign ap_block_pp3_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp2_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp3_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp3_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp3_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state8_pp2_stage1_iter0 = (((icmp_ln503_reg_1360 == 1'd0) & (src2_data_V_V_full_n == 1'b0)) | ((icmp_ln503_reg_1360 == 1'd0) & (src1_data_V_V_empty_n == 1'b0)));
end

always @ (*) begin
    ap_block_state9_pp2_stage0_iter1 = (((icmp_ln503_reg_1360 == 1'd0) & (src2_data_V_V_full_n == 1'b0)) | ((icmp_ln503_reg_1360 == 1'd0) & (src1_data_V_V_empty_n == 1'b0)));
end

always @ (*) begin
    ap_enable_operation_115 = (icmp_ln503_reg_1360 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_122 = (icmp_ln503_reg_1360 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_129 = (icmp_ln503_reg_1360 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_136 = (icmp_ln503_reg_1360 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_143 = (icmp_ln503_reg_1360 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_150 = (icmp_ln503_reg_1360 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_158 = (icmp_ln503_reg_1360 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_160 = (icmp_ln503_reg_1360 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_163 = (icmp_ln503_reg_1360 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_168 = (icmp_ln503_reg_1360 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_170 = (icmp_ln503_reg_1360 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_173 = (icmp_ln503_reg_1360 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_178 = (icmp_ln503_reg_1360 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_180 = (icmp_ln503_reg_1360 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_183 = (icmp_ln503_reg_1360 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_188 = (icmp_ln503_reg_1360 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_190 = (icmp_ln503_reg_1360 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_193 = (icmp_ln503_reg_1360 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_198 = (icmp_ln503_reg_1360 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_200 = (icmp_ln503_reg_1360 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_203 = (icmp_ln503_reg_1360 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_208 = (icmp_ln503_reg_1360 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_210 = (icmp_ln503_reg_1360 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_213 = (icmp_ln503_reg_1360 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_219 = (icmp_ln503_reg_1360_pp2_iter1_reg == 1'd0);
end

always @ (*) begin
    ap_enable_operation_221 = (icmp_ln503_reg_1360_pp2_iter1_reg == 1'd0);
end

always @ (*) begin
    ap_enable_operation_224 = (icmp_ln503_reg_1360_pp2_iter1_reg == 1'd0);
end

always @ (*) begin
    ap_enable_operation_226 = (icmp_ln503_reg_1360_pp2_iter1_reg == 1'd0);
end

always @ (*) begin
    ap_enable_operation_229 = (icmp_ln503_reg_1360_pp2_iter1_reg == 1'd0);
end

always @ (*) begin
    ap_enable_operation_231 = (icmp_ln503_reg_1360_pp2_iter1_reg == 1'd0);
end

always @ (*) begin
    ap_enable_operation_234 = (icmp_ln503_reg_1360_pp2_iter1_reg == 1'd0);
end

always @ (*) begin
    ap_enable_operation_236 = (icmp_ln503_reg_1360_pp2_iter1_reg == 1'd0);
end

always @ (*) begin
    ap_enable_operation_239 = (icmp_ln503_reg_1360_pp2_iter1_reg == 1'd0);
end

always @ (*) begin
    ap_enable_operation_241 = (icmp_ln503_reg_1360_pp2_iter1_reg == 1'd0);
end

always @ (*) begin
    ap_enable_operation_244 = (icmp_ln503_reg_1360_pp2_iter1_reg == 1'd0);
end

always @ (*) begin
    ap_enable_operation_246 = (icmp_ln503_reg_1360_pp2_iter1_reg == 1'd0);
end

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign ap_enable_pp3 = (ap_idle_pp3 ^ 1'b1);

always @ (*) begin
    ap_enable_state10_pp2_iter1_stage1 = ((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1));
end

always @ (*) begin
    ap_enable_state8_pp2_iter0_stage1 = ((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1));
end

always @ (*) begin
    ap_enable_state9_pp2_iter1_stage0 = ((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0));
end

assign col_fu_976_p2 = (32'd2 + col_0_reg_621);

assign grp_fu_644_p4 = {{src1_data_V_V_dout[19:10]}};

assign grp_fu_654_p4 = {{src1_data_V_V_dout[29:20]}};

assign grp_fu_664_p4 = {{src1_data_V_V_dout[39:30]}};

assign grp_fu_674_p4 = {{src1_data_V_V_dout[49:40]}};

assign grp_fu_684_p4 = {{src1_data_V_V_dout[59:50]}};

assign i_V_1_fu_1250_p2 = (t_V_1_reg_633 + 11'd1);

assign i_V_fu_733_p2 = (t_V_reg_599 + 11'd1);

assign icmp_ln445_fu_708_p2 = ((k_0_reg_588 == 11'd1024) ? 1'b1 : 1'b0);

assign icmp_ln497_fu_755_p2 = ((row_0_reg_610 == src1_rows_read) ? 1'b1 : 1'b0);

assign icmp_ln503_fu_793_p2 = ((ap_phi_mux_col_0_phi_fu_625_p4 == zext_ln503_reg_1355) ? 1'b1 : 1'b0);

assign icmp_ln887_6_fu_1244_p2 = ((t_V_1_reg_633 == 11'd1024) ? 1'b1 : 1'b0);

assign icmp_ln887_fu_727_p2 = ((t_V_reg_599 == 11'd1024) ? 1'b1 : 1'b0);

assign k_fu_714_p2 = (k_0_reg_588 + 11'd1);

assign or_ln1193_10_fu_955_p2 = (shl_ln728_s_fu_947_p3 | 16'd32);

assign or_ln1193_11_fu_1174_p2 = (shl_ln728_10_fu_1166_p3 | 16'd32);

assign or_ln1193_1_fu_994_p2 = (shl_ln728_1_fu_986_p3 | 16'd32);

assign or_ln1193_2_fu_839_p2 = (shl_ln728_2_fu_831_p3 | 16'd32);

assign or_ln1193_3_fu_1030_p2 = (shl_ln728_3_fu_1022_p3 | 16'd32);

assign or_ln1193_4_fu_868_p2 = (shl_ln728_4_fu_860_p3 | 16'd32);

assign or_ln1193_5_fu_1066_p2 = (shl_ln728_5_fu_1058_p3 | 16'd32);

assign or_ln1193_6_fu_897_p2 = (shl_ln728_6_fu_889_p3 | 16'd32);

assign or_ln1193_7_fu_1102_p2 = (shl_ln728_7_fu_1094_p3 | 16'd32);

assign or_ln1193_8_fu_926_p2 = (shl_ln728_8_fu_918_p3 | 16'd32);

assign or_ln1193_9_fu_1138_p2 = (shl_ln728_9_fu_1130_p3 | 16'd32);

assign or_ln1193_fu_810_p2 = (shl_ln_fu_802_p3 | 16'd32);

assign row_fu_760_p2 = (row_0_reg_610 + 16'd1);

assign shl_ln728_10_fu_1166_p3 = {{grp_fu_684_p4}, {6'd0}};

assign shl_ln728_1_fu_986_p3 = {{trunc_ln728_1_fu_982_p1}, {6'd0}};

assign shl_ln728_2_fu_831_p3 = {{grp_fu_644_p4}, {6'd0}};

assign shl_ln728_3_fu_1022_p3 = {{grp_fu_644_p4}, {6'd0}};

assign shl_ln728_4_fu_860_p3 = {{grp_fu_654_p4}, {6'd0}};

assign shl_ln728_5_fu_1058_p3 = {{grp_fu_654_p4}, {6'd0}};

assign shl_ln728_6_fu_889_p3 = {{grp_fu_664_p4}, {6'd0}};

assign shl_ln728_7_fu_1094_p3 = {{grp_fu_664_p4}, {6'd0}};

assign shl_ln728_8_fu_918_p3 = {{grp_fu_674_p4}, {6'd0}};

assign shl_ln728_9_fu_1130_p3 = {{grp_fu_674_p4}, {6'd0}};

assign shl_ln728_s_fu_947_p3 = {{grp_fu_684_p4}, {6'd0}};

assign shl_ln_fu_802_p3 = {{trunc_ln728_fu_798_p1}, {6'd0}};

assign src2_data_V_V_din = src1_data_V_V_dout;

assign tmp_61_fu_816_p4 = {{or_ln1193_fu_810_p2[15:6]}};

assign tmp_62_fu_1000_p4 = {{or_ln1193_1_fu_994_p2[15:6]}};

assign tmp_63_fu_845_p4 = {{or_ln1193_2_fu_839_p2[15:6]}};

assign tmp_64_fu_1036_p4 = {{or_ln1193_3_fu_1030_p2[15:6]}};

assign tmp_65_fu_874_p4 = {{or_ln1193_4_fu_868_p2[15:6]}};

assign tmp_66_fu_1072_p4 = {{or_ln1193_5_fu_1066_p2[15:6]}};

assign tmp_67_fu_903_p4 = {{or_ln1193_6_fu_897_p2[15:6]}};

assign tmp_68_fu_1108_p4 = {{or_ln1193_7_fu_1102_p2[15:6]}};

assign tmp_69_fu_932_p4 = {{or_ln1193_8_fu_926_p2[15:6]}};

assign tmp_70_fu_1144_p4 = {{or_ln1193_9_fu_1138_p2[15:6]}};

assign tmp_71_fu_961_p4 = {{or_ln1193_10_fu_955_p2[15:6]}};

assign tmp_72_fu_1180_p4 = {{or_ln1193_11_fu_1174_p2[15:6]}};

assign tmp_83_fu_694_p4 = {{src1_cols_read[15:1]}};

assign tmp_84_fu_771_p4 = {{add_ln503_fu_766_p2[15:1]}};

assign tmp_85_fu_781_p3 = {{tmp_84_fu_771_p4}, {1'd0}};

assign trunc_ln728_1_fu_982_p1 = src1_data_V_V_dout[9:0];

assign trunc_ln728_fu_798_p1 = src1_data_V_V_dout[9:0];

assign zext_ln426_fu_704_p1 = tmp_83_fu_694_p4;

assign zext_ln455_fu_720_p1 = k_0_reg_588;

assign zext_ln503_fu_789_p1 = tmp_85_fu_781_p3;

assign zext_ln535_1_fu_855_p1 = tmp_63_fu_845_p4;

assign zext_ln535_2_fu_884_p1 = tmp_65_fu_874_p4;

assign zext_ln535_3_fu_913_p1 = tmp_67_fu_903_p4;

assign zext_ln535_4_fu_942_p1 = tmp_69_fu_932_p4;

assign zext_ln535_5_fu_971_p1 = tmp_71_fu_961_p4;

assign zext_ln535_fu_826_p1 = tmp_61_fu_816_p4;

assign zext_ln536_1_fu_1053_p1 = tmp_64_fu_1036_p4;

assign zext_ln536_2_fu_1089_p1 = tmp_66_fu_1072_p4;

assign zext_ln536_3_fu_1125_p1 = tmp_68_fu_1108_p4;

assign zext_ln536_4_fu_1161_p1 = tmp_70_fu_1144_p4;

assign zext_ln536_5_fu_1197_p1 = tmp_72_fu_1180_p4;

assign zext_ln536_fu_1017_p1 = tmp_62_fu_1000_p4;

assign zext_ln544_1_fu_1256_p1 = t_V_1_reg_633;

assign zext_ln544_fu_739_p1 = t_V_reg_599;

always @ (posedge ap_clk) begin
    zext_ln426_reg_1325[15] <= 1'b0;
    zext_ln503_reg_1355[0] <= 1'b0;
    zext_ln503_reg_1355[31:16] <= 16'b0000000000000000;
    zext_ln544_1_reg_1438[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    zext_ln544_1_reg_1438_pp3_iter1_reg[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
end

endmodule //AWBhistogramkernel
