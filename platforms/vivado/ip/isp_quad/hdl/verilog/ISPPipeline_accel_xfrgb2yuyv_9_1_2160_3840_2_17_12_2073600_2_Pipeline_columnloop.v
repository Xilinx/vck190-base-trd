// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
// Version: 2021.1
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module ISPPipeline_accel_xfrgb2yuyv_9_1_2160_3840_2_17_12_2073600_2_Pipeline_columnloop (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        p_dst_4201_dout,
        p_dst_4201_empty_n,
        p_dst_4201_read,
        p_imgOutput_4203_din,
        p_imgOutput_4203_full_n,
        p_imgOutput_4203_write,
        trunc_ln
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [47:0] p_dst_4201_dout;
input   p_dst_4201_empty_n;
output   p_dst_4201_read;
output  [31:0] p_imgOutput_4203_din;
input   p_imgOutput_4203_full_n;
output   p_imgOutput_4203_write;
input  [10:0] trunc_ln;

reg ap_idle;
reg p_dst_4201_read;
reg p_imgOutput_4203_write;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
reg    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
reg    ap_block_state7_pp0_stage0_iter6;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln6270_fu_125_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    p_dst_4201_blk_n;
wire    ap_block_pp0_stage0;
reg    p_imgOutput_4203_blk_n;
reg    ap_block_pp0_stage0_11001;
reg   [7:0] G_assign_reg_418;
reg   [7:0] G_assign_reg_418_pp0_iter2_reg;
reg   [7:0] B_assign_reg_423;
wire   [21:0] zext_ln772_fu_168_p1;
reg   [7:0] G_assign_1_reg_437;
reg   [7:0] G_assign_1_reg_437_pp0_iter2_reg;
reg   [7:0] B_assign_1_reg_442;
wire   [22:0] zext_ln772_1_fu_212_p1;
wire   [22:0] grp_fu_339_p3;
wire  signed [22:0] grp_fu_347_p3;
wire  signed [22:0] grp_fu_355_p3;
wire   [22:0] grp_fu_363_p3;
wire    call_ret_xfExtractPixels_2_17_15_s_fu_105_ap_ready;
wire   [23:0] call_ret_xfExtractPixels_2_17_15_s_fu_105_ap_return_0;
wire   [23:0] call_ret_xfExtractPixels_2_17_15_s_fu_105_ap_return_1;
reg   [10:0] j_fu_82;
wire    ap_loop_init;
reg   [10:0] ap_sig_allocacmp_j_1;
wire   [10:0] j_2_fu_119_p2;
reg    ap_block_pp0_stage0_01001;
wire   [7:0] trunc_ln708_fu_144_p1;
wire   [7:0] trunc_ln708_1_fu_172_p1;
wire   [21:0] grp_fu_303_p3;
wire  signed [21:0] grp_fu_312_p3;
wire   [21:0] grp_fu_321_p3;
wire   [21:0] grp_fu_330_p3;
wire   [22:0] grp_fu_371_p3;
wire   [7:0] trunc_ln1_fu_230_p4;
wire  signed [22:0] grp_fu_380_p3;
wire   [7:0] trunc_ln738_1_fu_245_p4;
wire  signed [22:0] grp_fu_389_p3;
wire   [7:0] trunc_ln738_2_fu_260_p4;
wire   [22:0] grp_fu_398_p3;
wire   [7:0] trunc_ln738_3_fu_275_p4;
wire   [7:0] Value_uchar_2_fu_269_p2;
wire   [7:0] Value_uchar_3_fu_284_p2;
wire   [7:0] Value_uchar_1_fu_254_p2;
wire   [7:0] Value_uchar_fu_239_p2;
wire   [7:0] grp_fu_303_p0;
wire   [13:0] grp_fu_303_p1;
wire   [14:0] grp_fu_303_p2;
wire   [7:0] grp_fu_312_p0;
wire  signed [13:0] grp_fu_312_p1;
wire   [14:0] grp_fu_312_p2;
wire   [7:0] grp_fu_321_p0;
wire   [13:0] grp_fu_321_p1;
wire   [14:0] grp_fu_321_p2;
wire   [7:0] grp_fu_330_p0;
wire   [13:0] grp_fu_330_p1;
wire   [14:0] grp_fu_330_p2;
wire   [7:0] grp_fu_339_p0;
wire   [11:0] grp_fu_339_p1;
wire   [21:0] grp_fu_339_p2;
wire   [7:0] grp_fu_347_p0;
wire   [13:0] grp_fu_347_p1;
wire   [7:0] grp_fu_355_p0;
wire  signed [12:0] grp_fu_355_p1;
wire   [21:0] grp_fu_355_p2;
wire   [7:0] grp_fu_363_p0;
wire   [11:0] grp_fu_363_p1;
wire   [21:0] grp_fu_363_p2;
wire   [7:0] grp_fu_371_p0;
wire   [14:0] grp_fu_371_p1;
wire   [7:0] grp_fu_380_p0;
wire  signed [14:0] grp_fu_380_p1;
wire   [7:0] grp_fu_389_p0;
wire  signed [14:0] grp_fu_389_p1;
wire   [7:0] grp_fu_398_p0;
wire   [14:0] grp_fu_398_p1;
reg    grp_fu_303_ce;
reg    grp_fu_312_ce;
reg    grp_fu_321_ce;
reg    grp_fu_330_ce;
reg    grp_fu_339_ce;
reg    grp_fu_347_ce;
reg    grp_fu_355_ce;
reg    grp_fu_363_ce;
reg    grp_fu_371_ce;
reg    grp_fu_380_ce;
reg    grp_fu_389_ce;
reg    grp_fu_398_ce;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire   [21:0] grp_fu_330_p00;
wire   [19:0] grp_fu_339_p00;
wire   [22:0] grp_fu_339_p20;
wire   [21:0] grp_fu_347_p00;
wire   [20:0] grp_fu_355_p00;
wire   [22:0] grp_fu_355_p20;
wire   [19:0] grp_fu_363_p00;
wire   [22:0] grp_fu_363_p20;
wire   [22:0] grp_fu_398_p00;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_done_reg = 1'b0;
end

ISPPipeline_accel_xfExtractPixels_2_17_15_s call_ret_xfExtractPixels_2_17_15_s_fu_105(
    .ap_ready(call_ret_xfExtractPixels_2_17_15_s_fu_105_ap_ready),
    .p_read2(p_dst_4201_dout),
    .ap_return_0(call_ret_xfExtractPixels_2_17_15_s_fu_105_ap_return_0),
    .ap_return_1(call_ret_xfExtractPixels_2_17_15_s_fu_105_ap_return_1)
);

ISPPipeline_accel_mac_muladd_8ns_14ns_15ns_22_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 14 ),
    .din2_WIDTH( 15 ),
    .dout_WIDTH( 22 ))
mac_muladd_8ns_14ns_15ns_22_4_1_U647(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_303_p0),
    .din1(grp_fu_303_p1),
    .din2(grp_fu_303_p2),
    .ce(grp_fu_303_ce),
    .dout(grp_fu_303_p3)
);

ISPPipeline_accel_mac_muladd_8ns_14s_15ns_22_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 14 ),
    .din2_WIDTH( 15 ),
    .dout_WIDTH( 22 ))
mac_muladd_8ns_14s_15ns_22_4_1_U648(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_312_p0),
    .din1(grp_fu_312_p1),
    .din2(grp_fu_312_p2),
    .ce(grp_fu_312_ce),
    .dout(grp_fu_312_p3)
);

ISPPipeline_accel_mac_muladd_8ns_14ns_15ns_22_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 14 ),
    .din2_WIDTH( 15 ),
    .dout_WIDTH( 22 ))
mac_muladd_8ns_14ns_15ns_22_4_1_U649(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_321_p0),
    .din1(grp_fu_321_p1),
    .din2(grp_fu_321_p2),
    .ce(grp_fu_321_ce),
    .dout(grp_fu_321_p3)
);

ISPPipeline_accel_mac_muladd_8ns_14ns_15ns_22_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 14 ),
    .din2_WIDTH( 15 ),
    .dout_WIDTH( 22 ))
mac_muladd_8ns_14ns_15ns_22_4_1_U650(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_330_p0),
    .din1(grp_fu_330_p1),
    .din2(grp_fu_330_p2),
    .ce(grp_fu_330_ce),
    .dout(grp_fu_330_p3)
);

ISPPipeline_accel_mac_muladd_8ns_12ns_22ns_23_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 12 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 23 ))
mac_muladd_8ns_12ns_22ns_23_4_1_U651(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_339_p0),
    .din1(grp_fu_339_p1),
    .din2(grp_fu_339_p2),
    .ce(grp_fu_339_ce),
    .dout(grp_fu_339_p3)
);

ISPPipeline_accel_mac_muladd_8ns_14ns_22s_23_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 14 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 23 ))
mac_muladd_8ns_14ns_22s_23_4_1_U652(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_347_p0),
    .din1(grp_fu_347_p1),
    .din2(grp_fu_312_p3),
    .ce(grp_fu_347_ce),
    .dout(grp_fu_347_p3)
);

ISPPipeline_accel_mac_muladd_8ns_13s_22ns_23_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 13 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 23 ))
mac_muladd_8ns_13s_22ns_23_4_1_U653(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_355_p0),
    .din1(grp_fu_355_p1),
    .din2(grp_fu_355_p2),
    .ce(grp_fu_355_ce),
    .dout(grp_fu_355_p3)
);

ISPPipeline_accel_mac_muladd_8ns_12ns_22ns_23_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 12 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 23 ))
mac_muladd_8ns_12ns_22ns_23_4_1_U654(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_363_p0),
    .din1(grp_fu_363_p1),
    .din2(grp_fu_363_p2),
    .ce(grp_fu_363_ce),
    .dout(grp_fu_363_p3)
);

ISPPipeline_accel_mac_muladd_8ns_15ns_23ns_23_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 15 ),
    .din2_WIDTH( 23 ),
    .dout_WIDTH( 23 ))
mac_muladd_8ns_15ns_23ns_23_4_1_U655(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_371_p0),
    .din1(grp_fu_371_p1),
    .din2(grp_fu_339_p3),
    .ce(grp_fu_371_ce),
    .dout(grp_fu_371_p3)
);

ISPPipeline_accel_mac_muladd_8ns_15s_23s_23_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 15 ),
    .din2_WIDTH( 23 ),
    .dout_WIDTH( 23 ))
mac_muladd_8ns_15s_23s_23_4_1_U656(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_380_p0),
    .din1(grp_fu_380_p1),
    .din2(grp_fu_347_p3),
    .ce(grp_fu_380_ce),
    .dout(grp_fu_380_p3)
);

ISPPipeline_accel_mac_muladd_8ns_15s_23s_23_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 15 ),
    .din2_WIDTH( 23 ),
    .dout_WIDTH( 23 ))
mac_muladd_8ns_15s_23s_23_4_1_U657(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_389_p0),
    .din1(grp_fu_389_p1),
    .din2(grp_fu_355_p3),
    .ce(grp_fu_389_ce),
    .dout(grp_fu_389_p3)
);

ISPPipeline_accel_mac_muladd_8ns_15ns_23ns_23_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 15 ),
    .din2_WIDTH( 23 ),
    .dout_WIDTH( 23 ))
mac_muladd_8ns_15ns_23ns_23_4_1_U658(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_398_p0),
    .din1(grp_fu_398_p1),
    .din2(grp_fu_363_p3),
    .ce(grp_fu_398_ce),
    .dout(grp_fu_398_p3)
);

ISPPipeline_accel_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter5_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln6270_fu_125_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            j_fu_82 <= j_2_fu_119_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            j_fu_82 <= 11'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        B_assign_1_reg_442 <= {{call_ret_xfExtractPixels_2_17_15_s_fu_105_ap_return_1[23:16]}};
        B_assign_reg_423 <= {{call_ret_xfExtractPixels_2_17_15_s_fu_105_ap_return_0[23:16]}};
        G_assign_1_reg_437 <= {{call_ret_xfExtractPixels_2_17_15_s_fu_105_ap_return_1[15:8]}};
        G_assign_reg_418 <= {{call_ret_xfExtractPixels_2_17_15_s_fu_105_ap_return_0[15:8]}};
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        G_assign_1_reg_437_pp0_iter2_reg <= G_assign_1_reg_437;
        G_assign_reg_418_pp0_iter2_reg <= G_assign_reg_418;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
    end
end

always @ (*) begin
    if (((icmp_ln6270_fu_125_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter5_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_j_1 = 11'd0;
    end else begin
        ap_sig_allocacmp_j_1 = j_fu_82;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_303_ce = 1'b1;
    end else begin
        grp_fu_303_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_312_ce = 1'b1;
    end else begin
        grp_fu_312_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_321_ce = 1'b1;
    end else begin
        grp_fu_321_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_330_ce = 1'b1;
    end else begin
        grp_fu_330_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_339_ce = 1'b1;
    end else begin
        grp_fu_339_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_347_ce = 1'b1;
    end else begin
        grp_fu_347_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_355_ce = 1'b1;
    end else begin
        grp_fu_355_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_363_ce = 1'b1;
    end else begin
        grp_fu_363_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_371_ce = 1'b1;
    end else begin
        grp_fu_371_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_380_ce = 1'b1;
    end else begin
        grp_fu_380_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_389_ce = 1'b1;
    end else begin
        grp_fu_389_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_398_ce = 1'b1;
    end else begin
        grp_fu_398_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_dst_4201_blk_n = p_dst_4201_empty_n;
    end else begin
        p_dst_4201_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_dst_4201_read = 1'b1;
    end else begin
        p_dst_4201_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        p_imgOutput_4203_blk_n = p_imgOutput_4203_full_n;
    end else begin
        p_imgOutput_4203_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        p_imgOutput_4203_write = 1'b1;
    end else begin
        p_imgOutput_4203_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign Value_uchar_1_fu_254_p2 = (trunc_ln738_1_fu_245_p4 ^ 8'd128);

assign Value_uchar_2_fu_269_p2 = (trunc_ln738_2_fu_260_p4 ^ 8'd128);

assign Value_uchar_3_fu_284_p2 = (trunc_ln738_3_fu_275_p4 + 8'd16);

assign Value_uchar_fu_239_p2 = (trunc_ln1_fu_230_p4 + 8'd16);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((p_imgOutput_4203_full_n == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b1)) | ((p_dst_4201_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((p_imgOutput_4203_full_n == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b1)) | ((p_dst_4201_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((p_imgOutput_4203_full_n == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b1)) | ((p_dst_4201_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = (p_dst_4201_empty_n == 1'b0);
end

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state7_pp0_stage0_iter6 = (p_imgOutput_4203_full_n == 1'b0);
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign grp_fu_303_p0 = zext_ln772_fu_168_p1;

assign grp_fu_303_p1 = 22'd8422;

assign grp_fu_303_p2 = 22'd16384;

assign grp_fu_312_p0 = zext_ln772_fu_168_p1;

assign grp_fu_312_p1 = 22'd4189454;

assign grp_fu_312_p2 = 22'd16384;

assign grp_fu_321_p0 = zext_ln772_fu_168_p1;

assign grp_fu_321_p1 = 22'd14382;

assign grp_fu_321_p2 = 22'd16384;

assign grp_fu_330_p0 = grp_fu_330_p00;

assign grp_fu_330_p00 = trunc_ln708_1_fu_172_p1;

assign grp_fu_330_p1 = 22'd8422;

assign grp_fu_330_p2 = 22'd16384;

assign grp_fu_339_p0 = grp_fu_339_p00;

assign grp_fu_339_p00 = B_assign_reg_423;

assign grp_fu_339_p1 = 20'd3212;

assign grp_fu_339_p2 = grp_fu_339_p20;

assign grp_fu_339_p20 = grp_fu_303_p3;

assign grp_fu_347_p0 = grp_fu_347_p00;

assign grp_fu_347_p00 = B_assign_reg_423;

assign grp_fu_347_p1 = 22'd14386;

assign grp_fu_355_p0 = grp_fu_355_p00;

assign grp_fu_355_p00 = B_assign_reg_423;

assign grp_fu_355_p1 = 21'd2094825;

assign grp_fu_355_p2 = grp_fu_355_p20;

assign grp_fu_355_p20 = grp_fu_321_p3;

assign grp_fu_363_p0 = grp_fu_363_p00;

assign grp_fu_363_p00 = B_assign_1_reg_442;

assign grp_fu_363_p1 = 20'd3212;

assign grp_fu_363_p2 = grp_fu_363_p20;

assign grp_fu_363_p20 = grp_fu_330_p3;

assign grp_fu_371_p0 = zext_ln772_1_fu_212_p1;

assign grp_fu_371_p1 = 23'd16516;

assign grp_fu_380_p0 = zext_ln772_1_fu_212_p1;

assign grp_fu_380_p1 = 23'd8379072;

assign grp_fu_389_p0 = zext_ln772_1_fu_212_p1;

assign grp_fu_389_p1 = 23'd8376549;

assign grp_fu_398_p0 = grp_fu_398_p00;

assign grp_fu_398_p00 = G_assign_1_reg_437_pp0_iter2_reg;

assign grp_fu_398_p1 = 23'd16516;

assign icmp_ln6270_fu_125_p2 = ((ap_sig_allocacmp_j_1 == trunc_ln) ? 1'b1 : 1'b0);

assign j_2_fu_119_p2 = (ap_sig_allocacmp_j_1 + 11'd1);

assign p_imgOutput_4203_din = {{{{Value_uchar_2_fu_269_p2}, {Value_uchar_3_fu_284_p2}}, {Value_uchar_1_fu_254_p2}}, {Value_uchar_fu_239_p2}};

assign trunc_ln1_fu_230_p4 = {{grp_fu_371_p3[22:15]}};

assign trunc_ln708_1_fu_172_p1 = call_ret_xfExtractPixels_2_17_15_s_fu_105_ap_return_1[7:0];

assign trunc_ln708_fu_144_p1 = call_ret_xfExtractPixels_2_17_15_s_fu_105_ap_return_0[7:0];

assign trunc_ln738_1_fu_245_p4 = {{grp_fu_380_p3[22:15]}};

assign trunc_ln738_2_fu_260_p4 = {{grp_fu_389_p3[22:15]}};

assign trunc_ln738_3_fu_275_p4 = {{grp_fu_398_p3[22:15]}};

assign zext_ln772_1_fu_212_p1 = G_assign_reg_418_pp0_iter2_reg;

assign zext_ln772_fu_168_p1 = trunc_ln708_fu_144_p1;

endmodule //ISPPipeline_accel_xfrgb2yuyv_9_1_2160_3840_2_17_12_2073600_2_Pipeline_columnloop
