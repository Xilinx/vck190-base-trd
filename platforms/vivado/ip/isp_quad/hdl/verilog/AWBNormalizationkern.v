// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.2
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module AWBNormalizationkern (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        src_data_V_V_dout,
        src_data_V_V_empty_n,
        src_data_V_V_read,
        dst_rows_read,
        dst_cols_read,
        dst_data_V_V_din,
        dst_data_V_V_full_n,
        dst_data_V_V_write,
        hist_0_address0,
        hist_0_ce0,
        hist_0_q0,
        hist_1_address0,
        hist_1_ce0,
        hist_1_q0,
        hist_2_address0,
        hist_2_ce0,
        hist_2_q0
);

parameter    ap_ST_fsm_state1 = 13'd1;
parameter    ap_ST_fsm_state2 = 13'd2;
parameter    ap_ST_fsm_state3 = 13'd4;
parameter    ap_ST_fsm_state4 = 13'd8;
parameter    ap_ST_fsm_state5 = 13'd16;
parameter    ap_ST_fsm_state6 = 13'd32;
parameter    ap_ST_fsm_state7 = 13'd64;
parameter    ap_ST_fsm_state8 = 13'd128;
parameter    ap_ST_fsm_state9 = 13'd256;
parameter    ap_ST_fsm_state10 = 13'd512;
parameter    ap_ST_fsm_state11 = 13'd1024;
parameter    ap_ST_fsm_pp2_stage0 = 13'd2048;
parameter    ap_ST_fsm_state48 = 13'd4096;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [59:0] src_data_V_V_dout;
input   src_data_V_V_empty_n;
output   src_data_V_V_read;
input  [15:0] dst_rows_read;
input  [15:0] dst_cols_read;
output  [59:0] dst_data_V_V_din;
input   dst_data_V_V_full_n;
output   dst_data_V_V_write;
output  [9:0] hist_0_address0;
output   hist_0_ce0;
input  [31:0] hist_0_q0;
output  [9:0] hist_1_address0;
output   hist_1_ce0;
input  [31:0] hist_1_q0;
output  [9:0] hist_2_address0;
output   hist_2_ce0;
input  [31:0] hist_2_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg src_data_V_V_read;
reg dst_data_V_V_write;
reg[9:0] hist_0_address0;
reg hist_0_ce0;
reg[9:0] hist_1_address0;
reg hist_1_ce0;
reg[9:0] hist_2_address0;
reg hist_2_ce0;

(* fsm_encoding = "none" *) reg   [12:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    src_data_V_V_blk_n;
wire    ap_CS_fsm_pp2_stage0;
reg    ap_enable_reg_pp2_iter1;
wire    ap_block_pp2_stage0;
reg   [0:0] icmp_ln887_12_reg_2188;
reg    dst_data_V_V_blk_n;
reg    ap_enable_reg_pp2_iter35;
reg   [0:0] icmp_ln887_12_reg_2188_pp2_iter34_reg;
reg   [12:0] t_V_2_reg_391;
reg   [14:0] trunc_ln8_reg_2044;
wire   [31:0] total_fu_1949_p2;
reg   [31:0] total_reg_2049;
wire   [37:0] mul_ln1148_fu_507_p2;
reg   [37:0] mul_ln1148_reg_2056;
wire    ap_CS_fsm_state2;
wire   [44:0] mul_ln1148_1_fu_513_p2;
reg   [44:0] mul_ln1148_1_reg_2061;
wire   [75:0] mul_ln1148_2_fu_522_p2;
reg   [75:0] mul_ln1148_2_reg_2066;
wire    ap_CS_fsm_state3;
wire   [89:0] mul_ln1148_3_fu_531_p2;
reg   [89:0] mul_ln1148_3_reg_2071;
wire   [0:0] icmp_ln293_fu_537_p2;
wire    ap_CS_fsm_state4;
wire   [1:0] j_fu_543_p2;
reg   [1:0] j_reg_2080;
reg   [31:0] trunc_ln555_2_reg_2085;
wire   [32:0] zext_ln887_2_fu_567_p1;
reg   [32:0] zext_ln887_2_reg_2090;
wire  signed [29:0] sext_ln1148_fu_607_p1;
reg  signed [29:0] sext_ln1148_reg_2095;
wire  signed [29:0] sext_ln1148_1_fu_611_p1;
reg  signed [29:0] sext_ln1148_1_reg_2101;
wire  signed [29:0] sext_ln1148_2_fu_615_p1;
reg  signed [29:0] sext_ln1148_2_reg_2107;
wire    ap_CS_fsm_state5;
wire   [10:0] add_ln700_fu_665_p2;
wire    ap_CS_fsm_state6;
wire   [31:0] add_ln700_16_fu_671_p2;
wire   [0:0] and_ln317_fu_659_p2;
wire  signed [32:0] sext_ln895_fu_725_p1;
reg  signed [32:0] sext_ln895_reg_2141;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state8;
wire   [0:0] icmp_ln883_fu_735_p2;
reg   [0:0] icmp_ln883_reg_2161;
wire   [15:0] add_ln701_fu_765_p2;
wire    ap_CS_fsm_state9;
wire   [0:0] and_ln329_fu_760_p2;
wire   [31:0] sub_ln701_fu_771_p2;
wire   [0:0] icmp_ln887_11_fu_838_p2;
wire    ap_CS_fsm_state11;
wire   [12:0] row_V_fu_843_p2;
reg   [12:0] row_V_reg_2183;
wire   [0:0] icmp_ln887_12_fu_853_p2;
wire    ap_block_state12_pp2_stage0_iter0;
reg    ap_block_state13_pp2_stage0_iter1;
wire    ap_block_state14_pp2_stage0_iter2;
wire    ap_block_state15_pp2_stage0_iter3;
wire    ap_block_state16_pp2_stage0_iter4;
wire    ap_block_state17_pp2_stage0_iter5;
wire    ap_block_state18_pp2_stage0_iter6;
wire    ap_block_state19_pp2_stage0_iter7;
wire    ap_block_state20_pp2_stage0_iter8;
wire    ap_block_state21_pp2_stage0_iter9;
wire    ap_block_state22_pp2_stage0_iter10;
wire    ap_block_state23_pp2_stage0_iter11;
wire    ap_block_state24_pp2_stage0_iter12;
wire    ap_block_state25_pp2_stage0_iter13;
wire    ap_block_state26_pp2_stage0_iter14;
wire    ap_block_state27_pp2_stage0_iter15;
wire    ap_block_state28_pp2_stage0_iter16;
wire    ap_block_state29_pp2_stage0_iter17;
wire    ap_block_state30_pp2_stage0_iter18;
wire    ap_block_state31_pp2_stage0_iter19;
wire    ap_block_state32_pp2_stage0_iter20;
wire    ap_block_state33_pp2_stage0_iter21;
wire    ap_block_state34_pp2_stage0_iter22;
wire    ap_block_state35_pp2_stage0_iter23;
wire    ap_block_state36_pp2_stage0_iter24;
wire    ap_block_state37_pp2_stage0_iter25;
wire    ap_block_state38_pp2_stage0_iter26;
wire    ap_block_state39_pp2_stage0_iter27;
wire    ap_block_state40_pp2_stage0_iter28;
wire    ap_block_state41_pp2_stage0_iter29;
wire    ap_block_state42_pp2_stage0_iter30;
wire    ap_block_state43_pp2_stage0_iter31;
wire    ap_block_state44_pp2_stage0_iter32;
wire    ap_block_state45_pp2_stage0_iter33;
wire    ap_block_state46_pp2_stage0_iter34;
reg    ap_block_state47_pp2_stage0_iter35;
reg    ap_block_pp2_stage0_11001;
reg   [0:0] icmp_ln887_12_reg_2188_pp2_iter1_reg;
reg   [0:0] icmp_ln887_12_reg_2188_pp2_iter2_reg;
reg   [0:0] icmp_ln887_12_reg_2188_pp2_iter3_reg;
reg   [0:0] icmp_ln887_12_reg_2188_pp2_iter4_reg;
reg   [0:0] icmp_ln887_12_reg_2188_pp2_iter5_reg;
reg   [0:0] icmp_ln887_12_reg_2188_pp2_iter6_reg;
reg   [0:0] icmp_ln887_12_reg_2188_pp2_iter7_reg;
reg   [0:0] icmp_ln887_12_reg_2188_pp2_iter8_reg;
reg   [0:0] icmp_ln887_12_reg_2188_pp2_iter9_reg;
reg   [0:0] icmp_ln887_12_reg_2188_pp2_iter10_reg;
reg   [0:0] icmp_ln887_12_reg_2188_pp2_iter11_reg;
reg   [0:0] icmp_ln887_12_reg_2188_pp2_iter12_reg;
reg   [0:0] icmp_ln887_12_reg_2188_pp2_iter13_reg;
reg   [0:0] icmp_ln887_12_reg_2188_pp2_iter14_reg;
reg   [0:0] icmp_ln887_12_reg_2188_pp2_iter15_reg;
reg   [0:0] icmp_ln887_12_reg_2188_pp2_iter16_reg;
reg   [0:0] icmp_ln887_12_reg_2188_pp2_iter17_reg;
reg   [0:0] icmp_ln887_12_reg_2188_pp2_iter18_reg;
reg   [0:0] icmp_ln887_12_reg_2188_pp2_iter19_reg;
reg   [0:0] icmp_ln887_12_reg_2188_pp2_iter20_reg;
reg   [0:0] icmp_ln887_12_reg_2188_pp2_iter21_reg;
reg   [0:0] icmp_ln887_12_reg_2188_pp2_iter22_reg;
reg   [0:0] icmp_ln887_12_reg_2188_pp2_iter23_reg;
reg   [0:0] icmp_ln887_12_reg_2188_pp2_iter24_reg;
reg   [0:0] icmp_ln887_12_reg_2188_pp2_iter25_reg;
reg   [0:0] icmp_ln887_12_reg_2188_pp2_iter26_reg;
reg   [0:0] icmp_ln887_12_reg_2188_pp2_iter27_reg;
reg   [0:0] icmp_ln887_12_reg_2188_pp2_iter28_reg;
reg   [0:0] icmp_ln887_12_reg_2188_pp2_iter29_reg;
reg   [0:0] icmp_ln887_12_reg_2188_pp2_iter30_reg;
reg   [0:0] icmp_ln887_12_reg_2188_pp2_iter31_reg;
reg   [0:0] icmp_ln887_12_reg_2188_pp2_iter32_reg;
reg   [0:0] icmp_ln887_12_reg_2188_pp2_iter33_reg;
wire   [12:0] col_V_fu_858_p2;
reg    ap_enable_reg_pp2_iter0;
reg   [7:0] tmp_90_reg_2227;
wire   [9:0] trunc_ln45_fu_1226_p1;
reg   [9:0] trunc_ln45_reg_2232;
reg   [7:0] tmp_93_reg_2237;
wire   [9:0] trunc_ln45_1_fu_1352_p1;
reg   [9:0] trunc_ln45_1_reg_2242;
reg   [7:0] tmp_96_reg_2247;
wire   [9:0] trunc_ln45_2_fu_1478_p1;
reg   [9:0] trunc_ln45_2_reg_2252;
reg   [7:0] tmp_99_reg_2257;
wire   [9:0] trunc_ln45_3_fu_1604_p1;
reg   [9:0] trunc_ln45_3_reg_2262;
reg   [7:0] tmp_102_reg_2267;
wire   [9:0] trunc_ln45_4_fu_1730_p1;
reg   [9:0] trunc_ln45_4_reg_2272;
reg   [7:0] tmp_105_reg_2277;
wire   [9:0] trunc_ln45_5_fu_1856_p1;
reg   [9:0] trunc_ln45_5_reg_2282;
reg    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_exit_iter0_state12;
reg    ap_enable_reg_pp2_iter2;
reg    ap_enable_reg_pp2_iter3;
reg    ap_enable_reg_pp2_iter4;
reg    ap_enable_reg_pp2_iter5;
reg    ap_enable_reg_pp2_iter6;
reg    ap_enable_reg_pp2_iter7;
reg    ap_enable_reg_pp2_iter8;
reg    ap_enable_reg_pp2_iter9;
reg    ap_enable_reg_pp2_iter10;
reg    ap_enable_reg_pp2_iter11;
reg    ap_enable_reg_pp2_iter12;
reg    ap_enable_reg_pp2_iter13;
reg    ap_enable_reg_pp2_iter14;
reg    ap_enable_reg_pp2_iter15;
reg    ap_enable_reg_pp2_iter16;
reg    ap_enable_reg_pp2_iter17;
reg    ap_enable_reg_pp2_iter18;
reg    ap_enable_reg_pp2_iter19;
reg    ap_enable_reg_pp2_iter20;
reg    ap_enable_reg_pp2_iter21;
reg    ap_enable_reg_pp2_iter22;
reg    ap_enable_reg_pp2_iter23;
reg    ap_enable_reg_pp2_iter24;
reg    ap_enable_reg_pp2_iter25;
reg    ap_enable_reg_pp2_iter26;
reg    ap_enable_reg_pp2_iter27;
reg    ap_enable_reg_pp2_iter28;
reg    ap_enable_reg_pp2_iter29;
reg    ap_enable_reg_pp2_iter30;
reg    ap_enable_reg_pp2_iter31;
reg    ap_enable_reg_pp2_iter32;
reg    ap_enable_reg_pp2_iter33;
reg    ap_enable_reg_pp2_iter34;
reg   [1:0] j_0_reg_324;
wire    ap_CS_fsm_state10;
reg   [10:0] t_V_16_0_reg_336;
reg   [31:0] p_01629_1_0_reg_348;
reg   [15:0] t_V_17_0_reg_359;
reg   [31:0] p_01348_1_0_reg_371;
reg   [12:0] t_V_reg_380;
wire    ap_CS_fsm_state48;
wire   [63:0] zext_ln544_fu_619_p1;
wire   [63:0] zext_ln544_2_fu_728_p1;
reg   [23:0] p_Val2_s_fu_188;
wire   [23:0] maxValue_0_V_2_fu_798_p2;
reg   [23:0] p_Val2_6_fu_192;
wire   [23:0] minValue_0_V_2_fu_689_p2;
reg   [23:0] p_Val2_7_fu_196;
reg   [23:0] p_Val2_8_fu_200;
reg   [23:0] p_Val2_9_fu_204;
reg   [23:0] p_Val2_10_fu_208;
reg   [23:0] minValue_0_V_fu_212;
reg   [23:0] minValue_1_V_fu_216;
reg   [23:0] minValue_2_V_fu_220;
reg   [23:0] maxValue_0_V_fu_224;
reg   [23:0] maxValue_1_V_fu_228;
reg   [23:0] maxValue_2_V_fu_232;
reg    ap_block_pp2_stage0_01001;
wire   [31:0] mul_ln1148_fu_507_p0;
wire   [31:0] mul_ln1148_1_fu_513_p0;
wire   [37:0] mul_ln1148_2_fu_522_p0;
wire   [44:0] mul_ln1148_3_fu_531_p0;
wire   [24:0] tmp_86_fu_549_p4;
wire   [23:0] maxmin_diff_0_V_fu_589_p2;
wire   [23:0] maxmin_diff_1_V_fu_595_p2;
wire   [23:0] maxmin_diff_2_V_fu_601_p2;
wire   [31:0] grp_fu_402_p5;
wire   [32:0] zext_ln215_2_fu_630_p1;
wire   [32:0] zext_ln215_fu_626_p1;
wire   [32:0] add_ln1353_fu_634_p2;
wire   [0:0] tmp_87_fu_645_p3;
wire   [0:0] icmp_ln887_fu_640_p2;
wire   [0:0] xor_ln887_fu_653_p2;
wire   [23:0] tmp_73_fu_677_p5;
wire   [32:0] zext_ln215_3_fu_741_p1;
wire   [32:0] zext_ln215_4_fu_745_p1;
wire   [32:0] sub_ln1354_fu_749_p2;
wire   [0:0] icmp_ln895_fu_755_p2;
wire   [23:0] tmp_75_fu_786_p5;
wire   [15:0] zext_ln887_fu_834_p1;
wire   [14:0] zext_ln887_1_fu_849_p1;
wire   [9:0] trunc_ln703_fu_864_p1;
wire   [15:0] shl_ln_fu_868_p3;
wire   [23:0] zext_ln703_fu_876_p1;
wire   [23:0] sub_ln703_fu_880_p2;
wire   [29:0] grp_fu_894_p0;
wire  signed [23:0] grp_fu_894_p1;
wire   [9:0] tmp_39_fu_899_p4;
wire   [15:0] shl_ln703_1_fu_909_p3;
wire   [23:0] zext_ln703_1_fu_917_p1;
wire   [23:0] sub_ln703_1_fu_921_p2;
wire   [29:0] grp_fu_935_p0;
wire  signed [23:0] grp_fu_935_p1;
wire   [9:0] tmp_42_fu_940_p4;
wire   [15:0] shl_ln703_2_fu_950_p3;
wire   [23:0] zext_ln703_2_fu_958_p1;
wire   [23:0] sub_ln703_2_fu_962_p2;
wire   [29:0] grp_fu_976_p0;
wire  signed [23:0] grp_fu_976_p1;
wire   [9:0] tmp_45_fu_981_p4;
wire   [15:0] shl_ln703_3_fu_991_p3;
wire   [23:0] zext_ln703_3_fu_999_p1;
wire   [23:0] sub_ln703_3_fu_1003_p2;
wire   [29:0] grp_fu_1017_p0;
wire  signed [23:0] grp_fu_1017_p1;
wire   [9:0] tmp_48_fu_1022_p4;
wire   [15:0] shl_ln703_4_fu_1032_p3;
wire   [23:0] zext_ln703_4_fu_1040_p1;
wire   [23:0] sub_ln703_4_fu_1044_p2;
wire   [29:0] grp_fu_1058_p0;
wire  signed [23:0] grp_fu_1058_p1;
wire   [9:0] tmp_51_fu_1063_p4;
wire   [15:0] shl_ln703_5_fu_1073_p3;
wire   [23:0] zext_ln703_5_fu_1081_p1;
wire   [23:0] sub_ln703_5_fu_1085_p2;
wire   [29:0] grp_fu_1099_p0;
wire  signed [23:0] grp_fu_1099_p1;
wire   [29:0] grp_fu_894_p2;
wire   [23:0] trunc_ln1118_fu_1104_p1;
wire   [39:0] shl_ln3_fu_1108_p3;
wire   [29:0] shl_ln1118_fu_1120_p2;
wire  signed [40:0] sext_ln1118_fu_1116_p1;
wire  signed [40:0] sext_ln1118_1_fu_1126_p1;
wire   [40:0] sub_ln1118_fu_1130_p2;
wire   [17:0] tmp_21_fu_1136_p4;
wire   [5:0] p_Result_9_fu_1158_p4;
wire  signed [18:0] sext_ln835_fu_1146_p1;
wire   [0:0] icmp_ln851_fu_1168_p2;
wire   [18:0] add_ln700_17_fu_1174_p2;
wire   [0:0] tmp_88_fu_1150_p3;
wire   [18:0] select_ln851_fu_1180_p3;
wire   [18:0] select_ln850_fu_1188_p3;
wire   [0:0] tmp_89_fu_1200_p3;
wire   [17:0] trunc_ln647_fu_1196_p1;
wire   [17:0] select_ln399_fu_1208_p3;
wire   [29:0] grp_fu_935_p2;
wire   [23:0] trunc_ln1118_1_fu_1230_p1;
wire   [39:0] shl_ln1118_2_fu_1234_p3;
wire   [29:0] shl_ln1118_1_fu_1246_p2;
wire  signed [40:0] sext_ln1118_2_fu_1242_p1;
wire  signed [40:0] sext_ln1118_3_fu_1252_p1;
wire   [40:0] sub_ln1118_1_fu_1256_p2;
wire   [17:0] tmp_22_fu_1262_p4;
wire   [5:0] p_Result_97_1_fu_1284_p4;
wire  signed [18:0] sext_ln835_1_fu_1272_p1;
wire   [0:0] icmp_ln851_6_fu_1294_p2;
wire   [18:0] add_ln700_18_fu_1300_p2;
wire   [0:0] tmp_91_fu_1276_p3;
wire   [18:0] select_ln851_6_fu_1306_p3;
wire   [18:0] select_ln850_6_fu_1314_p3;
wire   [0:0] tmp_92_fu_1326_p3;
wire   [17:0] trunc_ln647_7_fu_1322_p1;
wire   [17:0] select_ln399_1_fu_1334_p3;
wire   [29:0] grp_fu_976_p2;
wire   [23:0] trunc_ln1118_2_fu_1356_p1;
wire   [39:0] shl_ln1118_4_fu_1360_p3;
wire   [29:0] shl_ln1118_3_fu_1372_p2;
wire  signed [40:0] sext_ln1118_4_fu_1368_p1;
wire  signed [40:0] sext_ln1118_5_fu_1378_p1;
wire   [40:0] sub_ln1118_2_fu_1382_p2;
wire   [17:0] tmp_23_fu_1388_p4;
wire   [5:0] p_Result_97_2_fu_1410_p4;
wire  signed [18:0] sext_ln835_2_fu_1398_p1;
wire   [0:0] icmp_ln851_7_fu_1420_p2;
wire   [18:0] add_ln700_19_fu_1426_p2;
wire   [0:0] tmp_94_fu_1402_p3;
wire   [18:0] select_ln851_7_fu_1432_p3;
wire   [18:0] select_ln850_7_fu_1440_p3;
wire   [0:0] tmp_95_fu_1452_p3;
wire   [17:0] trunc_ln647_8_fu_1448_p1;
wire   [17:0] select_ln399_2_fu_1460_p3;
wire   [29:0] grp_fu_1017_p2;
wire   [23:0] trunc_ln1118_3_fu_1482_p1;
wire   [39:0] shl_ln1118_6_fu_1486_p3;
wire   [29:0] shl_ln1118_5_fu_1498_p2;
wire  signed [40:0] sext_ln1118_6_fu_1494_p1;
wire  signed [40:0] sext_ln1118_7_fu_1504_p1;
wire   [40:0] sub_ln1118_3_fu_1508_p2;
wire   [17:0] tmp_24_fu_1514_p4;
wire   [5:0] p_Result_97_3_fu_1536_p4;
wire  signed [18:0] sext_ln835_3_fu_1524_p1;
wire   [0:0] icmp_ln851_8_fu_1546_p2;
wire   [18:0] add_ln700_20_fu_1552_p2;
wire   [0:0] tmp_97_fu_1528_p3;
wire   [18:0] select_ln851_8_fu_1558_p3;
wire   [18:0] select_ln850_8_fu_1566_p3;
wire   [0:0] tmp_98_fu_1578_p3;
wire   [17:0] trunc_ln647_9_fu_1574_p1;
wire   [17:0] select_ln399_3_fu_1586_p3;
wire   [29:0] grp_fu_1058_p2;
wire   [23:0] trunc_ln1118_4_fu_1608_p1;
wire   [39:0] shl_ln1118_8_fu_1612_p3;
wire   [29:0] shl_ln1118_7_fu_1624_p2;
wire  signed [40:0] sext_ln1118_8_fu_1620_p1;
wire  signed [40:0] sext_ln1118_9_fu_1630_p1;
wire   [40:0] sub_ln1118_4_fu_1634_p2;
wire   [17:0] tmp_25_fu_1640_p4;
wire   [5:0] p_Result_97_4_fu_1662_p4;
wire  signed [18:0] sext_ln835_4_fu_1650_p1;
wire   [0:0] icmp_ln851_9_fu_1672_p2;
wire   [18:0] add_ln700_21_fu_1678_p2;
wire   [0:0] tmp_100_fu_1654_p3;
wire   [18:0] select_ln851_9_fu_1684_p3;
wire   [18:0] select_ln850_9_fu_1692_p3;
wire   [0:0] tmp_101_fu_1704_p3;
wire   [17:0] trunc_ln647_10_fu_1700_p1;
wire   [17:0] select_ln399_4_fu_1712_p3;
wire   [29:0] grp_fu_1099_p2;
wire   [23:0] trunc_ln1118_5_fu_1734_p1;
wire   [39:0] shl_ln1118_s_fu_1738_p3;
wire   [29:0] shl_ln1118_9_fu_1750_p2;
wire  signed [40:0] sext_ln1118_10_fu_1746_p1;
wire  signed [40:0] sext_ln1118_11_fu_1756_p1;
wire   [40:0] sub_ln1118_5_fu_1760_p2;
wire   [17:0] tmp_26_fu_1766_p4;
wire   [5:0] p_Result_97_5_fu_1788_p4;
wire  signed [18:0] sext_ln835_5_fu_1776_p1;
wire   [0:0] icmp_ln851_10_fu_1798_p2;
wire   [18:0] add_ln700_22_fu_1804_p2;
wire   [0:0] tmp_103_fu_1780_p3;
wire   [18:0] select_ln851_10_fu_1810_p3;
wire   [18:0] select_ln850_10_fu_1818_p3;
wire   [0:0] tmp_104_fu_1830_p3;
wire   [17:0] trunc_ln647_11_fu_1826_p1;
wire   [17:0] select_ln399_5_fu_1838_p3;
wire   [0:0] icmp_ln45_fu_1860_p2;
wire   [0:0] icmp_ln45_1_fu_1872_p2;
wire   [0:0] icmp_ln45_2_fu_1884_p2;
wire   [0:0] icmp_ln45_3_fu_1896_p2;
wire   [0:0] icmp_ln45_4_fu_1908_p2;
wire   [0:0] icmp_ln45_5_fu_1920_p2;
wire   [9:0] select_ln45_5_fu_1925_p3;
wire   [9:0] select_ln45_4_fu_1913_p3;
wire   [9:0] select_ln45_3_fu_1901_p3;
wire   [9:0] select_ln45_2_fu_1889_p3;
wire   [9:0] select_ln45_1_fu_1877_p3;
wire   [9:0] select_ln45_fu_1865_p3;
wire   [15:0] total_fu_1949_p0;
wire   [15:0] total_fu_1949_p1;
reg    grp_fu_894_ce;
reg    grp_fu_935_ce;
reg    grp_fu_976_ce;
reg    grp_fu_1017_ce;
reg    grp_fu_1058_ce;
reg    grp_fu_1099_ce;
reg   [12:0] ap_NS_fsm;
reg    ap_idle_pp2;
wire    ap_enable_pp2;
wire   [44:0] mul_ln1148_1_fu_513_p00;
wire   [75:0] mul_ln1148_2_fu_522_p00;
wire   [89:0] mul_ln1148_3_fu_531_p00;
wire   [37:0] mul_ln1148_fu_507_p00;
wire   [31:0] total_fu_1949_p00;
wire   [31:0] total_fu_1949_p10;

// power-on initialization
initial begin
#0 ap_CS_fsm = 13'd1;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter35 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter2 = 1'b0;
#0 ap_enable_reg_pp2_iter3 = 1'b0;
#0 ap_enable_reg_pp2_iter4 = 1'b0;
#0 ap_enable_reg_pp2_iter5 = 1'b0;
#0 ap_enable_reg_pp2_iter6 = 1'b0;
#0 ap_enable_reg_pp2_iter7 = 1'b0;
#0 ap_enable_reg_pp2_iter8 = 1'b0;
#0 ap_enable_reg_pp2_iter9 = 1'b0;
#0 ap_enable_reg_pp2_iter10 = 1'b0;
#0 ap_enable_reg_pp2_iter11 = 1'b0;
#0 ap_enable_reg_pp2_iter12 = 1'b0;
#0 ap_enable_reg_pp2_iter13 = 1'b0;
#0 ap_enable_reg_pp2_iter14 = 1'b0;
#0 ap_enable_reg_pp2_iter15 = 1'b0;
#0 ap_enable_reg_pp2_iter16 = 1'b0;
#0 ap_enable_reg_pp2_iter17 = 1'b0;
#0 ap_enable_reg_pp2_iter18 = 1'b0;
#0 ap_enable_reg_pp2_iter19 = 1'b0;
#0 ap_enable_reg_pp2_iter20 = 1'b0;
#0 ap_enable_reg_pp2_iter21 = 1'b0;
#0 ap_enable_reg_pp2_iter22 = 1'b0;
#0 ap_enable_reg_pp2_iter23 = 1'b0;
#0 ap_enable_reg_pp2_iter24 = 1'b0;
#0 ap_enable_reg_pp2_iter25 = 1'b0;
#0 ap_enable_reg_pp2_iter26 = 1'b0;
#0 ap_enable_reg_pp2_iter27 = 1'b0;
#0 ap_enable_reg_pp2_iter28 = 1'b0;
#0 ap_enable_reg_pp2_iter29 = 1'b0;
#0 ap_enable_reg_pp2_iter30 = 1'b0;
#0 ap_enable_reg_pp2_iter31 = 1'b0;
#0 ap_enable_reg_pp2_iter32 = 1'b0;
#0 ap_enable_reg_pp2_iter33 = 1'b0;
#0 ap_enable_reg_pp2_iter34 = 1'b0;
end

ISPPipeline_accelDeQ #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
ISPPipeline_accelDeQ_U334(
    .din0(hist_0_q0),
    .din1(hist_1_q0),
    .din2(hist_2_q0),
    .din3(j_0_reg_324),
    .dout(grp_fu_402_p5)
);

ISPPipeline_accelEe0 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 24 ),
    .din2_WIDTH( 24 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 24 ))
ISPPipeline_accelEe0_U335(
    .din0(minValue_0_V_fu_212),
    .din1(minValue_1_V_fu_216),
    .din2(minValue_2_V_fu_220),
    .din3(j_0_reg_324),
    .dout(tmp_73_fu_677_p5)
);

ISPPipeline_accelEe0 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 24 ),
    .din2_WIDTH( 24 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 24 ))
ISPPipeline_accelEe0_U336(
    .din0(maxValue_0_V_fu_224),
    .din1(maxValue_1_V_fu_228),
    .din2(maxValue_2_V_fu_232),
    .din3(j_0_reg_324),
    .dout(tmp_75_fu_786_p5)
);

ISPPipeline_accelFfa #(
    .ID( 1 ),
    .NUM_STAGE( 34 ),
    .din0_WIDTH( 30 ),
    .din1_WIDTH( 24 ),
    .dout_WIDTH( 30 ))
ISPPipeline_accelFfa_U337(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_894_p0),
    .din1(grp_fu_894_p1),
    .ce(grp_fu_894_ce),
    .dout(grp_fu_894_p2)
);

ISPPipeline_accelFfa #(
    .ID( 1 ),
    .NUM_STAGE( 34 ),
    .din0_WIDTH( 30 ),
    .din1_WIDTH( 24 ),
    .dout_WIDTH( 30 ))
ISPPipeline_accelFfa_U338(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_935_p0),
    .din1(grp_fu_935_p1),
    .ce(grp_fu_935_ce),
    .dout(grp_fu_935_p2)
);

ISPPipeline_accelFfa #(
    .ID( 1 ),
    .NUM_STAGE( 34 ),
    .din0_WIDTH( 30 ),
    .din1_WIDTH( 24 ),
    .dout_WIDTH( 30 ))
ISPPipeline_accelFfa_U339(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_976_p0),
    .din1(grp_fu_976_p1),
    .ce(grp_fu_976_ce),
    .dout(grp_fu_976_p2)
);

ISPPipeline_accelFfa #(
    .ID( 1 ),
    .NUM_STAGE( 34 ),
    .din0_WIDTH( 30 ),
    .din1_WIDTH( 24 ),
    .dout_WIDTH( 30 ))
ISPPipeline_accelFfa_U340(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1017_p0),
    .din1(grp_fu_1017_p1),
    .ce(grp_fu_1017_ce),
    .dout(grp_fu_1017_p2)
);

ISPPipeline_accelFfa #(
    .ID( 1 ),
    .NUM_STAGE( 34 ),
    .din0_WIDTH( 30 ),
    .din1_WIDTH( 24 ),
    .dout_WIDTH( 30 ))
ISPPipeline_accelFfa_U341(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1058_p0),
    .din1(grp_fu_1058_p1),
    .ce(grp_fu_1058_ce),
    .dout(grp_fu_1058_p2)
);

ISPPipeline_accelFfa #(
    .ID( 1 ),
    .NUM_STAGE( 34 ),
    .din0_WIDTH( 30 ),
    .din1_WIDTH( 24 ),
    .dout_WIDTH( 30 ))
ISPPipeline_accelFfa_U342(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1099_p0),
    .din1(grp_fu_1099_p1),
    .ce(grp_fu_1099_ce),
    .dout(grp_fu_1099_p2)
);

ISPPipeline_accelGfk #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
ISPPipeline_accelGfk_U343(
    .din0(total_fu_1949_p0),
    .din1(total_fu_1949_p1),
    .dout(total_fu_1949_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_condition_pp2_exit_iter0_state12))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if (((icmp_ln887_11_fu_838_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state11))) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp2_exit_iter0_state12)) begin
                ap_enable_reg_pp2_iter1 <= (1'b1 ^ ap_condition_pp2_exit_iter0_state12);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter10 <= ap_enable_reg_pp2_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter11 <= ap_enable_reg_pp2_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter12 <= ap_enable_reg_pp2_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter13 <= ap_enable_reg_pp2_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter14 <= ap_enable_reg_pp2_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter15 <= ap_enable_reg_pp2_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter16 <= ap_enable_reg_pp2_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter17 <= ap_enable_reg_pp2_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter18 <= ap_enable_reg_pp2_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter19 <= ap_enable_reg_pp2_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter2 <= ap_enable_reg_pp2_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter20 <= ap_enable_reg_pp2_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter21 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter21 <= ap_enable_reg_pp2_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter22 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter22 <= ap_enable_reg_pp2_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter23 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter23 <= ap_enable_reg_pp2_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter24 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter24 <= ap_enable_reg_pp2_iter23;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter25 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter25 <= ap_enable_reg_pp2_iter24;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter26 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter26 <= ap_enable_reg_pp2_iter25;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter27 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter27 <= ap_enable_reg_pp2_iter26;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter28 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter28 <= ap_enable_reg_pp2_iter27;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter29 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter29 <= ap_enable_reg_pp2_iter28;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter3 <= ap_enable_reg_pp2_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter30 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter30 <= ap_enable_reg_pp2_iter29;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter31 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter31 <= ap_enable_reg_pp2_iter30;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter32 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter32 <= ap_enable_reg_pp2_iter31;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter33 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter33 <= ap_enable_reg_pp2_iter32;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter34 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter34 <= ap_enable_reg_pp2_iter33;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter35 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter35 <= ap_enable_reg_pp2_iter34;
        end else if (((icmp_ln887_11_fu_838_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state11))) begin
            ap_enable_reg_pp2_iter35 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter4 <= ap_enable_reg_pp2_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter5 <= ap_enable_reg_pp2_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter6 <= ap_enable_reg_pp2_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter7 <= ap_enable_reg_pp2_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter8 <= ap_enable_reg_pp2_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter9 <= ap_enable_reg_pp2_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        j_0_reg_324 <= j_reg_2080;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        j_0_reg_324 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == and_ln329_fu_760_p2) & (j_0_reg_324 == 2'd0) & (1'b1 == ap_CS_fsm_state9))) begin
        maxValue_0_V_fu_224 <= maxValue_0_V_2_fu_798_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        maxValue_0_V_fu_224 <= 24'd65504;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == and_ln329_fu_760_p2) & (j_0_reg_324 == 2'd1) & (1'b1 == ap_CS_fsm_state9))) begin
        maxValue_1_V_fu_228 <= maxValue_0_V_2_fu_798_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        maxValue_1_V_fu_228 <= 24'd65504;
    end
end

always @ (posedge ap_clk) begin
    if ((~(j_0_reg_324 == 2'd1) & ~(j_0_reg_324 == 2'd0) & (1'd1 == and_ln329_fu_760_p2) & (1'b1 == ap_CS_fsm_state9))) begin
        maxValue_2_V_fu_232 <= maxValue_0_V_2_fu_798_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        maxValue_2_V_fu_232 <= 24'd65504;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == and_ln317_fu_659_p2) & (j_0_reg_324 == 2'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        minValue_0_V_fu_212 <= minValue_0_V_2_fu_689_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        minValue_0_V_fu_212 <= 24'd16777184;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == and_ln317_fu_659_p2) & (j_0_reg_324 == 2'd1) & (1'b1 == ap_CS_fsm_state6))) begin
        minValue_1_V_fu_216 <= minValue_0_V_2_fu_689_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        minValue_1_V_fu_216 <= 24'd16777184;
    end
end

always @ (posedge ap_clk) begin
    if ((~(j_0_reg_324 == 2'd1) & ~(j_0_reg_324 == 2'd0) & (1'd1 == and_ln317_fu_659_p2) & (1'b1 == ap_CS_fsm_state6))) begin
        minValue_2_V_fu_220 <= minValue_0_V_2_fu_689_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        minValue_2_V_fu_220 <= 24'd16777184;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == and_ln329_fu_760_p2) & (1'b1 == ap_CS_fsm_state9))) begin
        p_01348_1_0_reg_371 <= sub_ln701_fu_771_p2;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        p_01348_1_0_reg_371 <= total_reg_2049;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == and_ln317_fu_659_p2) & (1'b1 == ap_CS_fsm_state6))) begin
        p_01629_1_0_reg_348 <= add_ln700_16_fu_671_p2;
    end else if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln293_fu_537_p2 == 1'd0))) begin
        p_01629_1_0_reg_348 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~(j_0_reg_324 == 2'd1) & ~(j_0_reg_324 == 2'd0) & (1'd1 == and_ln317_fu_659_p2) & (1'b1 == ap_CS_fsm_state6))) begin
        p_Val2_10_fu_208 <= minValue_0_V_2_fu_689_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        p_Val2_10_fu_208 <= 24'd16777184;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == and_ln317_fu_659_p2) & (j_0_reg_324 == 2'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        p_Val2_6_fu_192 <= minValue_0_V_2_fu_689_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        p_Val2_6_fu_192 <= 24'd16777184;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == and_ln329_fu_760_p2) & (j_0_reg_324 == 2'd1) & (1'b1 == ap_CS_fsm_state9))) begin
        p_Val2_7_fu_196 <= maxValue_0_V_2_fu_798_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        p_Val2_7_fu_196 <= 24'd65504;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == and_ln317_fu_659_p2) & (j_0_reg_324 == 2'd1) & (1'b1 == ap_CS_fsm_state6))) begin
        p_Val2_8_fu_200 <= minValue_0_V_2_fu_689_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        p_Val2_8_fu_200 <= 24'd16777184;
    end
end

always @ (posedge ap_clk) begin
    if ((~(j_0_reg_324 == 2'd1) & ~(j_0_reg_324 == 2'd0) & (1'd1 == and_ln329_fu_760_p2) & (1'b1 == ap_CS_fsm_state9))) begin
        p_Val2_9_fu_204 <= maxValue_0_V_2_fu_798_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        p_Val2_9_fu_204 <= 24'd65504;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == and_ln329_fu_760_p2) & (j_0_reg_324 == 2'd0) & (1'b1 == ap_CS_fsm_state9))) begin
        p_Val2_s_fu_188 <= maxValue_0_V_2_fu_798_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        p_Val2_s_fu_188 <= 24'd65504;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == and_ln317_fu_659_p2) & (1'b1 == ap_CS_fsm_state6))) begin
        t_V_16_0_reg_336 <= add_ln700_fu_665_p2;
    end else if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln293_fu_537_p2 == 1'd0))) begin
        t_V_16_0_reg_336 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == and_ln329_fu_760_p2) & (1'b1 == ap_CS_fsm_state9))) begin
        t_V_17_0_reg_359 <= add_ln701_fu_765_p2;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        t_V_17_0_reg_359 <= 16'd1023;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln887_12_fu_853_p2 == 1'd1) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
        t_V_2_reg_391 <= col_V_fu_858_p2;
    end else if (((icmp_ln887_11_fu_838_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state11))) begin
        t_V_2_reg_391 <= 13'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state48)) begin
        t_V_reg_380 <= row_V_reg_2183;
    end else if (((icmp_ln293_fu_537_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        t_V_reg_380 <= 13'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        icmp_ln883_reg_2161 <= icmp_ln883_fu_735_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        icmp_ln887_12_reg_2188 <= icmp_ln887_12_fu_853_p2;
        icmp_ln887_12_reg_2188_pp2_iter1_reg <= icmp_ln887_12_reg_2188;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp2_stage0_11001)) begin
        icmp_ln887_12_reg_2188_pp2_iter10_reg <= icmp_ln887_12_reg_2188_pp2_iter9_reg;
        icmp_ln887_12_reg_2188_pp2_iter11_reg <= icmp_ln887_12_reg_2188_pp2_iter10_reg;
        icmp_ln887_12_reg_2188_pp2_iter12_reg <= icmp_ln887_12_reg_2188_pp2_iter11_reg;
        icmp_ln887_12_reg_2188_pp2_iter13_reg <= icmp_ln887_12_reg_2188_pp2_iter12_reg;
        icmp_ln887_12_reg_2188_pp2_iter14_reg <= icmp_ln887_12_reg_2188_pp2_iter13_reg;
        icmp_ln887_12_reg_2188_pp2_iter15_reg <= icmp_ln887_12_reg_2188_pp2_iter14_reg;
        icmp_ln887_12_reg_2188_pp2_iter16_reg <= icmp_ln887_12_reg_2188_pp2_iter15_reg;
        icmp_ln887_12_reg_2188_pp2_iter17_reg <= icmp_ln887_12_reg_2188_pp2_iter16_reg;
        icmp_ln887_12_reg_2188_pp2_iter18_reg <= icmp_ln887_12_reg_2188_pp2_iter17_reg;
        icmp_ln887_12_reg_2188_pp2_iter19_reg <= icmp_ln887_12_reg_2188_pp2_iter18_reg;
        icmp_ln887_12_reg_2188_pp2_iter20_reg <= icmp_ln887_12_reg_2188_pp2_iter19_reg;
        icmp_ln887_12_reg_2188_pp2_iter21_reg <= icmp_ln887_12_reg_2188_pp2_iter20_reg;
        icmp_ln887_12_reg_2188_pp2_iter22_reg <= icmp_ln887_12_reg_2188_pp2_iter21_reg;
        icmp_ln887_12_reg_2188_pp2_iter23_reg <= icmp_ln887_12_reg_2188_pp2_iter22_reg;
        icmp_ln887_12_reg_2188_pp2_iter24_reg <= icmp_ln887_12_reg_2188_pp2_iter23_reg;
        icmp_ln887_12_reg_2188_pp2_iter25_reg <= icmp_ln887_12_reg_2188_pp2_iter24_reg;
        icmp_ln887_12_reg_2188_pp2_iter26_reg <= icmp_ln887_12_reg_2188_pp2_iter25_reg;
        icmp_ln887_12_reg_2188_pp2_iter27_reg <= icmp_ln887_12_reg_2188_pp2_iter26_reg;
        icmp_ln887_12_reg_2188_pp2_iter28_reg <= icmp_ln887_12_reg_2188_pp2_iter27_reg;
        icmp_ln887_12_reg_2188_pp2_iter29_reg <= icmp_ln887_12_reg_2188_pp2_iter28_reg;
        icmp_ln887_12_reg_2188_pp2_iter2_reg <= icmp_ln887_12_reg_2188_pp2_iter1_reg;
        icmp_ln887_12_reg_2188_pp2_iter30_reg <= icmp_ln887_12_reg_2188_pp2_iter29_reg;
        icmp_ln887_12_reg_2188_pp2_iter31_reg <= icmp_ln887_12_reg_2188_pp2_iter30_reg;
        icmp_ln887_12_reg_2188_pp2_iter32_reg <= icmp_ln887_12_reg_2188_pp2_iter31_reg;
        icmp_ln887_12_reg_2188_pp2_iter33_reg <= icmp_ln887_12_reg_2188_pp2_iter32_reg;
        icmp_ln887_12_reg_2188_pp2_iter34_reg <= icmp_ln887_12_reg_2188_pp2_iter33_reg;
        icmp_ln887_12_reg_2188_pp2_iter3_reg <= icmp_ln887_12_reg_2188_pp2_iter2_reg;
        icmp_ln887_12_reg_2188_pp2_iter4_reg <= icmp_ln887_12_reg_2188_pp2_iter3_reg;
        icmp_ln887_12_reg_2188_pp2_iter5_reg <= icmp_ln887_12_reg_2188_pp2_iter4_reg;
        icmp_ln887_12_reg_2188_pp2_iter6_reg <= icmp_ln887_12_reg_2188_pp2_iter5_reg;
        icmp_ln887_12_reg_2188_pp2_iter7_reg <= icmp_ln887_12_reg_2188_pp2_iter6_reg;
        icmp_ln887_12_reg_2188_pp2_iter8_reg <= icmp_ln887_12_reg_2188_pp2_iter7_reg;
        icmp_ln887_12_reg_2188_pp2_iter9_reg <= icmp_ln887_12_reg_2188_pp2_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        j_reg_2080 <= j_fu_543_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        mul_ln1148_1_reg_2061[44 : 1] <= mul_ln1148_1_fu_513_p2[44 : 1];
        mul_ln1148_reg_2056[37 : 1] <= mul_ln1148_fu_507_p2[37 : 1];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        mul_ln1148_2_reg_2066[75 : 1] <= mul_ln1148_2_fu_522_p2[75 : 1];
        mul_ln1148_3_reg_2071[89 : 1] <= mul_ln1148_3_fu_531_p2[89 : 1];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        row_V_reg_2183 <= row_V_fu_843_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln293_fu_537_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        sext_ln1148_1_reg_2101 <= sext_ln1148_1_fu_611_p1;
        sext_ln1148_2_reg_2107 <= sext_ln1148_2_fu_615_p1;
        sext_ln1148_reg_2095 <= sext_ln1148_fu_607_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        sext_ln895_reg_2141 <= sext_ln895_fu_725_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln887_12_reg_2188_pp2_iter33_reg == 1'd1) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        tmp_102_reg_2267 <= {{select_ln399_4_fu_1712_p3[17:10]}};
        tmp_105_reg_2277 <= {{select_ln399_5_fu_1838_p3[17:10]}};
        tmp_90_reg_2227 <= {{select_ln399_fu_1208_p3[17:10]}};
        tmp_93_reg_2237 <= {{select_ln399_1_fu_1334_p3[17:10]}};
        tmp_96_reg_2247 <= {{select_ln399_2_fu_1460_p3[17:10]}};
        tmp_99_reg_2257 <= {{select_ln399_3_fu_1586_p3[17:10]}};
        trunc_ln45_1_reg_2242 <= trunc_ln45_1_fu_1352_p1;
        trunc_ln45_2_reg_2252 <= trunc_ln45_2_fu_1478_p1;
        trunc_ln45_3_reg_2262 <= trunc_ln45_3_fu_1604_p1;
        trunc_ln45_4_reg_2272 <= trunc_ln45_4_fu_1730_p1;
        trunc_ln45_5_reg_2282 <= trunc_ln45_5_fu_1856_p1;
        trunc_ln45_reg_2232 <= trunc_ln45_fu_1226_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        total_reg_2049 <= total_fu_1949_p2;
        trunc_ln8_reg_2044 <= {{dst_cols_read[15:1]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln293_fu_537_p2 == 1'd0))) begin
        trunc_ln555_2_reg_2085 <= {{mul_ln1148_3_reg_2071[89:58]}};
        zext_ln887_2_reg_2090[24 : 0] <= zext_ln887_2_fu_567_p1[24 : 0];
    end
end

always @ (*) begin
    if ((icmp_ln887_12_fu_853_p2 == 1'd0)) begin
        ap_condition_pp2_exit_iter0_state12 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state12 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((1'b1 == ap_CS_fsm_state11) & (icmp_ln887_11_fu_838_p2 == 1'd0)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter35 == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter34 == 1'b0) & (ap_enable_reg_pp2_iter33 == 1'b0) & (ap_enable_reg_pp2_iter32 == 1'b0) & (ap_enable_reg_pp2_iter31 == 1'b0) & (ap_enable_reg_pp2_iter30 == 1'b0) & (ap_enable_reg_pp2_iter29 == 1'b0) & (ap_enable_reg_pp2_iter28 == 1'b0) & (ap_enable_reg_pp2_iter27 == 1'b0) & (ap_enable_reg_pp2_iter26 == 1'b0) & (ap_enable_reg_pp2_iter25 == 1'b0) & (ap_enable_reg_pp2_iter24 == 1'b0) & (ap_enable_reg_pp2_iter23 == 1'b0) & (ap_enable_reg_pp2_iter22 == 1'b0) & (ap_enable_reg_pp2_iter21 == 1'b0) & (ap_enable_reg_pp2_iter20 == 1'b0) & (ap_enable_reg_pp2_iter19 == 1'b0) & (ap_enable_reg_pp2_iter18 == 1'b0) & (ap_enable_reg_pp2_iter17 == 1'b0) & (ap_enable_reg_pp2_iter16 == 1'b0) & (ap_enable_reg_pp2_iter15 == 1'b0) & (ap_enable_reg_pp2_iter14 == 1'b0) & (ap_enable_reg_pp2_iter13 == 1'b0) & (ap_enable_reg_pp2_iter12 == 1'b0) & (ap_enable_reg_pp2_iter11 == 1'b0) & (ap_enable_reg_pp2_iter10 == 1'b0) & (ap_enable_reg_pp2_iter9 == 1'b0) & (ap_enable_reg_pp2_iter8 == 1'b0) & (ap_enable_reg_pp2_iter7 == 1'b0) & (ap_enable_reg_pp2_iter6 == 1'b0) & (ap_enable_reg_pp2_iter5 == 1'b0) & (ap_enable_reg_pp2_iter4 == 1'b0) & (ap_enable_reg_pp2_iter3 == 1'b0) & (ap_enable_reg_pp2_iter2 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln887_11_fu_838_p2 == 1'd0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln887_12_reg_2188_pp2_iter34_reg == 1'd1) & (1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter35 == 1'b1))) begin
        dst_data_V_V_blk_n = dst_data_V_V_full_n;
    end else begin
        dst_data_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln887_12_reg_2188_pp2_iter34_reg == 1'd1) & (1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter35 == 1'b1))) begin
        dst_data_V_V_write = 1'b1;
    end else begin
        dst_data_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        grp_fu_1017_ce = 1'b1;
    end else begin
        grp_fu_1017_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        grp_fu_1058_ce = 1'b1;
    end else begin
        grp_fu_1058_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        grp_fu_1099_ce = 1'b1;
    end else begin
        grp_fu_1099_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        grp_fu_894_ce = 1'b1;
    end else begin
        grp_fu_894_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        grp_fu_935_ce = 1'b1;
    end else begin
        grp_fu_935_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        grp_fu_976_ce = 1'b1;
    end else begin
        grp_fu_976_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        hist_0_address0 = zext_ln544_2_fu_728_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        hist_0_address0 = zext_ln544_fu_619_p1;
    end else begin
        hist_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state5))) begin
        hist_0_ce0 = 1'b1;
    end else begin
        hist_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        hist_1_address0 = zext_ln544_2_fu_728_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        hist_1_address0 = zext_ln544_fu_619_p1;
    end else begin
        hist_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state5))) begin
        hist_1_ce0 = 1'b1;
    end else begin
        hist_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        hist_2_address0 = zext_ln544_2_fu_728_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        hist_2_address0 = zext_ln544_fu_619_p1;
    end else begin
        hist_2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state5))) begin
        hist_2_ce0 = 1'b1;
    end else begin
        hist_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln887_12_reg_2188 == 1'd1) & (1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        src_data_V_V_blk_n = src_data_V_V_empty_n;
    end else begin
        src_data_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln887_12_reg_2188 == 1'd1) & (1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        src_data_V_V_read = 1'b1;
    end else begin
        src_data_V_V_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((icmp_ln293_fu_537_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            if (((1'd1 == and_ln317_fu_659_p2) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            if (((1'd1 == and_ln329_fu_760_p2) & (1'b1 == ap_CS_fsm_state9))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state11 : begin
            if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln887_11_fu_838_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_pp2_stage0 : begin
            if ((~((ap_enable_reg_pp2_iter1 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter0 == 1'b1) & (icmp_ln887_12_fu_853_p2 == 1'd0)) & ~((ap_enable_reg_pp2_iter34 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter35 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if ((((ap_enable_reg_pp2_iter34 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter35 == 1'b1)) | ((ap_enable_reg_pp2_iter1 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter0 == 1'b1) & (icmp_ln887_12_fu_853_p2 == 1'd0)))) begin
                ap_NS_fsm = ap_ST_fsm_state48;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln1353_fu_634_p2 = (zext_ln215_2_fu_630_p1 + zext_ln215_fu_626_p1);

assign add_ln700_16_fu_671_p2 = (grp_fu_402_p5 + p_01629_1_0_reg_348);

assign add_ln700_17_fu_1174_p2 = ($signed(19'd1) + $signed(sext_ln835_fu_1146_p1));

assign add_ln700_18_fu_1300_p2 = ($signed(19'd1) + $signed(sext_ln835_1_fu_1272_p1));

assign add_ln700_19_fu_1426_p2 = ($signed(19'd1) + $signed(sext_ln835_2_fu_1398_p1));

assign add_ln700_20_fu_1552_p2 = ($signed(19'd1) + $signed(sext_ln835_3_fu_1524_p1));

assign add_ln700_21_fu_1678_p2 = ($signed(19'd1) + $signed(sext_ln835_4_fu_1650_p1));

assign add_ln700_22_fu_1804_p2 = ($signed(19'd1) + $signed(sext_ln835_5_fu_1776_p1));

assign add_ln700_fu_665_p2 = (t_V_16_0_reg_336 + 11'd1);

assign add_ln701_fu_765_p2 = ($signed(t_V_17_0_reg_359) + $signed(16'd65535));

assign and_ln317_fu_659_p2 = (xor_ln887_fu_653_p2 & icmp_ln887_fu_640_p2);

assign and_ln329_fu_760_p2 = (icmp_ln895_fu_755_p2 & icmp_ln883_reg_2161);

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state48 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp2_stage0_01001 = (((icmp_ln887_12_reg_2188_pp2_iter34_reg == 1'd1) & (dst_data_V_V_full_n == 1'b0) & (ap_enable_reg_pp2_iter35 == 1'b1)) | ((icmp_ln887_12_reg_2188 == 1'd1) & (src_data_V_V_empty_n == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp2_stage0_11001 = (((icmp_ln887_12_reg_2188_pp2_iter34_reg == 1'd1) & (dst_data_V_V_full_n == 1'b0) & (ap_enable_reg_pp2_iter35 == 1'b1)) | ((icmp_ln887_12_reg_2188 == 1'd1) & (src_data_V_V_empty_n == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp2_stage0_subdone = (((icmp_ln887_12_reg_2188_pp2_iter34_reg == 1'd1) & (dst_data_V_V_full_n == 1'b0) & (ap_enable_reg_pp2_iter35 == 1'b1)) | ((icmp_ln887_12_reg_2188 == 1'd1) & (src_data_V_V_empty_n == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b1)));
end

assign ap_block_state12_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state13_pp2_stage0_iter1 = ((icmp_ln887_12_reg_2188 == 1'd1) & (src_data_V_V_empty_n == 1'b0));
end

assign ap_block_state14_pp2_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp2_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp2_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp2_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp2_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp2_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp2_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp2_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp2_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp2_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp2_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp2_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp2_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp2_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp2_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp2_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp2_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp2_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp2_stage0_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp2_stage0_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp2_stage0_iter22 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp2_stage0_iter23 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp2_stage0_iter24 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp2_stage0_iter25 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp2_stage0_iter26 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp2_stage0_iter27 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp2_stage0_iter28 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp2_stage0_iter29 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp2_stage0_iter30 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp2_stage0_iter31 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp2_stage0_iter32 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp2_stage0_iter33 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp2_stage0_iter34 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state47_pp2_stage0_iter35 = ((icmp_ln887_12_reg_2188_pp2_iter34_reg == 1'd1) & (dst_data_V_V_full_n == 1'b0));
end

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign col_V_fu_858_p2 = (t_V_2_reg_391 + 13'd1);

assign dst_data_V_V_din = {{{{{{select_ln45_5_fu_1925_p3}, {select_ln45_4_fu_1913_p3}}, {select_ln45_3_fu_1901_p3}}, {select_ln45_2_fu_1889_p3}}, {select_ln45_1_fu_1877_p3}}, {select_ln45_fu_1865_p3}};

assign grp_fu_1017_p0 = {{sub_ln703_3_fu_1003_p2}, {6'd0}};

assign grp_fu_1017_p1 = sext_ln1148_reg_2095;

assign grp_fu_1058_p0 = {{sub_ln703_4_fu_1044_p2}, {6'd0}};

assign grp_fu_1058_p1 = sext_ln1148_1_reg_2101;

assign grp_fu_1099_p0 = {{sub_ln703_5_fu_1085_p2}, {6'd0}};

assign grp_fu_1099_p1 = sext_ln1148_2_reg_2107;

assign grp_fu_894_p0 = {{sub_ln703_fu_880_p2}, {6'd0}};

assign grp_fu_894_p1 = sext_ln1148_reg_2095;

assign grp_fu_935_p0 = {{sub_ln703_1_fu_921_p2}, {6'd0}};

assign grp_fu_935_p1 = sext_ln1148_1_reg_2101;

assign grp_fu_976_p0 = {{sub_ln703_2_fu_962_p2}, {6'd0}};

assign grp_fu_976_p1 = sext_ln1148_2_reg_2107;

assign icmp_ln293_fu_537_p2 = ((j_0_reg_324 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln45_1_fu_1872_p2 = ((tmp_93_reg_2237 != 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln45_2_fu_1884_p2 = ((tmp_96_reg_2247 != 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln45_3_fu_1896_p2 = ((tmp_99_reg_2257 != 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln45_4_fu_1908_p2 = ((tmp_102_reg_2267 != 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln45_5_fu_1920_p2 = ((tmp_105_reg_2277 != 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln45_fu_1860_p2 = ((tmp_90_reg_2227 != 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln851_10_fu_1798_p2 = ((p_Result_97_5_fu_1788_p4 == 6'd0) ? 1'b1 : 1'b0);

assign icmp_ln851_6_fu_1294_p2 = ((p_Result_97_1_fu_1284_p4 == 6'd0) ? 1'b1 : 1'b0);

assign icmp_ln851_7_fu_1420_p2 = ((p_Result_97_2_fu_1410_p4 == 6'd0) ? 1'b1 : 1'b0);

assign icmp_ln851_8_fu_1546_p2 = ((p_Result_97_3_fu_1536_p4 == 6'd0) ? 1'b1 : 1'b0);

assign icmp_ln851_9_fu_1672_p2 = ((p_Result_97_4_fu_1662_p4 == 6'd0) ? 1'b1 : 1'b0);

assign icmp_ln851_fu_1168_p2 = ((p_Result_9_fu_1158_p4 == 6'd0) ? 1'b1 : 1'b0);

assign icmp_ln883_fu_735_p2 = ((t_V_17_0_reg_359 != 16'd0) ? 1'b1 : 1'b0);

assign icmp_ln887_11_fu_838_p2 = (($signed(zext_ln887_fu_834_p1) < $signed(dst_rows_read)) ? 1'b1 : 1'b0);

assign icmp_ln887_12_fu_853_p2 = ((zext_ln887_1_fu_849_p1 < trunc_ln8_reg_2044) ? 1'b1 : 1'b0);

assign icmp_ln887_fu_640_p2 = ((add_ln1353_fu_634_p2 < zext_ln887_2_reg_2090) ? 1'b1 : 1'b0);

assign icmp_ln895_fu_755_p2 = (($signed(sub_ln1354_fu_749_p2) > $signed(sext_ln895_reg_2141)) ? 1'b1 : 1'b0);

assign j_fu_543_p2 = (j_0_reg_324 + 2'd1);

assign maxValue_0_V_2_fu_798_p2 = ($signed(tmp_75_fu_786_p5) + $signed(24'd16777152));

assign maxmin_diff_0_V_fu_589_p2 = (p_Val2_s_fu_188 - p_Val2_6_fu_192);

assign maxmin_diff_1_V_fu_595_p2 = (p_Val2_7_fu_196 - p_Val2_8_fu_200);

assign maxmin_diff_2_V_fu_601_p2 = (p_Val2_9_fu_204 - p_Val2_10_fu_208);

assign minValue_0_V_2_fu_689_p2 = (tmp_73_fu_677_p5 + 24'd64);

assign mul_ln1148_1_fu_513_p0 = mul_ln1148_1_fu_513_p00;

assign mul_ln1148_1_fu_513_p00 = total_reg_2049;

assign mul_ln1148_1_fu_513_p2 = (mul_ln1148_1_fu_513_p0 * $signed('h18DA));

assign mul_ln1148_2_fu_522_p0 = mul_ln1148_2_fu_522_p00;

assign mul_ln1148_2_fu_522_p00 = mul_ln1148_reg_2056;

assign mul_ln1148_2_fu_522_p2 = (mul_ln1148_2_fu_522_p0 * $signed(76'h51EB851EB9));

assign mul_ln1148_3_fu_531_p0 = mul_ln1148_3_fu_531_p00;

assign mul_ln1148_3_fu_531_p00 = mul_ln1148_1_reg_2061;

assign mul_ln1148_3_fu_531_p2 = (mul_ln1148_3_fu_531_p0 * $signed(90'h28F5C28F5C29));

assign mul_ln1148_fu_507_p0 = mul_ln1148_fu_507_p00;

assign mul_ln1148_fu_507_p00 = total_reg_2049;

assign mul_ln1148_fu_507_p2 = (mul_ln1148_fu_507_p0 * $signed('h26));

assign p_Result_97_1_fu_1284_p4 = {{sub_ln1118_1_fu_1256_p2[11:6]}};

assign p_Result_97_2_fu_1410_p4 = {{sub_ln1118_2_fu_1382_p2[11:6]}};

assign p_Result_97_3_fu_1536_p4 = {{sub_ln1118_3_fu_1508_p2[11:6]}};

assign p_Result_97_4_fu_1662_p4 = {{sub_ln1118_4_fu_1634_p2[11:6]}};

assign p_Result_97_5_fu_1788_p4 = {{sub_ln1118_5_fu_1760_p2[11:6]}};

assign p_Result_9_fu_1158_p4 = {{sub_ln1118_fu_1130_p2[11:6]}};

assign row_V_fu_843_p2 = (t_V_reg_380 + 13'd1);

assign select_ln399_1_fu_1334_p3 = ((tmp_92_fu_1326_p3[0:0] === 1'b1) ? 18'd0 : trunc_ln647_7_fu_1322_p1);

assign select_ln399_2_fu_1460_p3 = ((tmp_95_fu_1452_p3[0:0] === 1'b1) ? 18'd0 : trunc_ln647_8_fu_1448_p1);

assign select_ln399_3_fu_1586_p3 = ((tmp_98_fu_1578_p3[0:0] === 1'b1) ? 18'd0 : trunc_ln647_9_fu_1574_p1);

assign select_ln399_4_fu_1712_p3 = ((tmp_101_fu_1704_p3[0:0] === 1'b1) ? 18'd0 : trunc_ln647_10_fu_1700_p1);

assign select_ln399_5_fu_1838_p3 = ((tmp_104_fu_1830_p3[0:0] === 1'b1) ? 18'd0 : trunc_ln647_11_fu_1826_p1);

assign select_ln399_fu_1208_p3 = ((tmp_89_fu_1200_p3[0:0] === 1'b1) ? 18'd0 : trunc_ln647_fu_1196_p1);

assign select_ln45_1_fu_1877_p3 = ((icmp_ln45_1_fu_1872_p2[0:0] === 1'b1) ? 10'd1023 : trunc_ln45_1_reg_2242);

assign select_ln45_2_fu_1889_p3 = ((icmp_ln45_2_fu_1884_p2[0:0] === 1'b1) ? 10'd1023 : trunc_ln45_2_reg_2252);

assign select_ln45_3_fu_1901_p3 = ((icmp_ln45_3_fu_1896_p2[0:0] === 1'b1) ? 10'd1023 : trunc_ln45_3_reg_2262);

assign select_ln45_4_fu_1913_p3 = ((icmp_ln45_4_fu_1908_p2[0:0] === 1'b1) ? 10'd1023 : trunc_ln45_4_reg_2272);

assign select_ln45_5_fu_1925_p3 = ((icmp_ln45_5_fu_1920_p2[0:0] === 1'b1) ? 10'd1023 : trunc_ln45_5_reg_2282);

assign select_ln45_fu_1865_p3 = ((icmp_ln45_fu_1860_p2[0:0] === 1'b1) ? 10'd1023 : trunc_ln45_reg_2232);

assign select_ln850_10_fu_1818_p3 = ((tmp_103_fu_1780_p3[0:0] === 1'b1) ? select_ln851_10_fu_1810_p3 : sext_ln835_5_fu_1776_p1);

assign select_ln850_6_fu_1314_p3 = ((tmp_91_fu_1276_p3[0:0] === 1'b1) ? select_ln851_6_fu_1306_p3 : sext_ln835_1_fu_1272_p1);

assign select_ln850_7_fu_1440_p3 = ((tmp_94_fu_1402_p3[0:0] === 1'b1) ? select_ln851_7_fu_1432_p3 : sext_ln835_2_fu_1398_p1);

assign select_ln850_8_fu_1566_p3 = ((tmp_97_fu_1528_p3[0:0] === 1'b1) ? select_ln851_8_fu_1558_p3 : sext_ln835_3_fu_1524_p1);

assign select_ln850_9_fu_1692_p3 = ((tmp_100_fu_1654_p3[0:0] === 1'b1) ? select_ln851_9_fu_1684_p3 : sext_ln835_4_fu_1650_p1);

assign select_ln850_fu_1188_p3 = ((tmp_88_fu_1150_p3[0:0] === 1'b1) ? select_ln851_fu_1180_p3 : sext_ln835_fu_1146_p1);

assign select_ln851_10_fu_1810_p3 = ((icmp_ln851_10_fu_1798_p2[0:0] === 1'b1) ? sext_ln835_5_fu_1776_p1 : add_ln700_22_fu_1804_p2);

assign select_ln851_6_fu_1306_p3 = ((icmp_ln851_6_fu_1294_p2[0:0] === 1'b1) ? sext_ln835_1_fu_1272_p1 : add_ln700_18_fu_1300_p2);

assign select_ln851_7_fu_1432_p3 = ((icmp_ln851_7_fu_1420_p2[0:0] === 1'b1) ? sext_ln835_2_fu_1398_p1 : add_ln700_19_fu_1426_p2);

assign select_ln851_8_fu_1558_p3 = ((icmp_ln851_8_fu_1546_p2[0:0] === 1'b1) ? sext_ln835_3_fu_1524_p1 : add_ln700_20_fu_1552_p2);

assign select_ln851_9_fu_1684_p3 = ((icmp_ln851_9_fu_1672_p2[0:0] === 1'b1) ? sext_ln835_4_fu_1650_p1 : add_ln700_21_fu_1678_p2);

assign select_ln851_fu_1180_p3 = ((icmp_ln851_fu_1168_p2[0:0] === 1'b1) ? sext_ln835_fu_1146_p1 : add_ln700_17_fu_1174_p2);

assign sext_ln1118_10_fu_1746_p1 = $signed(shl_ln1118_s_fu_1738_p3);

assign sext_ln1118_11_fu_1756_p1 = $signed(shl_ln1118_9_fu_1750_p2);

assign sext_ln1118_1_fu_1126_p1 = $signed(shl_ln1118_fu_1120_p2);

assign sext_ln1118_2_fu_1242_p1 = $signed(shl_ln1118_2_fu_1234_p3);

assign sext_ln1118_3_fu_1252_p1 = $signed(shl_ln1118_1_fu_1246_p2);

assign sext_ln1118_4_fu_1368_p1 = $signed(shl_ln1118_4_fu_1360_p3);

assign sext_ln1118_5_fu_1378_p1 = $signed(shl_ln1118_3_fu_1372_p2);

assign sext_ln1118_6_fu_1494_p1 = $signed(shl_ln1118_6_fu_1486_p3);

assign sext_ln1118_7_fu_1504_p1 = $signed(shl_ln1118_5_fu_1498_p2);

assign sext_ln1118_8_fu_1620_p1 = $signed(shl_ln1118_8_fu_1612_p3);

assign sext_ln1118_9_fu_1630_p1 = $signed(shl_ln1118_7_fu_1624_p2);

assign sext_ln1118_fu_1116_p1 = $signed(shl_ln3_fu_1108_p3);

assign sext_ln1148_1_fu_611_p1 = $signed(maxmin_diff_1_V_fu_595_p2);

assign sext_ln1148_2_fu_615_p1 = $signed(maxmin_diff_2_V_fu_601_p2);

assign sext_ln1148_fu_607_p1 = $signed(maxmin_diff_0_V_fu_589_p2);

assign sext_ln835_1_fu_1272_p1 = $signed(tmp_22_fu_1262_p4);

assign sext_ln835_2_fu_1398_p1 = $signed(tmp_23_fu_1388_p4);

assign sext_ln835_3_fu_1524_p1 = $signed(tmp_24_fu_1514_p4);

assign sext_ln835_4_fu_1650_p1 = $signed(tmp_25_fu_1640_p4);

assign sext_ln835_5_fu_1776_p1 = $signed(tmp_26_fu_1766_p4);

assign sext_ln835_fu_1146_p1 = $signed(tmp_21_fu_1136_p4);

assign sext_ln895_fu_725_p1 = $signed(trunc_ln555_2_reg_2085);

assign shl_ln1118_1_fu_1246_p2 = grp_fu_935_p2 << 30'd6;

assign shl_ln1118_2_fu_1234_p3 = {{trunc_ln1118_1_fu_1230_p1}, {16'd0}};

assign shl_ln1118_3_fu_1372_p2 = grp_fu_976_p2 << 30'd6;

assign shl_ln1118_4_fu_1360_p3 = {{trunc_ln1118_2_fu_1356_p1}, {16'd0}};

assign shl_ln1118_5_fu_1498_p2 = grp_fu_1017_p2 << 30'd6;

assign shl_ln1118_6_fu_1486_p3 = {{trunc_ln1118_3_fu_1482_p1}, {16'd0}};

assign shl_ln1118_7_fu_1624_p2 = grp_fu_1058_p2 << 30'd6;

assign shl_ln1118_8_fu_1612_p3 = {{trunc_ln1118_4_fu_1608_p1}, {16'd0}};

assign shl_ln1118_9_fu_1750_p2 = grp_fu_1099_p2 << 30'd6;

assign shl_ln1118_fu_1120_p2 = grp_fu_894_p2 << 30'd6;

assign shl_ln1118_s_fu_1738_p3 = {{trunc_ln1118_5_fu_1734_p1}, {16'd0}};

assign shl_ln3_fu_1108_p3 = {{trunc_ln1118_fu_1104_p1}, {16'd0}};

assign shl_ln703_1_fu_909_p3 = {{tmp_39_fu_899_p4}, {6'd0}};

assign shl_ln703_2_fu_950_p3 = {{tmp_42_fu_940_p4}, {6'd0}};

assign shl_ln703_3_fu_991_p3 = {{tmp_45_fu_981_p4}, {6'd0}};

assign shl_ln703_4_fu_1032_p3 = {{tmp_48_fu_1022_p4}, {6'd0}};

assign shl_ln703_5_fu_1073_p3 = {{tmp_51_fu_1063_p4}, {6'd0}};

assign shl_ln_fu_868_p3 = {{trunc_ln703_fu_864_p1}, {6'd0}};

assign sub_ln1118_1_fu_1256_p2 = ($signed(sext_ln1118_2_fu_1242_p1) - $signed(sext_ln1118_3_fu_1252_p1));

assign sub_ln1118_2_fu_1382_p2 = ($signed(sext_ln1118_4_fu_1368_p1) - $signed(sext_ln1118_5_fu_1378_p1));

assign sub_ln1118_3_fu_1508_p2 = ($signed(sext_ln1118_6_fu_1494_p1) - $signed(sext_ln1118_7_fu_1504_p1));

assign sub_ln1118_4_fu_1634_p2 = ($signed(sext_ln1118_8_fu_1620_p1) - $signed(sext_ln1118_9_fu_1630_p1));

assign sub_ln1118_5_fu_1760_p2 = ($signed(sext_ln1118_10_fu_1746_p1) - $signed(sext_ln1118_11_fu_1756_p1));

assign sub_ln1118_fu_1130_p2 = ($signed(sext_ln1118_fu_1116_p1) - $signed(sext_ln1118_1_fu_1126_p1));

assign sub_ln1354_fu_749_p2 = (zext_ln215_3_fu_741_p1 - zext_ln215_4_fu_745_p1);

assign sub_ln701_fu_771_p2 = (p_01348_1_0_reg_371 - grp_fu_402_p5);

assign sub_ln703_1_fu_921_p2 = (zext_ln703_1_fu_917_p1 - minValue_1_V_fu_216);

assign sub_ln703_2_fu_962_p2 = (zext_ln703_2_fu_958_p1 - minValue_2_V_fu_220);

assign sub_ln703_3_fu_1003_p2 = (zext_ln703_3_fu_999_p1 - minValue_0_V_fu_212);

assign sub_ln703_4_fu_1044_p2 = (zext_ln703_4_fu_1040_p1 - minValue_1_V_fu_216);

assign sub_ln703_5_fu_1085_p2 = (zext_ln703_5_fu_1081_p1 - minValue_2_V_fu_220);

assign sub_ln703_fu_880_p2 = (zext_ln703_fu_876_p1 - minValue_0_V_fu_212);

assign tmp_100_fu_1654_p3 = sub_ln1118_4_fu_1634_p2[32'd29];

assign tmp_101_fu_1704_p3 = select_ln850_9_fu_1692_p3[32'd18];

assign tmp_103_fu_1780_p3 = sub_ln1118_5_fu_1760_p2[32'd29];

assign tmp_104_fu_1830_p3 = select_ln850_10_fu_1818_p3[32'd18];

assign tmp_21_fu_1136_p4 = {{sub_ln1118_fu_1130_p2[29:12]}};

assign tmp_22_fu_1262_p4 = {{sub_ln1118_1_fu_1256_p2[29:12]}};

assign tmp_23_fu_1388_p4 = {{sub_ln1118_2_fu_1382_p2[29:12]}};

assign tmp_24_fu_1514_p4 = {{sub_ln1118_3_fu_1508_p2[29:12]}};

assign tmp_25_fu_1640_p4 = {{sub_ln1118_4_fu_1634_p2[29:12]}};

assign tmp_26_fu_1766_p4 = {{sub_ln1118_5_fu_1760_p2[29:12]}};

assign tmp_39_fu_899_p4 = {{src_data_V_V_dout[19:10]}};

assign tmp_42_fu_940_p4 = {{src_data_V_V_dout[29:20]}};

assign tmp_45_fu_981_p4 = {{src_data_V_V_dout[39:30]}};

assign tmp_48_fu_1022_p4 = {{src_data_V_V_dout[49:40]}};

assign tmp_51_fu_1063_p4 = {{src_data_V_V_dout[59:50]}};

assign tmp_86_fu_549_p4 = {{mul_ln1148_2_reg_2066[75:51]}};

assign tmp_87_fu_645_p3 = t_V_16_0_reg_336[32'd10];

assign tmp_88_fu_1150_p3 = sub_ln1118_fu_1130_p2[32'd29];

assign tmp_89_fu_1200_p3 = select_ln850_fu_1188_p3[32'd18];

assign tmp_91_fu_1276_p3 = sub_ln1118_1_fu_1256_p2[32'd29];

assign tmp_92_fu_1326_p3 = select_ln850_6_fu_1314_p3[32'd18];

assign tmp_94_fu_1402_p3 = sub_ln1118_2_fu_1382_p2[32'd29];

assign tmp_95_fu_1452_p3 = select_ln850_7_fu_1440_p3[32'd18];

assign tmp_97_fu_1528_p3 = sub_ln1118_3_fu_1508_p2[32'd29];

assign tmp_98_fu_1578_p3 = select_ln850_8_fu_1566_p3[32'd18];

assign total_fu_1949_p0 = total_fu_1949_p00;

assign total_fu_1949_p00 = dst_rows_read;

assign total_fu_1949_p1 = total_fu_1949_p10;

assign total_fu_1949_p10 = dst_cols_read;

assign trunc_ln1118_1_fu_1230_p1 = grp_fu_935_p2[23:0];

assign trunc_ln1118_2_fu_1356_p1 = grp_fu_976_p2[23:0];

assign trunc_ln1118_3_fu_1482_p1 = grp_fu_1017_p2[23:0];

assign trunc_ln1118_4_fu_1608_p1 = grp_fu_1058_p2[23:0];

assign trunc_ln1118_5_fu_1734_p1 = grp_fu_1099_p2[23:0];

assign trunc_ln1118_fu_1104_p1 = grp_fu_894_p2[23:0];

assign trunc_ln45_1_fu_1352_p1 = select_ln399_1_fu_1334_p3[9:0];

assign trunc_ln45_2_fu_1478_p1 = select_ln399_2_fu_1460_p3[9:0];

assign trunc_ln45_3_fu_1604_p1 = select_ln399_3_fu_1586_p3[9:0];

assign trunc_ln45_4_fu_1730_p1 = select_ln399_4_fu_1712_p3[9:0];

assign trunc_ln45_5_fu_1856_p1 = select_ln399_5_fu_1838_p3[9:0];

assign trunc_ln45_fu_1226_p1 = select_ln399_fu_1208_p3[9:0];

assign trunc_ln647_10_fu_1700_p1 = select_ln850_9_fu_1692_p3[17:0];

assign trunc_ln647_11_fu_1826_p1 = select_ln850_10_fu_1818_p3[17:0];

assign trunc_ln647_7_fu_1322_p1 = select_ln850_6_fu_1314_p3[17:0];

assign trunc_ln647_8_fu_1448_p1 = select_ln850_7_fu_1440_p3[17:0];

assign trunc_ln647_9_fu_1574_p1 = select_ln850_8_fu_1566_p3[17:0];

assign trunc_ln647_fu_1196_p1 = select_ln850_fu_1188_p3[17:0];

assign trunc_ln703_fu_864_p1 = src_data_V_V_dout[9:0];

assign xor_ln887_fu_653_p2 = (tmp_87_fu_645_p3 ^ 1'd1);

assign zext_ln215_2_fu_630_p1 = grp_fu_402_p5;

assign zext_ln215_3_fu_741_p1 = p_01348_1_0_reg_371;

assign zext_ln215_4_fu_745_p1 = grp_fu_402_p5;

assign zext_ln215_fu_626_p1 = p_01629_1_0_reg_348;

assign zext_ln544_2_fu_728_p1 = t_V_17_0_reg_359;

assign zext_ln544_fu_619_p1 = t_V_16_0_reg_336;

assign zext_ln703_1_fu_917_p1 = shl_ln703_1_fu_909_p3;

assign zext_ln703_2_fu_958_p1 = shl_ln703_2_fu_950_p3;

assign zext_ln703_3_fu_999_p1 = shl_ln703_3_fu_991_p3;

assign zext_ln703_4_fu_1040_p1 = shl_ln703_4_fu_1032_p3;

assign zext_ln703_5_fu_1081_p1 = shl_ln703_5_fu_1073_p3;

assign zext_ln703_fu_876_p1 = shl_ln_fu_868_p3;

assign zext_ln887_1_fu_849_p1 = t_V_2_reg_391;

assign zext_ln887_2_fu_567_p1 = tmp_86_fu_549_p4;

assign zext_ln887_fu_834_p1 = t_V_reg_380;

always @ (posedge ap_clk) begin
    mul_ln1148_reg_2056[0] <= 1'b0;
    mul_ln1148_1_reg_2061[0] <= 1'b0;
    mul_ln1148_2_reg_2066[0] <= 1'b0;
    mul_ln1148_3_reg_2071[0] <= 1'b0;
    zext_ln887_2_reg_2090[32:25] <= 8'b00000000;
end

endmodule //AWBNormalizationkern
