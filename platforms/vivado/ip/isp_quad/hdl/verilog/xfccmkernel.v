// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.2
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module xfccmkernel (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        p_src_mat_data_V_V_dout,
        p_src_mat_data_V_V_empty_n,
        p_src_mat_data_V_V_read,
        p_dst_mat_data_V_V_din,
        p_dst_mat_data_V_V_full_n,
        p_dst_mat_data_V_V_write,
        height,
        width
);

parameter    ap_ST_fsm_state1 = 6'd1;
parameter    ap_ST_fsm_state2 = 6'd2;
parameter    ap_ST_fsm_state3 = 6'd4;
parameter    ap_ST_fsm_state4 = 6'd8;
parameter    ap_ST_fsm_pp0_stage0 = 6'd16;
parameter    ap_ST_fsm_state9 = 6'd32;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [59:0] p_src_mat_data_V_V_dout;
input   p_src_mat_data_V_V_empty_n;
output   p_src_mat_data_V_V_read;
output  [59:0] p_dst_mat_data_V_V_din;
input   p_dst_mat_data_V_V_full_n;
output   p_dst_mat_data_V_V_write;
input  [15:0] height;
input  [14:0] width;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg p_src_mat_data_V_V_read;
reg p_dst_mat_data_V_V_write;

(* fsm_encoding = "none" *) reg   [5:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    p_src_mat_data_V_V_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln245_reg_1597;
reg    p_dst_mat_data_V_V_blk_n;
reg    ap_enable_reg_pp0_iter3;
reg   [0:0] icmp_ln245_reg_1597_pp0_iter2_reg;
reg   [14:0] t_V_1_reg_220;
wire   [1:0] i_fu_237_p2;
reg   [1:0] i_reg_1575;
wire    ap_CS_fsm_state2;
wire   [1:0] j_fu_249_p2;
wire    ap_CS_fsm_state3;
wire   [0:0] icmp_ln887_fu_259_p2;
wire    ap_CS_fsm_state4;
wire   [12:0] i_V_fu_264_p2;
reg   [12:0] i_V_reg_1592;
wire   [0:0] icmp_ln245_fu_270_p2;
wire    ap_block_state5_pp0_stage0_iter0;
reg    ap_block_state6_pp0_stage0_iter1;
wire    ap_block_state7_pp0_stage0_iter2;
reg    ap_block_state8_pp0_stage0_iter3;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln245_reg_1597_pp0_iter1_reg;
wire   [14:0] add_ln1597_fu_275_p2;
reg    ap_enable_reg_pp0_iter0;
reg   [15:0] trunc_ln_reg_1606;
reg   [14:0] tmp_3_reg_1611;
reg   [11:0] tmp_5_reg_1616;
reg   [11:0] tmp_7_reg_1621;
reg   [15:0] trunc_ln708_4_reg_1626;
reg   [8:0] tmp_12_reg_1631;
reg   [9:0] tmp_13_reg_1636;
reg   [11:0] tmp_14_reg_1641;
reg   [15:0] trunc_ln708_8_reg_1646;
reg   [15:0] trunc_ln708_9_reg_1651;
reg   [14:0] tmp_24_reg_1656;
reg   [11:0] tmp_25_reg_1661;
reg   [11:0] tmp_26_reg_1666;
reg   [15:0] trunc_ln708_s_reg_1671;
reg   [8:0] tmp_29_reg_1676;
reg   [9:0] tmp_30_reg_1681;
reg   [11:0] tmp_31_reg_1686;
reg   [15:0] trunc_ln708_1_reg_1691;
wire   [13:0] trunc_ln850_fu_722_p1;
reg   [13:0] trunc_ln850_reg_1696;
wire   [13:0] trunc_ln850_1_fu_813_p1;
reg   [13:0] trunc_ln850_1_reg_1701;
wire   [13:0] trunc_ln850_2_fu_904_p1;
reg   [13:0] trunc_ln850_2_reg_1706;
wire   [0:0] icmp_ln106_fu_918_p2;
reg   [0:0] icmp_ln106_reg_1711;
wire   [0:0] icmp_ln106_1_fu_934_p2;
reg   [0:0] icmp_ln106_1_reg_1716;
wire   [0:0] icmp_ln106_2_fu_950_p2;
reg   [0:0] icmp_ln106_2_reg_1721;
wire   [13:0] trunc_ln850_3_fu_1043_p1;
reg   [13:0] trunc_ln850_3_reg_1726;
wire   [13:0] trunc_ln850_4_fu_1134_p1;
reg   [13:0] trunc_ln850_4_reg_1731;
wire   [13:0] trunc_ln850_5_fu_1225_p1;
reg   [13:0] trunc_ln850_5_reg_1736;
wire   [0:0] icmp_ln106_3_fu_1239_p2;
reg   [0:0] icmp_ln106_3_reg_1741;
wire   [0:0] icmp_ln106_4_fu_1255_p2;
reg   [0:0] icmp_ln106_4_reg_1746;
wire   [0:0] icmp_ln106_5_fu_1271_p2;
reg   [0:0] icmp_ln106_5_reg_1751;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state5;
reg    ap_enable_reg_pp0_iter2;
reg   [1:0] i_0_reg_187;
wire   [0:0] icmp_ln137_fu_243_p2;
reg   [1:0] j_0_reg_198;
wire   [0:0] icmp_ln136_fu_231_p2;
reg   [12:0] t_V_reg_209;
wire    ap_CS_fsm_state9;
reg    ap_block_pp0_stage0_01001;
wire   [15:0] zext_ln887_fu_255_p1;
wire   [9:0] trunc_ln647_fu_281_p1;
wire   [25:0] mul_ln1118_fu_1450_p2;
wire   [9:0] p_Result_4_fu_285_p4;
wire  signed [24:0] mul_ln1118_1_fu_1457_p2;
wire   [9:0] p_Result_7_fu_295_p4;
wire  signed [21:0] mul_ln1118_2_fu_1464_p2;
wire  signed [21:0] mul_ln1118_3_fu_1471_p2;
wire   [25:0] mul_ln1118_4_fu_1478_p2;
wire   [16:0] tmp_9_fu_382_p3;
wire   [18:0] zext_ln1118_5_fu_390_p1;
wire   [12:0] tmp_10_fu_400_p3;
wire   [18:0] sub_ln1118_fu_394_p2;
wire   [18:0] zext_ln1118_6_fu_408_p1;
wire   [18:0] sub_ln1118_1_fu_412_p2;
wire  signed [19:0] mul_ln1118_5_fu_1485_p2;
wire  signed [21:0] mul_ln1118_6_fu_1492_p2;
wire   [25:0] mul_ln1118_7_fu_1499_p2;
wire   [9:0] p_Result_18_1_fu_455_p4;
wire   [25:0] mul_ln1118_8_fu_1506_p2;
wire   [9:0] p_Result_19_1_fu_465_p4;
wire  signed [24:0] mul_ln1118_9_fu_1513_p2;
wire   [9:0] p_Result_20_1_fu_475_p4;
wire  signed [21:0] mul_ln1118_10_fu_1520_p2;
wire  signed [21:0] mul_ln1118_11_fu_1527_p2;
wire   [25:0] mul_ln1118_12_fu_1534_p2;
wire   [16:0] tmp_27_fu_562_p3;
wire   [18:0] zext_ln1118_12_fu_570_p1;
wire   [12:0] tmp_28_fu_580_p3;
wire   [18:0] sub_ln1118_2_fu_574_p2;
wire   [18:0] zext_ln1118_13_fu_588_p1;
wire   [18:0] sub_ln1118_3_fu_592_p2;
wire  signed [19:0] mul_ln1118_13_fu_1541_p2;
wire  signed [21:0] mul_ln1118_14_fu_1548_p2;
wire   [25:0] mul_ln1118_15_fu_1555_p2;
wire  signed [16:0] sext_ln1192_fu_638_p1;
wire  signed [16:0] sext_ln703_fu_635_p1;
wire   [16:0] add_ln1192_fu_641_p2;
wire  signed [17:0] sext_ln1192_1_fu_651_p1;
wire  signed [17:0] sext_ln703_1_fu_647_p1;
wire   [17:0] add_ln1192_1_fu_654_p2;
wire   [13:0] tmp_2_fu_660_p4;
wire   [3:0] trunc_ln851_fu_682_p1;
wire   [13:0] p_Result_2_fu_686_p3;
wire  signed [14:0] sext_ln850_fu_670_p1;
wire   [0:0] icmp_ln851_fu_694_p2;
wire   [14:0] add_ln700_fu_700_p2;
wire   [0:0] tmp_15_fu_674_p3;
wire   [14:0] select_ln851_fu_706_p3;
wire   [14:0] select_ln850_fu_714_p3;
wire  signed [16:0] sext_ln703_2_fu_726_p1;
wire  signed [16:0] sext_ln1192_2_fu_729_p1;
wire   [16:0] add_ln1192_2_fu_732_p2;
wire  signed [17:0] sext_ln1192_3_fu_742_p1;
wire  signed [17:0] sext_ln703_3_fu_738_p1;
wire   [17:0] add_ln1192_3_fu_745_p2;
wire   [13:0] tmp_4_fu_751_p4;
wire   [3:0] trunc_ln851_1_fu_773_p1;
wire   [13:0] p_Result_5_fu_777_p3;
wire  signed [14:0] sext_ln850_1_fu_761_p1;
wire   [0:0] icmp_ln851_1_fu_785_p2;
wire   [14:0] add_ln700_1_fu_791_p2;
wire   [0:0] tmp_16_fu_765_p3;
wire   [14:0] select_ln851_1_fu_797_p3;
wire   [14:0] select_ln850_1_fu_805_p3;
wire  signed [16:0] sext_ln703_4_fu_817_p1;
wire  signed [16:0] sext_ln1192_4_fu_820_p1;
wire   [16:0] add_ln1192_4_fu_823_p2;
wire  signed [17:0] sext_ln1192_5_fu_833_p1;
wire  signed [17:0] sext_ln703_5_fu_829_p1;
wire   [17:0] add_ln1192_5_fu_836_p2;
wire   [13:0] tmp_6_fu_842_p4;
wire   [3:0] trunc_ln851_2_fu_864_p1;
wire   [13:0] p_Result_8_fu_868_p3;
wire  signed [14:0] sext_ln850_2_fu_852_p1;
wire   [0:0] icmp_ln851_2_fu_876_p2;
wire   [14:0] add_ln700_2_fu_882_p2;
wire   [0:0] tmp_17_fu_856_p3;
wire   [14:0] select_ln851_2_fu_888_p3;
wire   [14:0] select_ln850_2_fu_896_p3;
wire   [4:0] tmp_18_fu_908_p4;
wire   [4:0] tmp_20_fu_924_p4;
wire   [4:0] tmp_22_fu_940_p4;
wire  signed [16:0] sext_ln1192_6_fu_959_p1;
wire  signed [16:0] sext_ln703_6_fu_956_p1;
wire   [16:0] add_ln1192_6_fu_962_p2;
wire  signed [17:0] sext_ln1192_7_fu_972_p1;
wire  signed [17:0] sext_ln703_7_fu_968_p1;
wire   [17:0] add_ln1192_7_fu_975_p2;
wire   [13:0] tmp_8_fu_981_p4;
wire   [3:0] trunc_ln851_3_fu_1003_p1;
wire   [13:0] p_Result_2_1_fu_1007_p3;
wire  signed [14:0] sext_ln850_3_fu_991_p1;
wire   [0:0] icmp_ln851_3_fu_1015_p2;
wire   [14:0] add_ln700_3_fu_1021_p2;
wire   [0:0] tmp_32_fu_995_p3;
wire   [14:0] select_ln851_3_fu_1027_p3;
wire   [14:0] select_ln850_3_fu_1035_p3;
wire  signed [16:0] sext_ln703_8_fu_1047_p1;
wire  signed [16:0] sext_ln1192_8_fu_1050_p1;
wire   [16:0] add_ln1192_8_fu_1053_p2;
wire  signed [17:0] sext_ln1192_9_fu_1063_p1;
wire  signed [17:0] sext_ln703_9_fu_1059_p1;
wire   [17:0] add_ln1192_9_fu_1066_p2;
wire   [13:0] tmp_s_fu_1072_p4;
wire   [3:0] trunc_ln851_4_fu_1094_p1;
wire   [13:0] p_Result_5_1_fu_1098_p3;
wire  signed [14:0] sext_ln850_4_fu_1082_p1;
wire   [0:0] icmp_ln851_4_fu_1106_p2;
wire   [14:0] add_ln700_4_fu_1112_p2;
wire   [0:0] tmp_33_fu_1086_p3;
wire   [14:0] select_ln851_4_fu_1118_p3;
wire   [14:0] select_ln850_4_fu_1126_p3;
wire  signed [16:0] sext_ln703_10_fu_1138_p1;
wire  signed [16:0] sext_ln1192_10_fu_1141_p1;
wire   [16:0] add_ln1192_10_fu_1144_p2;
wire  signed [17:0] sext_ln1192_11_fu_1154_p1;
wire  signed [17:0] sext_ln703_11_fu_1150_p1;
wire   [17:0] add_ln1192_11_fu_1157_p2;
wire   [13:0] tmp_11_fu_1163_p4;
wire   [3:0] trunc_ln851_5_fu_1185_p1;
wire   [13:0] p_Result_8_1_fu_1189_p3;
wire  signed [14:0] sext_ln850_5_fu_1173_p1;
wire   [0:0] icmp_ln851_5_fu_1197_p2;
wire   [14:0] add_ln700_5_fu_1203_p2;
wire   [0:0] tmp_34_fu_1177_p3;
wire   [14:0] select_ln851_5_fu_1209_p3;
wire   [14:0] select_ln850_5_fu_1217_p3;
wire   [4:0] tmp_35_fu_1229_p4;
wire   [4:0] tmp_37_fu_1245_p4;
wire   [4:0] tmp_39_fu_1261_p4;
wire   [13:0] select_ln106_fu_1277_p3;
wire   [0:0] tmp_19_fu_1283_p3;
wire   [9:0] trunc_ln301_fu_1291_p1;
wire   [13:0] select_ln106_1_fu_1303_p3;
wire   [0:0] tmp_21_fu_1309_p3;
wire   [9:0] trunc_ln301_1_fu_1317_p1;
wire   [13:0] select_ln106_2_fu_1329_p3;
wire   [0:0] tmp_23_fu_1335_p3;
wire   [9:0] trunc_ln301_2_fu_1343_p1;
wire   [13:0] select_ln106_3_fu_1355_p3;
wire   [0:0] tmp_36_fu_1361_p3;
wire   [9:0] trunc_ln301_3_fu_1369_p1;
wire   [13:0] select_ln106_4_fu_1381_p3;
wire   [0:0] tmp_38_fu_1387_p3;
wire   [9:0] trunc_ln301_4_fu_1395_p1;
wire   [13:0] select_ln106_5_fu_1407_p3;
wire   [0:0] tmp_40_fu_1413_p3;
wire   [9:0] trunc_ln301_5_fu_1421_p1;
wire   [9:0] select_ln301_5_fu_1425_p3;
wire   [9:0] select_ln301_4_fu_1399_p3;
wire   [9:0] select_ln301_3_fu_1373_p3;
wire   [9:0] select_ln301_2_fu_1347_p3;
wire   [9:0] select_ln301_1_fu_1321_p3;
wire   [9:0] select_ln301_fu_1295_p3;
wire   [15:0] mul_ln1118_fu_1450_p0;
wire   [9:0] mul_ln1118_fu_1450_p1;
wire  signed [14:0] mul_ln1118_1_fu_1457_p0;
wire   [9:0] mul_ln1118_1_fu_1457_p1;
wire  signed [11:0] mul_ln1118_2_fu_1464_p0;
wire   [9:0] mul_ln1118_2_fu_1464_p1;
wire  signed [11:0] mul_ln1118_3_fu_1471_p0;
wire   [9:0] mul_ln1118_3_fu_1471_p1;
wire   [15:0] mul_ln1118_4_fu_1478_p0;
wire   [9:0] mul_ln1118_4_fu_1478_p1;
wire  signed [9:0] mul_ln1118_5_fu_1485_p0;
wire   [9:0] mul_ln1118_5_fu_1485_p1;
wire  signed [11:0] mul_ln1118_6_fu_1492_p0;
wire   [9:0] mul_ln1118_6_fu_1492_p1;
wire   [15:0] mul_ln1118_7_fu_1499_p0;
wire   [9:0] mul_ln1118_7_fu_1499_p1;
wire   [15:0] mul_ln1118_8_fu_1506_p0;
wire   [9:0] mul_ln1118_8_fu_1506_p1;
wire  signed [14:0] mul_ln1118_9_fu_1513_p0;
wire   [9:0] mul_ln1118_9_fu_1513_p1;
wire  signed [11:0] mul_ln1118_10_fu_1520_p0;
wire   [9:0] mul_ln1118_10_fu_1520_p1;
wire  signed [11:0] mul_ln1118_11_fu_1527_p0;
wire   [9:0] mul_ln1118_11_fu_1527_p1;
wire   [15:0] mul_ln1118_12_fu_1534_p0;
wire   [9:0] mul_ln1118_12_fu_1534_p1;
wire  signed [9:0] mul_ln1118_13_fu_1541_p0;
wire   [9:0] mul_ln1118_13_fu_1541_p1;
wire  signed [11:0] mul_ln1118_14_fu_1548_p0;
wire   [9:0] mul_ln1118_14_fu_1548_p1;
wire   [15:0] mul_ln1118_15_fu_1555_p0;
wire   [9:0] mul_ln1118_15_fu_1555_p1;
reg   [5:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [21:0] mul_ln1118_10_fu_1520_p10;
wire   [21:0] mul_ln1118_11_fu_1527_p10;
wire   [25:0] mul_ln1118_12_fu_1534_p10;
wire   [19:0] mul_ln1118_13_fu_1541_p10;
wire   [21:0] mul_ln1118_14_fu_1548_p10;
wire   [25:0] mul_ln1118_15_fu_1555_p10;
wire   [24:0] mul_ln1118_1_fu_1457_p10;
wire   [21:0] mul_ln1118_2_fu_1464_p10;
wire   [21:0] mul_ln1118_3_fu_1471_p10;
wire   [25:0] mul_ln1118_4_fu_1478_p10;
wire   [19:0] mul_ln1118_5_fu_1485_p10;
wire   [21:0] mul_ln1118_6_fu_1492_p10;
wire   [25:0] mul_ln1118_7_fu_1499_p10;
wire   [25:0] mul_ln1118_8_fu_1506_p10;
wire   [24:0] mul_ln1118_9_fu_1513_p10;
wire   [25:0] mul_ln1118_fu_1450_p10;

// power-on initialization
initial begin
#0 ap_CS_fsm = 6'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
end

ISPPipeline_accelHfu #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 26 ))
ISPPipeline_accelHfu_U364(
    .din0(mul_ln1118_fu_1450_p0),
    .din1(mul_ln1118_fu_1450_p1),
    .dout(mul_ln1118_fu_1450_p2)
);

ISPPipeline_accelIfE #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 25 ))
ISPPipeline_accelIfE_U365(
    .din0(mul_ln1118_1_fu_1457_p0),
    .din1(mul_ln1118_1_fu_1457_p1),
    .dout(mul_ln1118_1_fu_1457_p2)
);

ISPPipeline_accelJfO #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 22 ))
ISPPipeline_accelJfO_U366(
    .din0(mul_ln1118_2_fu_1464_p0),
    .din1(mul_ln1118_2_fu_1464_p1),
    .dout(mul_ln1118_2_fu_1464_p2)
);

ISPPipeline_accelJfO #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 22 ))
ISPPipeline_accelJfO_U367(
    .din0(mul_ln1118_3_fu_1471_p0),
    .din1(mul_ln1118_3_fu_1471_p1),
    .dout(mul_ln1118_3_fu_1471_p2)
);

ISPPipeline_accelHfu #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 26 ))
ISPPipeline_accelHfu_U368(
    .din0(mul_ln1118_4_fu_1478_p0),
    .din1(mul_ln1118_4_fu_1478_p1),
    .dout(mul_ln1118_4_fu_1478_p2)
);

ISPPipeline_accelKfY #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 20 ))
ISPPipeline_accelKfY_U369(
    .din0(mul_ln1118_5_fu_1485_p0),
    .din1(mul_ln1118_5_fu_1485_p1),
    .dout(mul_ln1118_5_fu_1485_p2)
);

ISPPipeline_accelJfO #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 22 ))
ISPPipeline_accelJfO_U370(
    .din0(mul_ln1118_6_fu_1492_p0),
    .din1(mul_ln1118_6_fu_1492_p1),
    .dout(mul_ln1118_6_fu_1492_p2)
);

ISPPipeline_accelHfu #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 26 ))
ISPPipeline_accelHfu_U371(
    .din0(mul_ln1118_7_fu_1499_p0),
    .din1(mul_ln1118_7_fu_1499_p1),
    .dout(mul_ln1118_7_fu_1499_p2)
);

ISPPipeline_accelHfu #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 26 ))
ISPPipeline_accelHfu_U372(
    .din0(mul_ln1118_8_fu_1506_p0),
    .din1(mul_ln1118_8_fu_1506_p1),
    .dout(mul_ln1118_8_fu_1506_p2)
);

ISPPipeline_accelIfE #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 25 ))
ISPPipeline_accelIfE_U373(
    .din0(mul_ln1118_9_fu_1513_p0),
    .din1(mul_ln1118_9_fu_1513_p1),
    .dout(mul_ln1118_9_fu_1513_p2)
);

ISPPipeline_accelJfO #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 22 ))
ISPPipeline_accelJfO_U374(
    .din0(mul_ln1118_10_fu_1520_p0),
    .din1(mul_ln1118_10_fu_1520_p1),
    .dout(mul_ln1118_10_fu_1520_p2)
);

ISPPipeline_accelJfO #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 22 ))
ISPPipeline_accelJfO_U375(
    .din0(mul_ln1118_11_fu_1527_p0),
    .din1(mul_ln1118_11_fu_1527_p1),
    .dout(mul_ln1118_11_fu_1527_p2)
);

ISPPipeline_accelHfu #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 26 ))
ISPPipeline_accelHfu_U376(
    .din0(mul_ln1118_12_fu_1534_p0),
    .din1(mul_ln1118_12_fu_1534_p1),
    .dout(mul_ln1118_12_fu_1534_p2)
);

ISPPipeline_accelKfY #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 20 ))
ISPPipeline_accelKfY_U377(
    .din0(mul_ln1118_13_fu_1541_p0),
    .din1(mul_ln1118_13_fu_1541_p1),
    .dout(mul_ln1118_13_fu_1541_p2)
);

ISPPipeline_accelJfO #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 22 ))
ISPPipeline_accelJfO_U378(
    .din0(mul_ln1118_14_fu_1548_p0),
    .din1(mul_ln1118_14_fu_1548_p1),
    .dout(mul_ln1118_14_fu_1548_p2)
);

ISPPipeline_accelHfu #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 26 ))
ISPPipeline_accelHfu_U379(
    .din0(mul_ln1118_15_fu_1555_p0),
    .din1(mul_ln1118_15_fu_1555_p1),
    .dout(mul_ln1118_15_fu_1555_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state5) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((icmp_ln887_fu_259_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state5)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state5);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end else if (((icmp_ln887_fu_259_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
            ap_enable_reg_pp0_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln137_fu_243_p2 == 1'd1))) begin
        i_0_reg_187 <= i_reg_1575;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        i_0_reg_187 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln136_fu_231_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        j_0_reg_198 <= 2'd0;
    end else if (((icmp_ln137_fu_243_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        j_0_reg_198 <= j_fu_249_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln245_fu_270_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        t_V_1_reg_220 <= add_ln1597_fu_275_p2;
    end else if (((icmp_ln887_fu_259_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        t_V_1_reg_220 <= 15'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln136_fu_231_p2 == 1'd1))) begin
        t_V_reg_209 <= 13'd0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        t_V_reg_209 <= i_V_reg_1592;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        i_V_reg_1592 <= i_V_fu_264_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_reg_1575 <= i_fu_237_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln245_reg_1597_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln106_1_reg_1716 <= icmp_ln106_1_fu_934_p2;
        icmp_ln106_2_reg_1721 <= icmp_ln106_2_fu_950_p2;
        icmp_ln106_3_reg_1741 <= icmp_ln106_3_fu_1239_p2;
        icmp_ln106_4_reg_1746 <= icmp_ln106_4_fu_1255_p2;
        icmp_ln106_5_reg_1751 <= icmp_ln106_5_fu_1271_p2;
        icmp_ln106_reg_1711 <= icmp_ln106_fu_918_p2;
        trunc_ln850_1_reg_1701 <= trunc_ln850_1_fu_813_p1;
        trunc_ln850_2_reg_1706 <= trunc_ln850_2_fu_904_p1;
        trunc_ln850_3_reg_1726 <= trunc_ln850_3_fu_1043_p1;
        trunc_ln850_4_reg_1731 <= trunc_ln850_4_fu_1134_p1;
        trunc_ln850_5_reg_1736 <= trunc_ln850_5_fu_1225_p1;
        trunc_ln850_reg_1696 <= trunc_ln850_fu_722_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln245_reg_1597 <= icmp_ln245_fu_270_p2;
        icmp_ln245_reg_1597_pp0_iter1_reg <= icmp_ln245_reg_1597;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        icmp_ln245_reg_1597_pp0_iter2_reg <= icmp_ln245_reg_1597_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln245_reg_1597 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_12_reg_1631 <= {{sub_ln1118_1_fu_412_p2[18:10]}};
        tmp_13_reg_1636 <= {{mul_ln1118_5_fu_1485_p2[19:10]}};
        tmp_14_reg_1641 <= {{mul_ln1118_6_fu_1492_p2[21:10]}};
        tmp_24_reg_1656 <= {{mul_ln1118_9_fu_1513_p2[24:10]}};
        tmp_25_reg_1661 <= {{mul_ln1118_10_fu_1520_p2[21:10]}};
        tmp_26_reg_1666 <= {{mul_ln1118_11_fu_1527_p2[21:10]}};
        tmp_29_reg_1676 <= {{sub_ln1118_3_fu_592_p2[18:10]}};
        tmp_30_reg_1681 <= {{mul_ln1118_13_fu_1541_p2[19:10]}};
        tmp_31_reg_1686 <= {{mul_ln1118_14_fu_1548_p2[21:10]}};
        tmp_3_reg_1611 <= {{mul_ln1118_1_fu_1457_p2[24:10]}};
        tmp_5_reg_1616 <= {{mul_ln1118_2_fu_1464_p2[21:10]}};
        tmp_7_reg_1621 <= {{mul_ln1118_3_fu_1471_p2[21:10]}};
        trunc_ln708_1_reg_1691 <= {{mul_ln1118_15_fu_1555_p2[25:10]}};
        trunc_ln708_4_reg_1626 <= {{mul_ln1118_4_fu_1478_p2[25:10]}};
        trunc_ln708_8_reg_1646 <= {{mul_ln1118_7_fu_1499_p2[25:10]}};
        trunc_ln708_9_reg_1651 <= {{mul_ln1118_8_fu_1506_p2[25:10]}};
        trunc_ln708_s_reg_1671 <= {{mul_ln1118_12_fu_1534_p2[25:10]}};
        trunc_ln_reg_1606 <= {{mul_ln1118_fu_1450_p2[25:10]}};
    end
end

always @ (*) begin
    if ((icmp_ln245_fu_270_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state5 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state5 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln887_fu_259_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4)) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln887_fu_259_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln245_reg_1597_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        p_dst_mat_data_V_V_blk_n = p_dst_mat_data_V_V_full_n;
    end else begin
        p_dst_mat_data_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln245_reg_1597_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_dst_mat_data_V_V_write = 1'b1;
    end else begin
        p_dst_mat_data_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln245_reg_1597 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_src_mat_data_V_V_blk_n = p_src_mat_data_V_V_empty_n;
    end else begin
        p_src_mat_data_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln245_reg_1597 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_src_mat_data_V_V_read = 1'b1;
    end else begin
        p_src_mat_data_V_V_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln136_fu_231_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln137_fu_243_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((icmp_ln887_fu_259_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((icmp_ln245_fu_270_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone)) & ~((ap_enable_reg_pp0_iter3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone)) | ((icmp_ln245_fu_270_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln1192_10_fu_1144_p2 = ($signed(sext_ln703_10_fu_1138_p1) + $signed(sext_ln1192_10_fu_1141_p1));

assign add_ln1192_11_fu_1157_p2 = ($signed(sext_ln1192_11_fu_1154_p1) + $signed(sext_ln703_11_fu_1150_p1));

assign add_ln1192_1_fu_654_p2 = ($signed(sext_ln1192_1_fu_651_p1) + $signed(sext_ln703_1_fu_647_p1));

assign add_ln1192_2_fu_732_p2 = ($signed(sext_ln703_2_fu_726_p1) + $signed(sext_ln1192_2_fu_729_p1));

assign add_ln1192_3_fu_745_p2 = ($signed(sext_ln1192_3_fu_742_p1) + $signed(sext_ln703_3_fu_738_p1));

assign add_ln1192_4_fu_823_p2 = ($signed(sext_ln703_4_fu_817_p1) + $signed(sext_ln1192_4_fu_820_p1));

assign add_ln1192_5_fu_836_p2 = ($signed(sext_ln1192_5_fu_833_p1) + $signed(sext_ln703_5_fu_829_p1));

assign add_ln1192_6_fu_962_p2 = ($signed(sext_ln1192_6_fu_959_p1) + $signed(sext_ln703_6_fu_956_p1));

assign add_ln1192_7_fu_975_p2 = ($signed(sext_ln1192_7_fu_972_p1) + $signed(sext_ln703_7_fu_968_p1));

assign add_ln1192_8_fu_1053_p2 = ($signed(sext_ln703_8_fu_1047_p1) + $signed(sext_ln1192_8_fu_1050_p1));

assign add_ln1192_9_fu_1066_p2 = ($signed(sext_ln1192_9_fu_1063_p1) + $signed(sext_ln703_9_fu_1059_p1));

assign add_ln1192_fu_641_p2 = ($signed(sext_ln1192_fu_638_p1) + $signed(sext_ln703_fu_635_p1));

assign add_ln1597_fu_275_p2 = (t_V_1_reg_220 + 15'd1);

assign add_ln700_1_fu_791_p2 = ($signed(15'd1) + $signed(sext_ln850_1_fu_761_p1));

assign add_ln700_2_fu_882_p2 = ($signed(15'd1) + $signed(sext_ln850_2_fu_852_p1));

assign add_ln700_3_fu_1021_p2 = ($signed(15'd1) + $signed(sext_ln850_3_fu_991_p1));

assign add_ln700_4_fu_1112_p2 = ($signed(15'd1) + $signed(sext_ln850_4_fu_1082_p1));

assign add_ln700_5_fu_1203_p2 = ($signed(15'd1) + $signed(sext_ln850_5_fu_1173_p1));

assign add_ln700_fu_700_p2 = ($signed(15'd1) + $signed(sext_ln850_fu_670_p1));

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd5];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((icmp_ln245_reg_1597_pp0_iter2_reg == 1'd0) & (p_dst_mat_data_V_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((icmp_ln245_reg_1597 == 1'd0) & (p_src_mat_data_V_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((icmp_ln245_reg_1597_pp0_iter2_reg == 1'd0) & (p_dst_mat_data_V_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((icmp_ln245_reg_1597 == 1'd0) & (p_src_mat_data_V_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((icmp_ln245_reg_1597_pp0_iter2_reg == 1'd0) & (p_dst_mat_data_V_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((icmp_ln245_reg_1597 == 1'd0) & (p_src_mat_data_V_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

assign ap_block_state5_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state6_pp0_stage0_iter1 = ((icmp_ln245_reg_1597 == 1'd0) & (p_src_mat_data_V_V_empty_n == 1'b0));
end

assign ap_block_state7_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state8_pp0_stage0_iter3 = ((icmp_ln245_reg_1597_pp0_iter2_reg == 1'd0) & (p_dst_mat_data_V_V_full_n == 1'b0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign i_V_fu_264_p2 = (t_V_reg_209 + 13'd1);

assign i_fu_237_p2 = (i_0_reg_187 + 2'd1);

assign icmp_ln106_1_fu_934_p2 = (($signed(tmp_20_fu_924_p4) > $signed(5'd0)) ? 1'b1 : 1'b0);

assign icmp_ln106_2_fu_950_p2 = (($signed(tmp_22_fu_940_p4) > $signed(5'd0)) ? 1'b1 : 1'b0);

assign icmp_ln106_3_fu_1239_p2 = (($signed(tmp_35_fu_1229_p4) > $signed(5'd0)) ? 1'b1 : 1'b0);

assign icmp_ln106_4_fu_1255_p2 = (($signed(tmp_37_fu_1245_p4) > $signed(5'd0)) ? 1'b1 : 1'b0);

assign icmp_ln106_5_fu_1271_p2 = (($signed(tmp_39_fu_1261_p4) > $signed(5'd0)) ? 1'b1 : 1'b0);

assign icmp_ln106_fu_918_p2 = (($signed(tmp_18_fu_908_p4) > $signed(5'd0)) ? 1'b1 : 1'b0);

assign icmp_ln136_fu_231_p2 = ((i_0_reg_187 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln137_fu_243_p2 = ((j_0_reg_198 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln245_fu_270_p2 = ((t_V_1_reg_220 == width) ? 1'b1 : 1'b0);

assign icmp_ln851_1_fu_785_p2 = ((p_Result_5_fu_777_p3 == 14'd0) ? 1'b1 : 1'b0);

assign icmp_ln851_2_fu_876_p2 = ((p_Result_8_fu_868_p3 == 14'd0) ? 1'b1 : 1'b0);

assign icmp_ln851_3_fu_1015_p2 = ((p_Result_2_1_fu_1007_p3 == 14'd0) ? 1'b1 : 1'b0);

assign icmp_ln851_4_fu_1106_p2 = ((p_Result_5_1_fu_1098_p3 == 14'd0) ? 1'b1 : 1'b0);

assign icmp_ln851_5_fu_1197_p2 = ((p_Result_8_1_fu_1189_p3 == 14'd0) ? 1'b1 : 1'b0);

assign icmp_ln851_fu_694_p2 = ((p_Result_2_fu_686_p3 == 14'd0) ? 1'b1 : 1'b0);

assign icmp_ln887_fu_259_p2 = ((zext_ln887_fu_255_p1 < height) ? 1'b1 : 1'b0);

assign j_fu_249_p2 = (j_0_reg_198 + 2'd1);

assign mul_ln1118_10_fu_1520_p0 = 22'd4193111;

assign mul_ln1118_10_fu_1520_p1 = mul_ln1118_10_fu_1520_p10;

assign mul_ln1118_10_fu_1520_p10 = p_Result_20_1_fu_475_p4;

assign mul_ln1118_11_fu_1527_p0 = 22'd4192262;

assign mul_ln1118_11_fu_1527_p1 = mul_ln1118_11_fu_1527_p10;

assign mul_ln1118_11_fu_1527_p10 = p_Result_18_1_fu_455_p4;

assign mul_ln1118_12_fu_1534_p0 = 26'd18561;

assign mul_ln1118_12_fu_1534_p1 = mul_ln1118_12_fu_1534_p10;

assign mul_ln1118_12_fu_1534_p10 = p_Result_19_1_fu_465_p4;

assign mul_ln1118_13_fu_1541_p0 = 20'd1048277;

assign mul_ln1118_13_fu_1541_p1 = mul_ln1118_13_fu_1541_p10;

assign mul_ln1118_13_fu_1541_p10 = p_Result_18_1_fu_455_p4;

assign mul_ln1118_14_fu_1548_p0 = 22'd4192655;

assign mul_ln1118_14_fu_1548_p1 = mul_ln1118_14_fu_1548_p10;

assign mul_ln1118_14_fu_1548_p10 = p_Result_19_1_fu_465_p4;

assign mul_ln1118_15_fu_1555_p0 = 26'd18328;

assign mul_ln1118_15_fu_1555_p1 = mul_ln1118_15_fu_1555_p10;

assign mul_ln1118_15_fu_1555_p10 = p_Result_20_1_fu_475_p4;

assign mul_ln1118_1_fu_1457_p0 = 25'd33544804;

assign mul_ln1118_1_fu_1457_p1 = mul_ln1118_1_fu_1457_p10;

assign mul_ln1118_1_fu_1457_p10 = p_Result_4_fu_285_p4;

assign mul_ln1118_2_fu_1464_p0 = 22'd4193111;

assign mul_ln1118_2_fu_1464_p1 = mul_ln1118_2_fu_1464_p10;

assign mul_ln1118_2_fu_1464_p10 = p_Result_7_fu_295_p4;

assign mul_ln1118_3_fu_1471_p0 = 22'd4192262;

assign mul_ln1118_3_fu_1471_p1 = mul_ln1118_3_fu_1471_p10;

assign mul_ln1118_3_fu_1471_p10 = trunc_ln647_fu_281_p1;

assign mul_ln1118_4_fu_1478_p0 = 26'd18561;

assign mul_ln1118_4_fu_1478_p1 = mul_ln1118_4_fu_1478_p10;

assign mul_ln1118_4_fu_1478_p10 = p_Result_4_fu_285_p4;

assign mul_ln1118_5_fu_1485_p0 = 20'd1048277;

assign mul_ln1118_5_fu_1485_p1 = mul_ln1118_5_fu_1485_p10;

assign mul_ln1118_5_fu_1485_p10 = trunc_ln647_fu_281_p1;

assign mul_ln1118_6_fu_1492_p0 = 22'd4192655;

assign mul_ln1118_6_fu_1492_p1 = mul_ln1118_6_fu_1492_p10;

assign mul_ln1118_6_fu_1492_p10 = p_Result_4_fu_285_p4;

assign mul_ln1118_7_fu_1499_p0 = 26'd18328;

assign mul_ln1118_7_fu_1499_p1 = mul_ln1118_7_fu_1499_p10;

assign mul_ln1118_7_fu_1499_p10 = p_Result_7_fu_295_p4;

assign mul_ln1118_8_fu_1506_p0 = 26'd27205;

assign mul_ln1118_8_fu_1506_p1 = mul_ln1118_8_fu_1506_p10;

assign mul_ln1118_8_fu_1506_p10 = p_Result_18_1_fu_455_p4;

assign mul_ln1118_9_fu_1513_p0 = 25'd33544804;

assign mul_ln1118_9_fu_1513_p1 = mul_ln1118_9_fu_1513_p10;

assign mul_ln1118_9_fu_1513_p10 = p_Result_19_1_fu_465_p4;

assign mul_ln1118_fu_1450_p0 = 26'd27205;

assign mul_ln1118_fu_1450_p1 = mul_ln1118_fu_1450_p10;

assign mul_ln1118_fu_1450_p10 = trunc_ln647_fu_281_p1;

assign p_Result_18_1_fu_455_p4 = {{p_src_mat_data_V_V_dout[39:30]}};

assign p_Result_19_1_fu_465_p4 = {{p_src_mat_data_V_V_dout[49:40]}};

assign p_Result_20_1_fu_475_p4 = {{p_src_mat_data_V_V_dout[59:50]}};

assign p_Result_2_1_fu_1007_p3 = {{trunc_ln851_3_fu_1003_p1}, {10'd0}};

assign p_Result_2_fu_686_p3 = {{trunc_ln851_fu_682_p1}, {10'd0}};

assign p_Result_4_fu_285_p4 = {{p_src_mat_data_V_V_dout[19:10]}};

assign p_Result_5_1_fu_1098_p3 = {{trunc_ln851_4_fu_1094_p1}, {10'd0}};

assign p_Result_5_fu_777_p3 = {{trunc_ln851_1_fu_773_p1}, {10'd0}};

assign p_Result_7_fu_295_p4 = {{p_src_mat_data_V_V_dout[29:20]}};

assign p_Result_8_1_fu_1189_p3 = {{trunc_ln851_5_fu_1185_p1}, {10'd0}};

assign p_Result_8_fu_868_p3 = {{trunc_ln851_2_fu_864_p1}, {10'd0}};

assign p_dst_mat_data_V_V_din = {{{{{{select_ln301_5_fu_1425_p3}, {select_ln301_4_fu_1399_p3}}, {select_ln301_3_fu_1373_p3}}, {select_ln301_2_fu_1347_p3}}, {select_ln301_1_fu_1321_p3}}, {select_ln301_fu_1295_p3}};

assign select_ln106_1_fu_1303_p3 = ((icmp_ln106_1_reg_1716[0:0] === 1'b1) ? 14'd1023 : trunc_ln850_1_reg_1701);

assign select_ln106_2_fu_1329_p3 = ((icmp_ln106_2_reg_1721[0:0] === 1'b1) ? 14'd1023 : trunc_ln850_2_reg_1706);

assign select_ln106_3_fu_1355_p3 = ((icmp_ln106_3_reg_1741[0:0] === 1'b1) ? 14'd1023 : trunc_ln850_3_reg_1726);

assign select_ln106_4_fu_1381_p3 = ((icmp_ln106_4_reg_1746[0:0] === 1'b1) ? 14'd1023 : trunc_ln850_4_reg_1731);

assign select_ln106_5_fu_1407_p3 = ((icmp_ln106_5_reg_1751[0:0] === 1'b1) ? 14'd1023 : trunc_ln850_5_reg_1736);

assign select_ln106_fu_1277_p3 = ((icmp_ln106_reg_1711[0:0] === 1'b1) ? 14'd1023 : trunc_ln850_reg_1696);

assign select_ln301_1_fu_1321_p3 = ((tmp_21_fu_1309_p3[0:0] === 1'b1) ? 10'd0 : trunc_ln301_1_fu_1317_p1);

assign select_ln301_2_fu_1347_p3 = ((tmp_23_fu_1335_p3[0:0] === 1'b1) ? 10'd0 : trunc_ln301_2_fu_1343_p1);

assign select_ln301_3_fu_1373_p3 = ((tmp_36_fu_1361_p3[0:0] === 1'b1) ? 10'd0 : trunc_ln301_3_fu_1369_p1);

assign select_ln301_4_fu_1399_p3 = ((tmp_38_fu_1387_p3[0:0] === 1'b1) ? 10'd0 : trunc_ln301_4_fu_1395_p1);

assign select_ln301_5_fu_1425_p3 = ((tmp_40_fu_1413_p3[0:0] === 1'b1) ? 10'd0 : trunc_ln301_5_fu_1421_p1);

assign select_ln301_fu_1295_p3 = ((tmp_19_fu_1283_p3[0:0] === 1'b1) ? 10'd0 : trunc_ln301_fu_1291_p1);

assign select_ln850_1_fu_805_p3 = ((tmp_16_fu_765_p3[0:0] === 1'b1) ? select_ln851_1_fu_797_p3 : sext_ln850_1_fu_761_p1);

assign select_ln850_2_fu_896_p3 = ((tmp_17_fu_856_p3[0:0] === 1'b1) ? select_ln851_2_fu_888_p3 : sext_ln850_2_fu_852_p1);

assign select_ln850_3_fu_1035_p3 = ((tmp_32_fu_995_p3[0:0] === 1'b1) ? select_ln851_3_fu_1027_p3 : sext_ln850_3_fu_991_p1);

assign select_ln850_4_fu_1126_p3 = ((tmp_33_fu_1086_p3[0:0] === 1'b1) ? select_ln851_4_fu_1118_p3 : sext_ln850_4_fu_1082_p1);

assign select_ln850_5_fu_1217_p3 = ((tmp_34_fu_1177_p3[0:0] === 1'b1) ? select_ln851_5_fu_1209_p3 : sext_ln850_5_fu_1173_p1);

assign select_ln850_fu_714_p3 = ((tmp_15_fu_674_p3[0:0] === 1'b1) ? select_ln851_fu_706_p3 : sext_ln850_fu_670_p1);

assign select_ln851_1_fu_797_p3 = ((icmp_ln851_1_fu_785_p2[0:0] === 1'b1) ? sext_ln850_1_fu_761_p1 : add_ln700_1_fu_791_p2);

assign select_ln851_2_fu_888_p3 = ((icmp_ln851_2_fu_876_p2[0:0] === 1'b1) ? sext_ln850_2_fu_852_p1 : add_ln700_2_fu_882_p2);

assign select_ln851_3_fu_1027_p3 = ((icmp_ln851_3_fu_1015_p2[0:0] === 1'b1) ? sext_ln850_3_fu_991_p1 : add_ln700_3_fu_1021_p2);

assign select_ln851_4_fu_1118_p3 = ((icmp_ln851_4_fu_1106_p2[0:0] === 1'b1) ? sext_ln850_4_fu_1082_p1 : add_ln700_4_fu_1112_p2);

assign select_ln851_5_fu_1209_p3 = ((icmp_ln851_5_fu_1197_p2[0:0] === 1'b1) ? sext_ln850_5_fu_1173_p1 : add_ln700_5_fu_1203_p2);

assign select_ln851_fu_706_p3 = ((icmp_ln851_fu_694_p2[0:0] === 1'b1) ? sext_ln850_fu_670_p1 : add_ln700_fu_700_p2);

assign sext_ln1192_10_fu_1141_p1 = $signed(tmp_31_reg_1686);

assign sext_ln1192_11_fu_1154_p1 = $signed(trunc_ln708_1_reg_1691);

assign sext_ln1192_1_fu_651_p1 = $signed(tmp_5_reg_1616);

assign sext_ln1192_2_fu_729_p1 = $signed(trunc_ln708_4_reg_1626);

assign sext_ln1192_3_fu_742_p1 = $signed(tmp_12_reg_1631);

assign sext_ln1192_4_fu_820_p1 = $signed(tmp_14_reg_1641);

assign sext_ln1192_5_fu_833_p1 = $signed(trunc_ln708_8_reg_1646);

assign sext_ln1192_6_fu_959_p1 = $signed(tmp_24_reg_1656);

assign sext_ln1192_7_fu_972_p1 = $signed(tmp_25_reg_1661);

assign sext_ln1192_8_fu_1050_p1 = $signed(trunc_ln708_s_reg_1671);

assign sext_ln1192_9_fu_1063_p1 = $signed(tmp_29_reg_1676);

assign sext_ln1192_fu_638_p1 = $signed(tmp_3_reg_1611);

assign sext_ln703_10_fu_1138_p1 = $signed(tmp_30_reg_1681);

assign sext_ln703_11_fu_1150_p1 = $signed(add_ln1192_10_fu_1144_p2);

assign sext_ln703_1_fu_647_p1 = $signed(add_ln1192_fu_641_p2);

assign sext_ln703_2_fu_726_p1 = $signed(tmp_7_reg_1621);

assign sext_ln703_3_fu_738_p1 = $signed(add_ln1192_2_fu_732_p2);

assign sext_ln703_4_fu_817_p1 = $signed(tmp_13_reg_1636);

assign sext_ln703_5_fu_829_p1 = $signed(add_ln1192_4_fu_823_p2);

assign sext_ln703_6_fu_956_p1 = $signed(trunc_ln708_9_reg_1651);

assign sext_ln703_7_fu_968_p1 = $signed(add_ln1192_6_fu_962_p2);

assign sext_ln703_8_fu_1047_p1 = $signed(tmp_26_reg_1666);

assign sext_ln703_9_fu_1059_p1 = $signed(add_ln1192_8_fu_1053_p2);

assign sext_ln703_fu_635_p1 = $signed(trunc_ln_reg_1606);

assign sext_ln850_1_fu_761_p1 = $signed(tmp_4_fu_751_p4);

assign sext_ln850_2_fu_852_p1 = $signed(tmp_6_fu_842_p4);

assign sext_ln850_3_fu_991_p1 = $signed(tmp_8_fu_981_p4);

assign sext_ln850_4_fu_1082_p1 = $signed(tmp_s_fu_1072_p4);

assign sext_ln850_5_fu_1173_p1 = $signed(tmp_11_fu_1163_p4);

assign sext_ln850_fu_670_p1 = $signed(tmp_2_fu_660_p4);

assign sub_ln1118_1_fu_412_p2 = (sub_ln1118_fu_394_p2 - zext_ln1118_6_fu_408_p1);

assign sub_ln1118_2_fu_574_p2 = (19'd0 - zext_ln1118_12_fu_570_p1);

assign sub_ln1118_3_fu_592_p2 = (sub_ln1118_2_fu_574_p2 - zext_ln1118_13_fu_588_p1);

assign sub_ln1118_fu_394_p2 = (19'd0 - zext_ln1118_5_fu_390_p1);

assign tmp_10_fu_400_p3 = {{p_Result_7_fu_295_p4}, {3'd0}};

assign tmp_11_fu_1163_p4 = {{add_ln1192_11_fu_1157_p2[17:4]}};

assign tmp_15_fu_674_p3 = add_ln1192_1_fu_654_p2[32'd17];

assign tmp_16_fu_765_p3 = add_ln1192_3_fu_745_p2[32'd17];

assign tmp_17_fu_856_p3 = add_ln1192_5_fu_836_p2[32'd17];

assign tmp_18_fu_908_p4 = {{select_ln850_fu_714_p3[14:10]}};

assign tmp_19_fu_1283_p3 = select_ln106_fu_1277_p3[32'd13];

assign tmp_20_fu_924_p4 = {{select_ln850_1_fu_805_p3[14:10]}};

assign tmp_21_fu_1309_p3 = select_ln106_1_fu_1303_p3[32'd13];

assign tmp_22_fu_940_p4 = {{select_ln850_2_fu_896_p3[14:10]}};

assign tmp_23_fu_1335_p3 = select_ln106_2_fu_1329_p3[32'd13];

assign tmp_27_fu_562_p3 = {{p_Result_20_1_fu_475_p4}, {7'd0}};

assign tmp_28_fu_580_p3 = {{p_Result_20_1_fu_475_p4}, {3'd0}};

assign tmp_2_fu_660_p4 = {{add_ln1192_1_fu_654_p2[17:4]}};

assign tmp_32_fu_995_p3 = add_ln1192_7_fu_975_p2[32'd17];

assign tmp_33_fu_1086_p3 = add_ln1192_9_fu_1066_p2[32'd17];

assign tmp_34_fu_1177_p3 = add_ln1192_11_fu_1157_p2[32'd17];

assign tmp_35_fu_1229_p4 = {{select_ln850_3_fu_1035_p3[14:10]}};

assign tmp_36_fu_1361_p3 = select_ln106_3_fu_1355_p3[32'd13];

assign tmp_37_fu_1245_p4 = {{select_ln850_4_fu_1126_p3[14:10]}};

assign tmp_38_fu_1387_p3 = select_ln106_4_fu_1381_p3[32'd13];

assign tmp_39_fu_1261_p4 = {{select_ln850_5_fu_1217_p3[14:10]}};

assign tmp_40_fu_1413_p3 = select_ln106_5_fu_1407_p3[32'd13];

assign tmp_4_fu_751_p4 = {{add_ln1192_3_fu_745_p2[17:4]}};

assign tmp_6_fu_842_p4 = {{add_ln1192_5_fu_836_p2[17:4]}};

assign tmp_8_fu_981_p4 = {{add_ln1192_7_fu_975_p2[17:4]}};

assign tmp_9_fu_382_p3 = {{p_Result_7_fu_295_p4}, {7'd0}};

assign tmp_s_fu_1072_p4 = {{add_ln1192_9_fu_1066_p2[17:4]}};

assign trunc_ln301_1_fu_1317_p1 = select_ln106_1_fu_1303_p3[9:0];

assign trunc_ln301_2_fu_1343_p1 = select_ln106_2_fu_1329_p3[9:0];

assign trunc_ln301_3_fu_1369_p1 = select_ln106_3_fu_1355_p3[9:0];

assign trunc_ln301_4_fu_1395_p1 = select_ln106_4_fu_1381_p3[9:0];

assign trunc_ln301_5_fu_1421_p1 = select_ln106_5_fu_1407_p3[9:0];

assign trunc_ln301_fu_1291_p1 = select_ln106_fu_1277_p3[9:0];

assign trunc_ln647_fu_281_p1 = p_src_mat_data_V_V_dout[9:0];

assign trunc_ln850_1_fu_813_p1 = select_ln850_1_fu_805_p3[13:0];

assign trunc_ln850_2_fu_904_p1 = select_ln850_2_fu_896_p3[13:0];

assign trunc_ln850_3_fu_1043_p1 = select_ln850_3_fu_1035_p3[13:0];

assign trunc_ln850_4_fu_1134_p1 = select_ln850_4_fu_1126_p3[13:0];

assign trunc_ln850_5_fu_1225_p1 = select_ln850_5_fu_1217_p3[13:0];

assign trunc_ln850_fu_722_p1 = select_ln850_fu_714_p3[13:0];

assign trunc_ln851_1_fu_773_p1 = add_ln1192_3_fu_745_p2[3:0];

assign trunc_ln851_2_fu_864_p1 = add_ln1192_5_fu_836_p2[3:0];

assign trunc_ln851_3_fu_1003_p1 = add_ln1192_7_fu_975_p2[3:0];

assign trunc_ln851_4_fu_1094_p1 = add_ln1192_9_fu_1066_p2[3:0];

assign trunc_ln851_5_fu_1185_p1 = add_ln1192_11_fu_1157_p2[3:0];

assign trunc_ln851_fu_682_p1 = add_ln1192_1_fu_654_p2[3:0];

assign zext_ln1118_12_fu_570_p1 = tmp_27_fu_562_p3;

assign zext_ln1118_13_fu_588_p1 = tmp_28_fu_580_p3;

assign zext_ln1118_5_fu_390_p1 = tmp_9_fu_382_p3;

assign zext_ln1118_6_fu_408_p1 = tmp_10_fu_400_p3;

assign zext_ln887_fu_255_p1 = t_V_reg_209;

endmodule //xfccmkernel
