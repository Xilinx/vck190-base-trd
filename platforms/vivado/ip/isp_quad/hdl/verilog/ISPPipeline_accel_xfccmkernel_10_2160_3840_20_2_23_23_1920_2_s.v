// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
// Version: 2021.1
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module ISPPipeline_accel_xfccmkernel_10_2160_3840_20_2_23_23_1920_2_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        ltm_in_4199_dout,
        ltm_in_4199_empty_n,
        ltm_in_4199_read,
        lsc_out_4200_din,
        lsc_out_4200_full_n,
        lsc_out_4200_write,
        height,
        width
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_state2 = 3'd2;
parameter    ap_ST_fsm_state3 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [95:0] ltm_in_4199_dout;
input   ltm_in_4199_empty_n;
output   ltm_in_4199_read;
output  [95:0] lsc_out_4200_din;
input   lsc_out_4200_full_n;
output   lsc_out_4200_write;
input  [11:0] height;
input  [10:0] width;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg ltm_in_4199_read;
reg lsc_out_4200_write;

(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire    grp_xfccmkernel_10_2160_3840_20_2_23_23_1920_2_Pipeline_colLoop_fu_54_ap_start;
wire    grp_xfccmkernel_10_2160_3840_20_2_23_23_1920_2_Pipeline_colLoop_fu_54_ap_done;
wire    grp_xfccmkernel_10_2160_3840_20_2_23_23_1920_2_Pipeline_colLoop_fu_54_ap_idle;
wire    grp_xfccmkernel_10_2160_3840_20_2_23_23_1920_2_Pipeline_colLoop_fu_54_ap_ready;
wire    grp_xfccmkernel_10_2160_3840_20_2_23_23_1920_2_Pipeline_colLoop_fu_54_ltm_in_4199_read;
wire   [95:0] grp_xfccmkernel_10_2160_3840_20_2_23_23_1920_2_Pipeline_colLoop_fu_54_lsc_out_4200_din;
wire    grp_xfccmkernel_10_2160_3840_20_2_23_23_1920_2_Pipeline_colLoop_fu_54_lsc_out_4200_write;
reg    grp_xfccmkernel_10_2160_3840_20_2_23_23_1920_2_Pipeline_colLoop_fu_54_ap_start_reg;
wire    ap_CS_fsm_state2;
wire   [0:0] icmp_ln238_fu_77_p2;
wire    ap_CS_fsm_state3;
reg   [11:0] i_V_fu_38;
wire   [11:0] i_V_2_fu_71_p2;
reg   [2:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
reg    ap_ST_fsm_state3_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 3'd1;
#0 grp_xfccmkernel_10_2160_3840_20_2_23_23_1920_2_Pipeline_colLoop_fu_54_ap_start_reg = 1'b0;
end

ISPPipeline_accel_xfccmkernel_10_2160_3840_20_2_23_23_1920_2_Pipeline_colLoop grp_xfccmkernel_10_2160_3840_20_2_23_23_1920_2_Pipeline_colLoop_fu_54(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_xfccmkernel_10_2160_3840_20_2_23_23_1920_2_Pipeline_colLoop_fu_54_ap_start),
    .ap_done(grp_xfccmkernel_10_2160_3840_20_2_23_23_1920_2_Pipeline_colLoop_fu_54_ap_done),
    .ap_idle(grp_xfccmkernel_10_2160_3840_20_2_23_23_1920_2_Pipeline_colLoop_fu_54_ap_idle),
    .ap_ready(grp_xfccmkernel_10_2160_3840_20_2_23_23_1920_2_Pipeline_colLoop_fu_54_ap_ready),
    .ltm_in_4199_dout(ltm_in_4199_dout),
    .ltm_in_4199_empty_n(ltm_in_4199_empty_n),
    .ltm_in_4199_read(grp_xfccmkernel_10_2160_3840_20_2_23_23_1920_2_Pipeline_colLoop_fu_54_ltm_in_4199_read),
    .lsc_out_4200_din(grp_xfccmkernel_10_2160_3840_20_2_23_23_1920_2_Pipeline_colLoop_fu_54_lsc_out_4200_din),
    .lsc_out_4200_full_n(lsc_out_4200_full_n),
    .lsc_out_4200_write(grp_xfccmkernel_10_2160_3840_20_2_23_23_1920_2_Pipeline_colLoop_fu_54_lsc_out_4200_write),
    .width(width)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_xfccmkernel_10_2160_3840_20_2_23_23_1920_2_Pipeline_colLoop_fu_54_ap_start_reg <= 1'b0;
    end else begin
        if (((icmp_ln238_fu_77_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            grp_xfccmkernel_10_2160_3840_20_2_23_23_1920_2_Pipeline_colLoop_fu_54_ap_start_reg <= 1'b1;
        end else if ((grp_xfccmkernel_10_2160_3840_20_2_23_23_1920_2_Pipeline_colLoop_fu_54_ap_ready == 1'b1)) begin
            grp_xfccmkernel_10_2160_3840_20_2_23_23_1920_2_Pipeline_colLoop_fu_54_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_V_fu_38 <= 12'd0;
    end else if (((icmp_ln238_fu_77_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        i_V_fu_38 <= i_V_2_fu_71_p2;
    end
end

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

always @ (*) begin
    if ((grp_xfccmkernel_10_2160_3840_20_2_23_23_1920_2_Pipeline_colLoop_fu_54_ap_done == 1'b0)) begin
        ap_ST_fsm_state3_blk = 1'b1;
    end else begin
        ap_ST_fsm_state3_blk = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln238_fu_77_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2)) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln238_fu_77_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        lsc_out_4200_write = grp_xfccmkernel_10_2160_3840_20_2_23_23_1920_2_Pipeline_colLoop_fu_54_lsc_out_4200_write;
    end else begin
        lsc_out_4200_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ltm_in_4199_read = grp_xfccmkernel_10_2160_3840_20_2_23_23_1920_2_Pipeline_colLoop_fu_54_ltm_in_4199_read;
    end else begin
        ltm_in_4199_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln238_fu_77_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((grp_xfccmkernel_10_2160_3840_20_2_23_23_1920_2_Pipeline_colLoop_fu_54_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign grp_xfccmkernel_10_2160_3840_20_2_23_23_1920_2_Pipeline_colLoop_fu_54_ap_start = grp_xfccmkernel_10_2160_3840_20_2_23_23_1920_2_Pipeline_colLoop_fu_54_ap_start_reg;

assign i_V_2_fu_71_p2 = (i_V_fu_38 + 12'd1);

assign icmp_ln238_fu_77_p2 = ((i_V_fu_38 == height) ? 1'b1 : 1'b0);

assign lsc_out_4200_din = grp_xfccmkernel_10_2160_3840_20_2_23_23_1920_2_Pipeline_colLoop_fu_54_lsc_out_4200_din;

endmodule //ISPPipeline_accel_xfccmkernel_10_2160_3840_20_2_23_23_1920_2_s
