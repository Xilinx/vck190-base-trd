// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
// Version: 2021.1
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module ISPPipeline_accel_rgb_bgr_kernel_ap_uint_16_6_s (
        ap_clk,
        ap_rst,
        p_read,
        p_read1,
        p_read2,
        p_read3,
        p_read4,
        p_read5,
        p_read6,
        p_read7,
        p_read8,
        p_read9,
        p_read10,
        p_read11,
        p_read12,
        p_read13,
        p_read14,
        p_read15,
        p_read16,
        p_read17,
        p_read18,
        p_read19,
        p_read20,
        p_read21,
        p_read22,
        p_read23,
        p_read24,
        p_read25,
        p_read26,
        p_read27,
        p_read28,
        p_read29,
        loop_offset,
        ap_return,
        ap_ce
);


input   ap_clk;
input   ap_rst;
input  [15:0] p_read;
input  [15:0] p_read1;
input  [15:0] p_read2;
input  [15:0] p_read3;
input  [15:0] p_read4;
input  [15:0] p_read5;
input  [15:0] p_read6;
input  [15:0] p_read7;
input  [15:0] p_read8;
input  [15:0] p_read9;
input  [15:0] p_read10;
input  [15:0] p_read11;
input  [15:0] p_read12;
input  [15:0] p_read13;
input  [15:0] p_read14;
input  [15:0] p_read15;
input  [15:0] p_read16;
input  [15:0] p_read17;
input  [15:0] p_read18;
input  [15:0] p_read19;
input  [15:0] p_read20;
input  [15:0] p_read21;
input  [15:0] p_read22;
input  [15:0] p_read23;
input  [15:0] p_read24;
input  [15:0] p_read25;
input  [15:0] p_read26;
input  [15:0] p_read27;
input  [15:0] p_read28;
input  [15:0] p_read29;
input  [0:0] loop_offset;
output  [18:0] ap_return;
input   ap_ce;

reg[18:0] ap_return;

reg   [15:0] lshr_ln_reg_797;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_pp0_stage0_11001;
wire   [17:0] ret_12_fu_508_p2;
reg   [17:0] ret_12_reg_802;
wire   [16:0] add_ln1525_6_fu_558_p2;
reg   [16:0] add_ln1525_6_reg_807;
wire   [19:0] add_ln116_1_fu_670_p2;
reg   [19:0] add_ln116_1_reg_812;
reg   [19:0] add_ln116_1_reg_812_pp0_iter1_reg;
wire   [19:0] sub_ln115_fu_695_p2;
reg   [19:0] sub_ln115_reg_817;
wire    ap_block_pp0_stage0;
wire   [2:0] lhs_fu_304_p7;
wire   [15:0] lhs_fu_304_p8;
wire   [2:0] rhs_fu_334_p7;
wire   [15:0] rhs_fu_334_p8;
wire   [16:0] zext_ln225_11_fu_352_p1;
wire   [16:0] zext_ln225_fu_322_p1;
wire   [16:0] ret_fu_356_p2;
wire   [1:0] or_ln225_2_fu_372_p3;
wire   [2:0] zext_ln225_13_fu_380_p1;
wire   [15:0] lhs_10_fu_384_p8;
wire   [2:0] select_ln225_fu_406_p3;
wire   [15:0] rhs_7_fu_414_p8;
wire   [16:0] zext_ln225_15_fu_432_p1;
wire   [16:0] zext_ln225_14_fu_402_p1;
wire   [16:0] ret_11_fu_436_p2;
wire   [2:0] select_ln225_2_fu_446_p3;
wire   [15:0] rhs_8_fu_454_p8;
wire   [15:0] rhs_9_fu_476_p8;
wire   [16:0] zext_ln1525_fu_472_p1;
wire   [16:0] zext_ln1525_18_fu_494_p1;
wire   [16:0] add_ln1525_fu_498_p2;
wire   [17:0] zext_ln1525_19_fu_504_p1;
wire   [17:0] zext_ln225_16_fu_442_p1;
wire   [15:0] rhs_10_fu_514_p8;
wire   [15:0] rhs_11_fu_536_p8;
wire   [16:0] zext_ln1525_20_fu_532_p1;
wire   [16:0] zext_ln1525_21_fu_554_p1;
wire   [15:0] lhs_13_fu_564_p8;
wire   [15:0] rhs_12_fu_586_p8;
wire   [16:0] zext_ln225_19_fu_604_p1;
wire   [16:0] zext_ln225_18_fu_582_p1;
wire   [16:0] ret_10_fu_608_p2;
wire   [18:0] shl_ln_fu_614_p3;
wire   [15:0] tmp_fu_626_p8;
wire   [17:0] shl_ln2_fu_648_p3;
wire   [18:0] zext_ln115_fu_656_p1;
wire   [18:0] zext_ln114_fu_644_p1;
wire   [18:0] add_ln115_fu_660_p2;
wire   [19:0] zext_ln225_20_fu_622_p1;
wire   [19:0] zext_ln116_fu_666_p1;
wire   [18:0] zext_ln1525_22_fu_682_p1;
wire   [18:0] zext_ln1525_15_fu_679_p1;
wire   [18:0] ret_9_fu_685_p2;
wire   [19:0] zext_ln225_12_fu_676_p1;
wire   [19:0] zext_ln225_17_fu_691_p1;
wire   [20:0] zext_ln116_1_fu_704_p1;
wire  signed [20:0] sext_ln115_fu_701_p1;
wire   [20:0] add_ln116_fu_707_p2;
wire   [20:0] sub_ln116_fu_721_p2;
wire   [17:0] trunc_ln116_1_fu_727_p4;
wire  signed [18:0] sext_ln116_fu_737_p1;
wire   [19:0] zext_ln116_2_fu_741_p1;
wire   [17:0] trunc_ln116_2_fu_751_p4;
wire  signed [18:0] sext_ln116_1_fu_761_p1;
wire   [0:0] tmp_61_fu_713_p3;
wire   [19:0] sub_ln116_1_fu_745_p2;
wire   [19:0] zext_ln116_3_fu_765_p1;
wire   [19:0] res_fu_769_p3;
wire   [0:0] tmp_62_fu_781_p3;
wire   [18:0] trunc_ln115_fu_777_p1;
wire   [18:0] select_ln117_fu_789_p3;
reg    ap_ce_reg;
reg   [15:0] p_read_int_reg;
reg   [15:0] p_read1_int_reg;
reg   [15:0] p_read2_int_reg;
reg   [15:0] p_read3_int_reg;
reg   [15:0] p_read4_int_reg;
reg   [15:0] p_read5_int_reg;
reg   [15:0] p_read6_int_reg;
reg   [15:0] p_read7_int_reg;
reg   [15:0] p_read8_int_reg;
reg   [15:0] p_read9_int_reg;
reg   [15:0] p_read10_int_reg;
reg   [15:0] p_read11_int_reg;
reg   [15:0] p_read12_int_reg;
reg   [15:0] p_read13_int_reg;
reg   [15:0] p_read14_int_reg;
reg   [15:0] p_read15_int_reg;
reg   [15:0] p_read16_int_reg;
reg   [15:0] p_read17_int_reg;
reg   [15:0] p_read18_int_reg;
reg   [15:0] p_read19_int_reg;
reg   [15:0] p_read20_int_reg;
reg   [15:0] p_read21_int_reg;
reg   [15:0] p_read22_int_reg;
reg   [15:0] p_read23_int_reg;
reg   [15:0] p_read24_int_reg;
reg   [15:0] p_read25_int_reg;
reg   [15:0] p_read26_int_reg;
reg   [15:0] p_read27_int_reg;
reg   [15:0] p_read28_int_reg;
reg   [15:0] p_read29_int_reg;
reg   [0:0] loop_offset_int_reg;
reg   [18:0] ap_return_int_reg;

ISPPipeline_accel_mux_63_16_1_0 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 3 ),
    .dout_WIDTH( 16 ))
mux_63_16_1_0_U236(
    .din0(p_read12_int_reg),
    .din1(p_read13_int_reg),
    .din2(p_read14_int_reg),
    .din3(p_read15_int_reg),
    .din4(p_read16_int_reg),
    .din5(p_read17_int_reg),
    .din6(lhs_fu_304_p7),
    .dout(lhs_fu_304_p8)
);

ISPPipeline_accel_mux_63_16_1_0 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 3 ),
    .dout_WIDTH( 16 ))
mux_63_16_1_0_U237(
    .din0(p_read12_int_reg),
    .din1(p_read13_int_reg),
    .din2(p_read14_int_reg),
    .din3(p_read15_int_reg),
    .din4(p_read16_int_reg),
    .din5(p_read17_int_reg),
    .din6(rhs_fu_334_p7),
    .dout(rhs_fu_334_p8)
);

ISPPipeline_accel_mux_63_16_1_0 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 3 ),
    .dout_WIDTH( 16 ))
mux_63_16_1_0_U238(
    .din0(p_read_int_reg),
    .din1(p_read1_int_reg),
    .din2(p_read2_int_reg),
    .din3(p_read3_int_reg),
    .din4(p_read4_int_reg),
    .din5(p_read5_int_reg),
    .din6(zext_ln225_13_fu_380_p1),
    .dout(lhs_10_fu_384_p8)
);

ISPPipeline_accel_mux_63_16_1_0 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 3 ),
    .dout_WIDTH( 16 ))
mux_63_16_1_0_U239(
    .din0(p_read6_int_reg),
    .din1(p_read7_int_reg),
    .din2(p_read8_int_reg),
    .din3(p_read9_int_reg),
    .din4(p_read10_int_reg),
    .din5(p_read11_int_reg),
    .din6(select_ln225_fu_406_p3),
    .dout(rhs_7_fu_414_p8)
);

ISPPipeline_accel_mux_63_16_1_0 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 3 ),
    .dout_WIDTH( 16 ))
mux_63_16_1_0_U240(
    .din0(p_read6_int_reg),
    .din1(p_read7_int_reg),
    .din2(p_read8_int_reg),
    .din3(p_read9_int_reg),
    .din4(p_read10_int_reg),
    .din5(p_read11_int_reg),
    .din6(select_ln225_2_fu_446_p3),
    .dout(rhs_8_fu_454_p8)
);

ISPPipeline_accel_mux_63_16_1_0 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 3 ),
    .dout_WIDTH( 16 ))
mux_63_16_1_0_U241(
    .din0(p_read18_int_reg),
    .din1(p_read19_int_reg),
    .din2(p_read20_int_reg),
    .din3(p_read21_int_reg),
    .din4(p_read22_int_reg),
    .din5(p_read23_int_reg),
    .din6(select_ln225_fu_406_p3),
    .dout(rhs_9_fu_476_p8)
);

ISPPipeline_accel_mux_63_16_1_0 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 3 ),
    .dout_WIDTH( 16 ))
mux_63_16_1_0_U242(
    .din0(p_read18_int_reg),
    .din1(p_read19_int_reg),
    .din2(p_read20_int_reg),
    .din3(p_read21_int_reg),
    .din4(p_read22_int_reg),
    .din5(p_read23_int_reg),
    .din6(select_ln225_2_fu_446_p3),
    .dout(rhs_10_fu_514_p8)
);

ISPPipeline_accel_mux_63_16_1_0 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 3 ),
    .dout_WIDTH( 16 ))
mux_63_16_1_0_U243(
    .din0(p_read24_int_reg),
    .din1(p_read25_int_reg),
    .din2(p_read26_int_reg),
    .din3(p_read27_int_reg),
    .din4(p_read28_int_reg),
    .din5(p_read29_int_reg),
    .din6(zext_ln225_13_fu_380_p1),
    .dout(rhs_11_fu_536_p8)
);

ISPPipeline_accel_mux_63_16_1_0 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 3 ),
    .dout_WIDTH( 16 ))
mux_63_16_1_0_U244(
    .din0(p_read6_int_reg),
    .din1(p_read7_int_reg),
    .din2(p_read8_int_reg),
    .din3(p_read9_int_reg),
    .din4(p_read10_int_reg),
    .din5(p_read11_int_reg),
    .din6(zext_ln225_13_fu_380_p1),
    .dout(lhs_13_fu_564_p8)
);

ISPPipeline_accel_mux_63_16_1_0 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 3 ),
    .dout_WIDTH( 16 ))
mux_63_16_1_0_U245(
    .din0(p_read18_int_reg),
    .din1(p_read19_int_reg),
    .din2(p_read20_int_reg),
    .din3(p_read21_int_reg),
    .din4(p_read22_int_reg),
    .din5(p_read23_int_reg),
    .din6(zext_ln225_13_fu_380_p1),
    .dout(rhs_12_fu_586_p8)
);

ISPPipeline_accel_mux_63_16_1_0 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 3 ),
    .dout_WIDTH( 16 ))
mux_63_16_1_0_U246(
    .din0(p_read12_int_reg),
    .din1(p_read13_int_reg),
    .din2(p_read14_int_reg),
    .din3(p_read15_int_reg),
    .din4(p_read16_int_reg),
    .din5(p_read17_int_reg),
    .din6(zext_ln225_13_fu_380_p1),
    .dout(tmp_fu_626_p8)
);

always @ (posedge ap_clk) begin
    ap_ce_reg <= ap_ce;
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        add_ln116_1_reg_812 <= add_ln116_1_fu_670_p2;
        add_ln116_1_reg_812_pp0_iter1_reg <= add_ln116_1_reg_812;
        add_ln1525_6_reg_807 <= add_ln1525_6_fu_558_p2;
        lshr_ln_reg_797 <= {{ret_fu_356_p2[16:1]}};
        ret_12_reg_802 <= ret_12_fu_508_p2;
        sub_ln115_reg_817 <= sub_ln115_fu_695_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce_reg)) begin
        ap_return_int_reg <= select_ln117_fu_789_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce)) begin
        loop_offset_int_reg <= loop_offset;
        p_read10_int_reg <= p_read10;
        p_read11_int_reg <= p_read11;
        p_read12_int_reg <= p_read12;
        p_read13_int_reg <= p_read13;
        p_read14_int_reg <= p_read14;
        p_read15_int_reg <= p_read15;
        p_read16_int_reg <= p_read16;
        p_read17_int_reg <= p_read17;
        p_read18_int_reg <= p_read18;
        p_read19_int_reg <= p_read19;
        p_read1_int_reg <= p_read1;
        p_read20_int_reg <= p_read20;
        p_read21_int_reg <= p_read21;
        p_read22_int_reg <= p_read22;
        p_read23_int_reg <= p_read23;
        p_read24_int_reg <= p_read24;
        p_read25_int_reg <= p_read25;
        p_read26_int_reg <= p_read26;
        p_read27_int_reg <= p_read27;
        p_read28_int_reg <= p_read28;
        p_read29_int_reg <= p_read29;
        p_read2_int_reg <= p_read2;
        p_read3_int_reg <= p_read3;
        p_read4_int_reg <= p_read4;
        p_read5_int_reg <= p_read5;
        p_read6_int_reg <= p_read6;
        p_read7_int_reg <= p_read7;
        p_read8_int_reg <= p_read8;
        p_read9_int_reg <= p_read9;
        p_read_int_reg <= p_read;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return = ap_return_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return = select_ln117_fu_789_p3;
    end else begin
        ap_return = 'bx;
    end
end

assign add_ln115_fu_660_p2 = (zext_ln115_fu_656_p1 + zext_ln114_fu_644_p1);

assign add_ln116_1_fu_670_p2 = (zext_ln225_20_fu_622_p1 + zext_ln116_fu_666_p1);

assign add_ln116_fu_707_p2 = ($signed(zext_ln116_1_fu_704_p1) + $signed(sext_ln115_fu_701_p1));

assign add_ln1525_6_fu_558_p2 = (zext_ln1525_20_fu_532_p1 + zext_ln1525_21_fu_554_p1);

assign add_ln1525_fu_498_p2 = (zext_ln1525_fu_472_p1 + zext_ln1525_18_fu_494_p1);

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign lhs_fu_304_p7 = loop_offset_int_reg;

assign or_ln225_2_fu_372_p3 = {{1'd1}, {loop_offset_int_reg}};

assign res_fu_769_p3 = ((tmp_61_fu_713_p3[0:0] == 1'b1) ? sub_ln116_1_fu_745_p2 : zext_ln116_3_fu_765_p1);

assign ret_10_fu_608_p2 = (zext_ln225_19_fu_604_p1 + zext_ln225_18_fu_582_p1);

assign ret_11_fu_436_p2 = (zext_ln225_15_fu_432_p1 + zext_ln225_14_fu_402_p1);

assign ret_12_fu_508_p2 = (zext_ln1525_19_fu_504_p1 + zext_ln225_16_fu_442_p1);

assign ret_9_fu_685_p2 = (zext_ln1525_22_fu_682_p1 + zext_ln1525_15_fu_679_p1);

assign ret_fu_356_p2 = (zext_ln225_11_fu_352_p1 + zext_ln225_fu_322_p1);

assign rhs_fu_334_p7 = {{2'd2}, {loop_offset_int_reg}};

assign select_ln117_fu_789_p3 = ((tmp_62_fu_781_p3[0:0] == 1'b1) ? 19'd0 : trunc_ln115_fu_777_p1);

assign select_ln225_2_fu_446_p3 = ((loop_offset_int_reg[0:0] == 1'b1) ? 3'd4 : 3'd3);

assign select_ln225_fu_406_p3 = ((loop_offset_int_reg[0:0] == 1'b1) ? 3'd2 : 3'd1);

assign sext_ln115_fu_701_p1 = $signed(sub_ln115_reg_817);

assign sext_ln116_1_fu_761_p1 = $signed(trunc_ln116_2_fu_751_p4);

assign sext_ln116_fu_737_p1 = $signed(trunc_ln116_1_fu_727_p4);

assign shl_ln2_fu_648_p3 = {{tmp_fu_626_p8}, {2'd0}};

assign shl_ln_fu_614_p3 = {{ret_10_fu_608_p2}, {2'd0}};

assign sub_ln115_fu_695_p2 = (zext_ln225_12_fu_676_p1 - zext_ln225_17_fu_691_p1);

assign sub_ln116_1_fu_745_p2 = (20'd0 - zext_ln116_2_fu_741_p1);

assign sub_ln116_fu_721_p2 = (21'd0 - add_ln116_fu_707_p2);

assign tmp_61_fu_713_p3 = add_ln116_fu_707_p2[32'd20];

assign tmp_62_fu_781_p3 = res_fu_769_p3[32'd19];

assign trunc_ln115_fu_777_p1 = res_fu_769_p3[18:0];

assign trunc_ln116_1_fu_727_p4 = {{sub_ln116_fu_721_p2[20:3]}};

assign trunc_ln116_2_fu_751_p4 = {{add_ln116_fu_707_p2[20:3]}};

assign zext_ln114_fu_644_p1 = tmp_fu_626_p8;

assign zext_ln115_fu_656_p1 = shl_ln2_fu_648_p3;

assign zext_ln116_1_fu_704_p1 = add_ln116_1_reg_812_pp0_iter1_reg;

assign zext_ln116_2_fu_741_p1 = $unsigned(sext_ln116_fu_737_p1);

assign zext_ln116_3_fu_765_p1 = $unsigned(sext_ln116_1_fu_761_p1);

assign zext_ln116_fu_666_p1 = add_ln115_fu_660_p2;

assign zext_ln1525_15_fu_679_p1 = ret_12_reg_802;

assign zext_ln1525_18_fu_494_p1 = rhs_9_fu_476_p8;

assign zext_ln1525_19_fu_504_p1 = add_ln1525_fu_498_p2;

assign zext_ln1525_20_fu_532_p1 = rhs_10_fu_514_p8;

assign zext_ln1525_21_fu_554_p1 = rhs_11_fu_536_p8;

assign zext_ln1525_22_fu_682_p1 = add_ln1525_6_reg_807;

assign zext_ln1525_fu_472_p1 = rhs_8_fu_454_p8;

assign zext_ln225_11_fu_352_p1 = rhs_fu_334_p8;

assign zext_ln225_12_fu_676_p1 = lshr_ln_reg_797;

assign zext_ln225_13_fu_380_p1 = or_ln225_2_fu_372_p3;

assign zext_ln225_14_fu_402_p1 = lhs_10_fu_384_p8;

assign zext_ln225_15_fu_432_p1 = rhs_7_fu_414_p8;

assign zext_ln225_16_fu_442_p1 = ret_11_fu_436_p2;

assign zext_ln225_17_fu_691_p1 = ret_9_fu_685_p2;

assign zext_ln225_18_fu_582_p1 = lhs_13_fu_564_p8;

assign zext_ln225_19_fu_604_p1 = rhs_12_fu_586_p8;

assign zext_ln225_20_fu_622_p1 = shl_ln_fu_614_p3;

assign zext_ln225_fu_322_p1 = lhs_fu_304_p8;

endmodule //ISPPipeline_accel_rgb_bgr_kernel_ap_uint_16_6_s
