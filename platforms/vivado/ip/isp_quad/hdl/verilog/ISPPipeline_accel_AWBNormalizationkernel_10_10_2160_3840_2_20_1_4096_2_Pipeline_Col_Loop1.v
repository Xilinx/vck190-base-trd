// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
// Version: 2021.1
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module ISPPipeline_accel_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_Col_Loop1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        impop_41_dout,
        impop_41_empty_n,
        impop_41_read,
        ltm_in_4199_din,
        ltm_in_4199_full_n,
        ltm_in_4199_write,
        tmp_61,
        minValue_V_load,
        conv7_i99,
        minValue_V_load_1,
        conv7_i99_1,
        minValue_V_load_2,
        conv7_i99_2
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [95:0] impop_41_dout;
input   impop_41_empty_n;
output   impop_41_read;
output  [95:0] ltm_in_4199_din;
input   ltm_in_4199_full_n;
output   ltm_in_4199_write;
input  [10:0] tmp_61;
input  [23:0] minValue_V_load;
input  [31:0] conv7_i99;
input  [23:0] minValue_V_load_1;
input  [31:0] conv7_i99_1;
input  [23:0] minValue_V_load_2;
input  [31:0] conv7_i99_2;

reg ap_idle;
reg impop_41_read;
reg ltm_in_4199_write;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
reg    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
reg    ap_block_state4_pp0_stage0_iter3;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln377_fu_195_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    impop_41_blk_n;
wire    ap_block_pp0_stage0;
reg    ltm_in_4199_blk_n;
reg    ap_block_pp0_stage0_11001;
wire  signed [55:0] conv7_i99_2_cast_fu_169_p1;
reg  signed [55:0] conv7_i99_2_cast_reg_1040;
wire  signed [55:0] conv7_i99_1_cast_fu_173_p1;
reg  signed [55:0] conv7_i99_1_cast_reg_1046;
wire  signed [55:0] conv7_i99_cast_fu_177_p1;
reg  signed [55:0] conv7_i99_cast_reg_1052;
wire   [15:0] trunc_ln712_fu_206_p1;
reg   [15:0] trunc_ln712_reg_1062;
reg   [15:0] tmp_49_reg_1067;
reg   [15:0] tmp_52_reg_1072;
reg   [15:0] tmp_55_reg_1077;
reg   [15:0] tmp_58_reg_1082;
reg   [15:0] tmp_62_reg_1087;
reg   [39:0] tmp_s_reg_1092;
reg   [43:0] tmp_48_reg_1097;
reg   [39:0] tmp_50_reg_1102;
reg   [43:0] tmp_51_reg_1107;
reg   [39:0] tmp_53_reg_1112;
reg   [43:0] tmp_54_reg_1117;
reg   [39:0] tmp_56_reg_1122;
reg   [43:0] tmp_57_reg_1127;
reg   [39:0] tmp_59_reg_1132;
reg   [43:0] tmp_60_reg_1137;
reg   [39:0] tmp_63_reg_1142;
reg   [43:0] tmp_64_reg_1147;
reg   [10:0] col_V_fu_110;
wire    ap_loop_init;
reg   [10:0] ap_sig_allocacmp_col_V_3;
wire   [10:0] col_V_4_fu_189_p2;
reg    ap_block_pp0_stage0_01001;
wire   [21:0] shl_ln_fu_260_p3;
wire   [23:0] zext_ln712_fu_267_p1;
wire  signed [23:0] value_V_fu_271_p2;
wire  signed [31:0] r_V_27_fu_280_p0;
wire   [55:0] r_V_27_fu_280_p2;
wire   [21:0] shl_ln712_1_fu_305_p3;
wire   [23:0] zext_ln712_1_fu_312_p1;
wire  signed [23:0] value_V_1_fu_316_p2;
wire  signed [31:0] r_V_30_fu_325_p0;
wire   [55:0] r_V_30_fu_325_p2;
wire   [21:0] shl_ln712_2_fu_350_p3;
wire   [23:0] zext_ln712_2_fu_357_p1;
wire  signed [23:0] value_V_2_fu_361_p2;
wire  signed [31:0] r_V_33_fu_370_p0;
wire   [55:0] r_V_33_fu_370_p2;
wire   [21:0] shl_ln712_3_fu_395_p3;
wire   [23:0] zext_ln712_3_fu_402_p1;
wire  signed [23:0] value_V_3_fu_406_p2;
wire  signed [31:0] r_V_36_fu_415_p0;
wire   [55:0] r_V_36_fu_415_p2;
wire   [21:0] shl_ln712_4_fu_440_p3;
wire   [23:0] zext_ln712_4_fu_447_p1;
wire  signed [23:0] value_V_4_fu_451_p2;
wire  signed [31:0] r_V_39_fu_460_p0;
wire   [55:0] r_V_39_fu_460_p2;
wire   [21:0] shl_ln712_5_fu_485_p3;
wire   [23:0] zext_ln712_5_fu_492_p1;
wire  signed [23:0] value_V_5_fu_496_p2;
wire  signed [31:0] r_V_42_fu_505_p0;
wire   [55:0] r_V_42_fu_505_p2;
wire   [49:0] shl_ln1171_4_fu_537_p3;
wire   [61:0] shl_ln4_fu_530_p3;
wire  signed [61:0] sext_ln1171_fu_544_p1;
wire   [61:0] r_V_28_fu_548_p2;
wire   [0:0] tmp_fu_564_p3;
wire   [31:0] finalmul_V_fu_554_p4;
wire   [31:0] dstval_V_fu_572_p3;
wire   [15:0] tmp_91_fu_580_p4;
wire   [0:0] icmp_ln52_fu_590_p2;
wire   [15:0] trunc_ln315_fu_596_p1;
wire   [49:0] shl_ln1171_6_fu_615_p3;
wire   [61:0] shl_ln1171_5_fu_608_p3;
wire  signed [61:0] sext_ln1171_1_fu_622_p1;
wire   [61:0] r_V_31_fu_626_p2;
wire   [0:0] tmp_92_fu_642_p3;
wire   [31:0] finalmul_V_1_fu_632_p4;
wire   [31:0] dstval_V_2_fu_650_p3;
wire   [15:0] tmp_93_fu_658_p4;
wire   [0:0] icmp_ln52_1_fu_668_p2;
wire   [15:0] trunc_ln315_11_fu_674_p1;
wire   [49:0] shl_ln1171_8_fu_693_p3;
wire   [61:0] shl_ln1171_7_fu_686_p3;
wire  signed [61:0] sext_ln1171_2_fu_700_p1;
wire   [61:0] r_V_34_fu_704_p2;
wire   [0:0] tmp_94_fu_720_p3;
wire   [31:0] finalmul_V_2_fu_710_p4;
wire   [31:0] dstval_V_3_fu_728_p3;
wire   [15:0] tmp_95_fu_736_p4;
wire   [0:0] icmp_ln52_2_fu_746_p2;
wire   [15:0] trunc_ln315_12_fu_752_p1;
wire   [49:0] shl_ln1171_s_fu_771_p3;
wire   [61:0] shl_ln1171_9_fu_764_p3;
wire  signed [61:0] sext_ln1171_3_fu_778_p1;
wire   [61:0] r_V_37_fu_782_p2;
wire   [0:0] tmp_96_fu_798_p3;
wire   [31:0] finalmul_V_3_fu_788_p4;
wire   [31:0] dstval_V_4_fu_806_p3;
wire   [15:0] tmp_97_fu_814_p4;
wire   [0:0] icmp_ln52_3_fu_824_p2;
wire   [15:0] trunc_ln315_13_fu_830_p1;
wire   [49:0] shl_ln1171_2_fu_849_p3;
wire   [61:0] shl_ln1171_1_fu_842_p3;
wire  signed [61:0] sext_ln1171_4_fu_856_p1;
wire   [61:0] r_V_40_fu_860_p2;
wire   [0:0] tmp_98_fu_876_p3;
wire   [31:0] finalmul_V_4_fu_866_p4;
wire   [31:0] dstval_V_5_fu_884_p3;
wire   [15:0] tmp_99_fu_892_p4;
wire   [0:0] icmp_ln52_4_fu_902_p2;
wire   [15:0] trunc_ln315_14_fu_908_p1;
wire   [49:0] shl_ln1171_10_fu_927_p3;
wire   [61:0] shl_ln1171_3_fu_920_p3;
wire  signed [61:0] sext_ln1171_5_fu_934_p1;
wire   [61:0] r_V_43_fu_938_p2;
wire   [0:0] tmp_100_fu_954_p3;
wire   [31:0] finalmul_V_5_fu_944_p4;
wire   [31:0] dstval_V_6_fu_962_p3;
wire   [15:0] tmp_101_fu_970_p4;
wire   [0:0] icmp_ln52_5_fu_980_p2;
wire   [15:0] trunc_ln315_15_fu_986_p1;
wire   [15:0] select_ln315_12_fu_990_p3;
wire   [15:0] select_ln315_11_fu_912_p3;
wire   [15:0] select_ln315_10_fu_834_p3;
wire   [15:0] select_ln315_9_fu_756_p3;
wire   [15:0] select_ln315_8_fu_678_p3;
wire   [15:0] select_ln315_fu_600_p3;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_done_reg = 1'b0;
end

ISPPipeline_accel_mul_32s_24s_56_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 24 ),
    .dout_WIDTH( 56 ))
mul_32s_24s_56_1_1_U485(
    .din0(r_V_27_fu_280_p0),
    .din1(value_V_fu_271_p2),
    .dout(r_V_27_fu_280_p2)
);

ISPPipeline_accel_mul_32s_24s_56_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 24 ),
    .dout_WIDTH( 56 ))
mul_32s_24s_56_1_1_U486(
    .din0(r_V_30_fu_325_p0),
    .din1(value_V_1_fu_316_p2),
    .dout(r_V_30_fu_325_p2)
);

ISPPipeline_accel_mul_32s_24s_56_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 24 ),
    .dout_WIDTH( 56 ))
mul_32s_24s_56_1_1_U487(
    .din0(r_V_33_fu_370_p0),
    .din1(value_V_2_fu_361_p2),
    .dout(r_V_33_fu_370_p2)
);

ISPPipeline_accel_mul_32s_24s_56_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 24 ),
    .dout_WIDTH( 56 ))
mul_32s_24s_56_1_1_U488(
    .din0(r_V_36_fu_415_p0),
    .din1(value_V_3_fu_406_p2),
    .dout(r_V_36_fu_415_p2)
);

ISPPipeline_accel_mul_32s_24s_56_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 24 ),
    .dout_WIDTH( 56 ))
mul_32s_24s_56_1_1_U489(
    .din0(r_V_39_fu_460_p0),
    .din1(value_V_4_fu_451_p2),
    .dout(r_V_39_fu_460_p2)
);

ISPPipeline_accel_mul_32s_24s_56_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 24 ),
    .dout_WIDTH( 56 ))
mul_32s_24s_56_1_1_U490(
    .din0(r_V_42_fu_505_p0),
    .din1(value_V_5_fu_496_p2),
    .dout(r_V_42_fu_505_p2)
);

ISPPipeline_accel_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter2_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln377_fu_195_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            col_V_fu_110 <= col_V_4_fu_189_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            col_V_fu_110 <= 11'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        conv7_i99_1_cast_reg_1046 <= conv7_i99_1_cast_fu_173_p1;
        conv7_i99_2_cast_reg_1040 <= conv7_i99_2_cast_fu_169_p1;
        conv7_i99_cast_reg_1052 <= conv7_i99_cast_fu_177_p1;
        tmp_49_reg_1067 <= {{impop_41_dout[31:16]}};
        tmp_52_reg_1072 <= {{impop_41_dout[47:32]}};
        tmp_55_reg_1077 <= {{impop_41_dout[63:48]}};
        tmp_58_reg_1082 <= {{impop_41_dout[79:64]}};
        tmp_62_reg_1087 <= {{impop_41_dout[95:80]}};
        trunc_ln712_reg_1062 <= trunc_ln712_fu_206_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        tmp_48_reg_1097 <= {{r_V_27_fu_280_p2[55:12]}};
        tmp_50_reg_1102 <= {{r_V_30_fu_325_p2[51:12]}};
        tmp_51_reg_1107 <= {{r_V_30_fu_325_p2[55:12]}};
        tmp_53_reg_1112 <= {{r_V_33_fu_370_p2[51:12]}};
        tmp_54_reg_1117 <= {{r_V_33_fu_370_p2[55:12]}};
        tmp_56_reg_1122 <= {{r_V_36_fu_415_p2[51:12]}};
        tmp_57_reg_1127 <= {{r_V_36_fu_415_p2[55:12]}};
        tmp_59_reg_1132 <= {{r_V_39_fu_460_p2[51:12]}};
        tmp_60_reg_1137 <= {{r_V_39_fu_460_p2[55:12]}};
        tmp_63_reg_1142 <= {{r_V_42_fu_505_p2[51:12]}};
        tmp_64_reg_1147 <= {{r_V_42_fu_505_p2[55:12]}};
        tmp_s_reg_1092 <= {{r_V_27_fu_280_p2[51:12]}};
    end
end

always @ (*) begin
    if (((icmp_ln377_fu_195_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter2_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_col_V_3 = 11'd0;
    end else begin
        ap_sig_allocacmp_col_V_3 = col_V_fu_110;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        impop_41_blk_n = impop_41_empty_n;
    end else begin
        impop_41_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        impop_41_read = 1'b1;
    end else begin
        impop_41_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        ltm_in_4199_blk_n = ltm_in_4199_full_n;
    end else begin
        ltm_in_4199_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        ltm_in_4199_write = 1'b1;
    end else begin
        ltm_in_4199_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((ltm_in_4199_full_n == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((impop_41_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ltm_in_4199_full_n == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((impop_41_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ltm_in_4199_full_n == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((impop_41_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = (impop_41_empty_n == 1'b0);
end

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4_pp0_stage0_iter3 = (ltm_in_4199_full_n == 1'b0);
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign col_V_4_fu_189_p2 = (ap_sig_allocacmp_col_V_3 + 11'd1);

assign conv7_i99_1_cast_fu_173_p1 = $signed(conv7_i99_1);

assign conv7_i99_2_cast_fu_169_p1 = $signed(conv7_i99_2);

assign conv7_i99_cast_fu_177_p1 = $signed(conv7_i99);

assign dstval_V_2_fu_650_p3 = ((tmp_92_fu_642_p3[0:0] == 1'b1) ? 32'd0 : finalmul_V_1_fu_632_p4);

assign dstval_V_3_fu_728_p3 = ((tmp_94_fu_720_p3[0:0] == 1'b1) ? 32'd0 : finalmul_V_2_fu_710_p4);

assign dstval_V_4_fu_806_p3 = ((tmp_96_fu_798_p3[0:0] == 1'b1) ? 32'd0 : finalmul_V_3_fu_788_p4);

assign dstval_V_5_fu_884_p3 = ((tmp_98_fu_876_p3[0:0] == 1'b1) ? 32'd0 : finalmul_V_4_fu_866_p4);

assign dstval_V_6_fu_962_p3 = ((tmp_100_fu_954_p3[0:0] == 1'b1) ? 32'd0 : finalmul_V_5_fu_944_p4);

assign dstval_V_fu_572_p3 = ((tmp_fu_564_p3[0:0] == 1'b1) ? 32'd0 : finalmul_V_fu_554_p4);

assign finalmul_V_1_fu_632_p4 = {{r_V_31_fu_626_p2[61:30]}};

assign finalmul_V_2_fu_710_p4 = {{r_V_34_fu_704_p2[61:30]}};

assign finalmul_V_3_fu_788_p4 = {{r_V_37_fu_782_p2[61:30]}};

assign finalmul_V_4_fu_866_p4 = {{r_V_40_fu_860_p2[61:30]}};

assign finalmul_V_5_fu_944_p4 = {{r_V_43_fu_938_p2[61:30]}};

assign finalmul_V_fu_554_p4 = {{r_V_28_fu_548_p2[61:30]}};

assign icmp_ln377_fu_195_p2 = ((ap_sig_allocacmp_col_V_3 == tmp_61) ? 1'b1 : 1'b0);

assign icmp_ln52_1_fu_668_p2 = (($signed(tmp_93_fu_658_p4) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln52_2_fu_746_p2 = (($signed(tmp_95_fu_736_p4) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln52_3_fu_824_p2 = (($signed(tmp_97_fu_814_p4) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln52_4_fu_902_p2 = (($signed(tmp_99_fu_892_p4) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln52_5_fu_980_p2 = (($signed(tmp_101_fu_970_p4) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln52_fu_590_p2 = (($signed(tmp_91_fu_580_p4) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign ltm_in_4199_din = {{{{{{select_ln315_12_fu_990_p3}, {select_ln315_11_fu_912_p3}}, {select_ln315_10_fu_834_p3}}, {select_ln315_9_fu_756_p3}}, {select_ln315_8_fu_678_p3}}, {select_ln315_fu_600_p3}};

assign r_V_27_fu_280_p0 = conv7_i99_cast_reg_1052;

assign r_V_28_fu_548_p2 = ($signed(shl_ln4_fu_530_p3) - $signed(sext_ln1171_fu_544_p1));

assign r_V_30_fu_325_p0 = conv7_i99_1_cast_reg_1046;

assign r_V_31_fu_626_p2 = ($signed(shl_ln1171_5_fu_608_p3) - $signed(sext_ln1171_1_fu_622_p1));

assign r_V_33_fu_370_p0 = conv7_i99_2_cast_reg_1040;

assign r_V_34_fu_704_p2 = ($signed(shl_ln1171_7_fu_686_p3) - $signed(sext_ln1171_2_fu_700_p1));

assign r_V_36_fu_415_p0 = conv7_i99_cast_reg_1052;

assign r_V_37_fu_782_p2 = ($signed(shl_ln1171_9_fu_764_p3) - $signed(sext_ln1171_3_fu_778_p1));

assign r_V_39_fu_460_p0 = conv7_i99_1_cast_reg_1046;

assign r_V_40_fu_860_p2 = ($signed(shl_ln1171_1_fu_842_p3) - $signed(sext_ln1171_4_fu_856_p1));

assign r_V_42_fu_505_p0 = conv7_i99_2_cast_reg_1040;

assign r_V_43_fu_938_p2 = ($signed(shl_ln1171_3_fu_920_p3) - $signed(sext_ln1171_5_fu_934_p1));

assign select_ln315_10_fu_834_p3 = ((icmp_ln52_3_fu_824_p2[0:0] == 1'b1) ? 16'd65535 : trunc_ln315_13_fu_830_p1);

assign select_ln315_11_fu_912_p3 = ((icmp_ln52_4_fu_902_p2[0:0] == 1'b1) ? 16'd65535 : trunc_ln315_14_fu_908_p1);

assign select_ln315_12_fu_990_p3 = ((icmp_ln52_5_fu_980_p2[0:0] == 1'b1) ? 16'd65535 : trunc_ln315_15_fu_986_p1);

assign select_ln315_8_fu_678_p3 = ((icmp_ln52_1_fu_668_p2[0:0] == 1'b1) ? 16'd65535 : trunc_ln315_11_fu_674_p1);

assign select_ln315_9_fu_756_p3 = ((icmp_ln52_2_fu_746_p2[0:0] == 1'b1) ? 16'd65535 : trunc_ln315_12_fu_752_p1);

assign select_ln315_fu_600_p3 = ((icmp_ln52_fu_590_p2[0:0] == 1'b1) ? 16'd65535 : trunc_ln315_fu_596_p1);

assign sext_ln1171_1_fu_622_p1 = $signed(shl_ln1171_6_fu_615_p3);

assign sext_ln1171_2_fu_700_p1 = $signed(shl_ln1171_8_fu_693_p3);

assign sext_ln1171_3_fu_778_p1 = $signed(shl_ln1171_s_fu_771_p3);

assign sext_ln1171_4_fu_856_p1 = $signed(shl_ln1171_2_fu_849_p3);

assign sext_ln1171_5_fu_934_p1 = $signed(shl_ln1171_10_fu_927_p3);

assign sext_ln1171_fu_544_p1 = $signed(shl_ln1171_4_fu_537_p3);

assign shl_ln1171_10_fu_927_p3 = {{tmp_64_reg_1147}, {6'd0}};

assign shl_ln1171_1_fu_842_p3 = {{tmp_59_reg_1132}, {22'd0}};

assign shl_ln1171_2_fu_849_p3 = {{tmp_60_reg_1137}, {6'd0}};

assign shl_ln1171_3_fu_920_p3 = {{tmp_63_reg_1142}, {22'd0}};

assign shl_ln1171_4_fu_537_p3 = {{tmp_48_reg_1097}, {6'd0}};

assign shl_ln1171_5_fu_608_p3 = {{tmp_50_reg_1102}, {22'd0}};

assign shl_ln1171_6_fu_615_p3 = {{tmp_51_reg_1107}, {6'd0}};

assign shl_ln1171_7_fu_686_p3 = {{tmp_53_reg_1112}, {22'd0}};

assign shl_ln1171_8_fu_693_p3 = {{tmp_54_reg_1117}, {6'd0}};

assign shl_ln1171_9_fu_764_p3 = {{tmp_56_reg_1122}, {22'd0}};

assign shl_ln1171_s_fu_771_p3 = {{tmp_57_reg_1127}, {6'd0}};

assign shl_ln4_fu_530_p3 = {{tmp_s_reg_1092}, {22'd0}};

assign shl_ln712_1_fu_305_p3 = {{tmp_49_reg_1067}, {6'd0}};

assign shl_ln712_2_fu_350_p3 = {{tmp_52_reg_1072}, {6'd0}};

assign shl_ln712_3_fu_395_p3 = {{tmp_55_reg_1077}, {6'd0}};

assign shl_ln712_4_fu_440_p3 = {{tmp_58_reg_1082}, {6'd0}};

assign shl_ln712_5_fu_485_p3 = {{tmp_62_reg_1087}, {6'd0}};

assign shl_ln_fu_260_p3 = {{trunc_ln712_reg_1062}, {6'd0}};

assign tmp_100_fu_954_p3 = r_V_43_fu_938_p2[32'd61];

assign tmp_101_fu_970_p4 = {{dstval_V_6_fu_962_p3[31:16]}};

assign tmp_91_fu_580_p4 = {{dstval_V_fu_572_p3[31:16]}};

assign tmp_92_fu_642_p3 = r_V_31_fu_626_p2[32'd61];

assign tmp_93_fu_658_p4 = {{dstval_V_2_fu_650_p3[31:16]}};

assign tmp_94_fu_720_p3 = r_V_34_fu_704_p2[32'd61];

assign tmp_95_fu_736_p4 = {{dstval_V_3_fu_728_p3[31:16]}};

assign tmp_96_fu_798_p3 = r_V_37_fu_782_p2[32'd61];

assign tmp_97_fu_814_p4 = {{dstval_V_4_fu_806_p3[31:16]}};

assign tmp_98_fu_876_p3 = r_V_40_fu_860_p2[32'd61];

assign tmp_99_fu_892_p4 = {{dstval_V_5_fu_884_p3[31:16]}};

assign tmp_fu_564_p3 = r_V_28_fu_548_p2[32'd61];

assign trunc_ln315_11_fu_674_p1 = dstval_V_2_fu_650_p3[15:0];

assign trunc_ln315_12_fu_752_p1 = dstval_V_3_fu_728_p3[15:0];

assign trunc_ln315_13_fu_830_p1 = dstval_V_4_fu_806_p3[15:0];

assign trunc_ln315_14_fu_908_p1 = dstval_V_5_fu_884_p3[15:0];

assign trunc_ln315_15_fu_986_p1 = dstval_V_6_fu_962_p3[15:0];

assign trunc_ln315_fu_596_p1 = dstval_V_fu_572_p3[15:0];

assign trunc_ln712_fu_206_p1 = impop_41_dout[15:0];

assign value_V_1_fu_316_p2 = (zext_ln712_1_fu_312_p1 - minValue_V_load_1);

assign value_V_2_fu_361_p2 = (zext_ln712_2_fu_357_p1 - minValue_V_load_2);

assign value_V_3_fu_406_p2 = (zext_ln712_3_fu_402_p1 - minValue_V_load);

assign value_V_4_fu_451_p2 = (zext_ln712_4_fu_447_p1 - minValue_V_load_1);

assign value_V_5_fu_496_p2 = (zext_ln712_5_fu_492_p1 - minValue_V_load_2);

assign value_V_fu_271_p2 = (zext_ln712_fu_267_p1 - minValue_V_load);

assign zext_ln712_1_fu_312_p1 = shl_ln712_1_fu_305_p3;

assign zext_ln712_2_fu_357_p1 = shl_ln712_2_fu_350_p3;

assign zext_ln712_3_fu_402_p1 = shl_ln712_3_fu_395_p3;

assign zext_ln712_4_fu_447_p1 = shl_ln712_4_fu_440_p3;

assign zext_ln712_5_fu_492_p1 = shl_ln712_5_fu_485_p3;

assign zext_ln712_fu_267_p1 = shl_ln_fu_260_p3;

endmodule //ISPPipeline_accel_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_Col_Loop1
