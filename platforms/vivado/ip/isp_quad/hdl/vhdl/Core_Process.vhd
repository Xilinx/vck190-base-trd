-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.2
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity Core_Process is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    imgblock_0_0_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
    imgblock_0_1_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
    imgblock_0_2_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
    imgblock_0_3_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
    imgblock_0_4_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
    imgblock_0_5_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
    imgblock_1_0_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
    imgblock_1_1_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
    imgblock_1_2_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
    imgblock_1_3_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
    imgblock_1_4_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
    imgblock_1_5_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
    imgblock_2_0_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
    imgblock_2_1_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
    imgblock_2_2_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
    imgblock_2_3_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
    imgblock_2_4_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
    imgblock_2_5_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
    imgblock_3_0_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
    imgblock_3_1_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
    imgblock_3_2_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
    imgblock_3_3_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
    imgblock_3_4_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
    imgblock_3_5_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
    imgblock_4_0_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
    imgblock_4_1_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
    imgblock_4_2_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
    imgblock_4_3_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
    imgblock_4_4_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
    imgblock_4_5_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
    row : IN STD_LOGIC_VECTOR (15 downto 0);
    col : IN STD_LOGIC_VECTOR (15 downto 0);
    loop_r : IN STD_LOGIC_VECTOR (0 downto 0);
    ap_return_0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_2 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_ce : IN STD_LOGIC );
end;


architecture behav of Core_Process is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";

    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal trunc_ln189_fu_597_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln189_reg_1019 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln189_reg_1019_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln189_reg_1019_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln190_fu_601_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln190_reg_1023 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln190_reg_1023_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln190_reg_1023_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_60_fu_617_p8 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_60_reg_1027 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_60_reg_1027_pp0_iter1_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_60_reg_1027_pp0_iter2_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_59_fu_647_p8 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_59_reg_1032 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_59_reg_1032_pp0_iter1_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_59_reg_1032_pp0_iter2_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_58_fu_677_p8 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_58_reg_1037 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_58_reg_1037_pp0_iter1_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_58_reg_1037_pp0_iter2_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_57_fu_707_p8 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_57_reg_1042 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_57_reg_1042_pp0_iter1_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_57_reg_1042_pp0_iter2_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_rgb_bgr_kernel_fu_325_ap_return : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_rgb_bgr_kernel_fu_325_ap_ce : STD_LOGIC;
    signal ap_predicate_op42_call_state1 : BOOLEAN;
    signal ap_predicate_op62_call_state1 : BOOLEAN;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call0 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call0 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call0 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp42 : BOOLEAN;
    signal grp_rgr_bgb_kernel_fu_393_ap_return : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_rgr_bgb_kernel_fu_393_ap_ce : STD_LOGIC;
    signal ap_predicate_op46_call_state1 : BOOLEAN;
    signal ap_predicate_op58_call_state1 : BOOLEAN;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call5 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call5 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call5 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call5 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp46 : BOOLEAN;
    signal grp_rb_kernel_fu_461_ap_return : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_rb_kernel_fu_461_ap_ce : STD_LOGIC;
    signal ap_predicate_op51_call_state1 : BOOLEAN;
    signal ap_predicate_op57_call_state1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp51 : BOOLEAN;
    signal grp_g_kernel_ap_uint_6_s_fu_529_ap_return : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_g_kernel_ap_uint_6_s_fu_529_ap_ce : STD_LOGIC;
    signal ap_predicate_op50_call_state1 : BOOLEAN;
    signal ap_predicate_op56_call_state1 : BOOLEAN;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call4 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call4 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call4 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call4 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp50 : BOOLEAN;
    signal ap_phi_mux_b_write_assign_phi_fu_289_p8 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_phi_reg_pp0_iter3_b_write_assign_reg_286 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln202_fu_733_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_phi_mux_g_write_assign_phi_fu_302_p8 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln193_fu_725_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_phi_reg_pp0_iter3_g_write_assign_reg_299 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln207_fu_737_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_phi_mux_r_write_assign_phi_fu_315_p8 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_phi_reg_pp0_iter3_r_write_assign_reg_312 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln196_fu_729_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal or_ln544_3_fu_605_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_60_fu_617_p7 : STD_LOGIC_VECTOR (2 downto 0);
    signal or_ln544_2_fu_635_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_59_fu_647_p7 : STD_LOGIC_VECTOR (2 downto 0);
    signal or_ln544_1_fu_665_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_58_fu_677_p7 : STD_LOGIC_VECTOR (2 downto 0);
    signal or_ln_fu_695_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_57_fu_707_p7 : STD_LOGIC_VECTOR (2 downto 0);
    signal sext_ln121_fu_741_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln121_1_fu_745_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln121_2_fu_749_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_ce_reg : STD_LOGIC;
    signal imgblock_0_0_V_read_int_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal imgblock_0_1_V_read_int_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal imgblock_0_2_V_read_int_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal imgblock_0_3_V_read_int_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal imgblock_0_4_V_read_int_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal imgblock_0_5_V_read_int_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal imgblock_1_0_V_read_int_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal imgblock_1_1_V_read_int_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal imgblock_1_2_V_read_int_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal imgblock_1_3_V_read_int_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal imgblock_1_4_V_read_int_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal imgblock_1_5_V_read_int_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal imgblock_2_0_V_read_int_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal imgblock_2_1_V_read_int_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal imgblock_2_2_V_read_int_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal imgblock_2_3_V_read_int_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal imgblock_2_4_V_read_int_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal imgblock_2_5_V_read_int_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal imgblock_3_0_V_read_int_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal imgblock_3_1_V_read_int_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal imgblock_3_2_V_read_int_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal imgblock_3_3_V_read_int_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal imgblock_3_4_V_read_int_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal imgblock_3_5_V_read_int_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal imgblock_4_0_V_read_int_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal imgblock_4_1_V_read_int_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal imgblock_4_2_V_read_int_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal imgblock_4_3_V_read_int_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal imgblock_4_4_V_read_int_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal imgblock_4_5_V_read_int_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal row_int_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal col_int_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal loop_r_int_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_return_0_int_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_return_1_int_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_return_2_int_reg : STD_LOGIC_VECTOR (31 downto 0);

    component rgb_bgr_kernel IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        imgblock_0_0_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
        imgblock_0_1_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
        imgblock_0_2_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
        imgblock_0_3_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
        imgblock_0_4_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
        imgblock_0_5_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
        imgblock_1_0_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
        imgblock_1_1_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
        imgblock_1_2_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
        imgblock_1_3_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
        imgblock_1_4_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
        imgblock_1_5_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
        imgblock_2_0_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
        imgblock_2_1_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
        imgblock_2_2_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
        imgblock_2_3_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
        imgblock_2_4_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
        imgblock_2_5_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
        imgblock_3_0_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
        imgblock_3_1_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
        imgblock_3_2_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
        imgblock_3_3_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
        imgblock_3_4_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
        imgblock_3_5_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
        imgblock_4_0_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
        imgblock_4_1_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
        imgblock_4_2_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
        imgblock_4_3_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
        imgblock_4_4_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
        imgblock_4_5_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
        loop_r : IN STD_LOGIC_VECTOR (0 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (13 downto 0);
        ap_ce : IN STD_LOGIC );
    end component;


    component rgr_bgb_kernel IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        imgblock_0_0_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
        imgblock_0_1_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
        imgblock_0_2_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
        imgblock_0_3_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
        imgblock_0_4_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
        imgblock_0_5_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
        imgblock_1_0_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
        imgblock_1_1_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
        imgblock_1_2_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
        imgblock_1_3_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
        imgblock_1_4_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
        imgblock_1_5_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
        imgblock_2_0_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
        imgblock_2_1_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
        imgblock_2_2_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
        imgblock_2_3_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
        imgblock_2_4_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
        imgblock_2_5_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
        imgblock_3_0_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
        imgblock_3_1_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
        imgblock_3_2_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
        imgblock_3_3_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
        imgblock_3_4_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
        imgblock_3_5_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
        imgblock_4_0_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
        imgblock_4_1_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
        imgblock_4_2_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
        imgblock_4_3_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
        imgblock_4_4_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
        imgblock_4_5_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
        loop_r : IN STD_LOGIC_VECTOR (0 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (13 downto 0);
        ap_ce : IN STD_LOGIC );
    end component;


    component rb_kernel IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        imgblock_0_0_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
        imgblock_0_1_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
        imgblock_0_2_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
        imgblock_0_3_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
        imgblock_0_4_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
        imgblock_0_5_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
        imgblock_1_0_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
        imgblock_1_1_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
        imgblock_1_2_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
        imgblock_1_3_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
        imgblock_1_4_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
        imgblock_1_5_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
        imgblock_2_0_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
        imgblock_2_1_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
        imgblock_2_2_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
        imgblock_2_3_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
        imgblock_2_4_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
        imgblock_2_5_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
        imgblock_3_0_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
        imgblock_3_1_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
        imgblock_3_2_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
        imgblock_3_3_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
        imgblock_3_4_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
        imgblock_3_5_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
        imgblock_4_0_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
        imgblock_4_1_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
        imgblock_4_2_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
        imgblock_4_3_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
        imgblock_4_4_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
        imgblock_4_5_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
        loop_r : IN STD_LOGIC_VECTOR (0 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (13 downto 0);
        ap_ce : IN STD_LOGIC );
    end component;


    component g_kernel_ap_uint_6_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        imgblock_0_0_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
        imgblock_0_1_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
        imgblock_0_2_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
        imgblock_0_3_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
        imgblock_0_4_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
        imgblock_0_5_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
        imgblock_1_0_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
        imgblock_1_1_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
        imgblock_1_2_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
        imgblock_1_3_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
        imgblock_1_4_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
        imgblock_1_5_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
        imgblock_2_0_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
        imgblock_2_1_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
        imgblock_2_2_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
        imgblock_2_3_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
        imgblock_2_4_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
        imgblock_2_5_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
        imgblock_3_0_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
        imgblock_3_1_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
        imgblock_3_2_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
        imgblock_3_3_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
        imgblock_3_4_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
        imgblock_3_5_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
        imgblock_4_0_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
        imgblock_4_1_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
        imgblock_4_2_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
        imgblock_4_3_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
        imgblock_4_4_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
        imgblock_4_5_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
        loop_r : IN STD_LOGIC_VECTOR (0 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (13 downto 0);
        ap_ce : IN STD_LOGIC );
    end component;


    component ISPPipeline_accelkbM IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (9 downto 0);
        din1 : IN STD_LOGIC_VECTOR (9 downto 0);
        din2 : IN STD_LOGIC_VECTOR (9 downto 0);
        din3 : IN STD_LOGIC_VECTOR (9 downto 0);
        din4 : IN STD_LOGIC_VECTOR (9 downto 0);
        din5 : IN STD_LOGIC_VECTOR (9 downto 0);
        din6 : IN STD_LOGIC_VECTOR (2 downto 0);
        dout : OUT STD_LOGIC_VECTOR (9 downto 0) );
    end component;



begin
    grp_rgb_bgr_kernel_fu_325 : component rgb_bgr_kernel
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        imgblock_0_0_V_read => imgblock_0_0_V_read_int_reg,
        imgblock_0_1_V_read => imgblock_0_1_V_read_int_reg,
        imgblock_0_2_V_read => imgblock_0_2_V_read_int_reg,
        imgblock_0_3_V_read => imgblock_0_3_V_read_int_reg,
        imgblock_0_4_V_read => imgblock_0_4_V_read_int_reg,
        imgblock_0_5_V_read => imgblock_0_5_V_read_int_reg,
        imgblock_1_0_V_read => imgblock_1_0_V_read_int_reg,
        imgblock_1_1_V_read => imgblock_1_1_V_read_int_reg,
        imgblock_1_2_V_read => imgblock_1_2_V_read_int_reg,
        imgblock_1_3_V_read => imgblock_1_3_V_read_int_reg,
        imgblock_1_4_V_read => imgblock_1_4_V_read_int_reg,
        imgblock_1_5_V_read => imgblock_1_5_V_read_int_reg,
        imgblock_2_0_V_read => imgblock_2_0_V_read_int_reg,
        imgblock_2_1_V_read => imgblock_2_1_V_read_int_reg,
        imgblock_2_2_V_read => imgblock_2_2_V_read_int_reg,
        imgblock_2_3_V_read => imgblock_2_3_V_read_int_reg,
        imgblock_2_4_V_read => imgblock_2_4_V_read_int_reg,
        imgblock_2_5_V_read => imgblock_2_5_V_read_int_reg,
        imgblock_3_0_V_read => imgblock_3_0_V_read_int_reg,
        imgblock_3_1_V_read => imgblock_3_1_V_read_int_reg,
        imgblock_3_2_V_read => imgblock_3_2_V_read_int_reg,
        imgblock_3_3_V_read => imgblock_3_3_V_read_int_reg,
        imgblock_3_4_V_read => imgblock_3_4_V_read_int_reg,
        imgblock_3_5_V_read => imgblock_3_5_V_read_int_reg,
        imgblock_4_0_V_read => imgblock_4_0_V_read_int_reg,
        imgblock_4_1_V_read => imgblock_4_1_V_read_int_reg,
        imgblock_4_2_V_read => imgblock_4_2_V_read_int_reg,
        imgblock_4_3_V_read => imgblock_4_3_V_read_int_reg,
        imgblock_4_4_V_read => imgblock_4_4_V_read_int_reg,
        imgblock_4_5_V_read => imgblock_4_5_V_read_int_reg,
        loop_r => loop_r_int_reg,
        ap_return => grp_rgb_bgr_kernel_fu_325_ap_return,
        ap_ce => grp_rgb_bgr_kernel_fu_325_ap_ce);

    grp_rgr_bgb_kernel_fu_393 : component rgr_bgb_kernel
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        imgblock_0_0_V_read => imgblock_0_0_V_read_int_reg,
        imgblock_0_1_V_read => imgblock_0_1_V_read_int_reg,
        imgblock_0_2_V_read => imgblock_0_2_V_read_int_reg,
        imgblock_0_3_V_read => imgblock_0_3_V_read_int_reg,
        imgblock_0_4_V_read => imgblock_0_4_V_read_int_reg,
        imgblock_0_5_V_read => imgblock_0_5_V_read_int_reg,
        imgblock_1_0_V_read => imgblock_1_0_V_read_int_reg,
        imgblock_1_1_V_read => imgblock_1_1_V_read_int_reg,
        imgblock_1_2_V_read => imgblock_1_2_V_read_int_reg,
        imgblock_1_3_V_read => imgblock_1_3_V_read_int_reg,
        imgblock_1_4_V_read => imgblock_1_4_V_read_int_reg,
        imgblock_1_5_V_read => imgblock_1_5_V_read_int_reg,
        imgblock_2_0_V_read => imgblock_2_0_V_read_int_reg,
        imgblock_2_1_V_read => imgblock_2_1_V_read_int_reg,
        imgblock_2_2_V_read => imgblock_2_2_V_read_int_reg,
        imgblock_2_3_V_read => imgblock_2_3_V_read_int_reg,
        imgblock_2_4_V_read => imgblock_2_4_V_read_int_reg,
        imgblock_2_5_V_read => imgblock_2_5_V_read_int_reg,
        imgblock_3_0_V_read => imgblock_3_0_V_read_int_reg,
        imgblock_3_1_V_read => imgblock_3_1_V_read_int_reg,
        imgblock_3_2_V_read => imgblock_3_2_V_read_int_reg,
        imgblock_3_3_V_read => imgblock_3_3_V_read_int_reg,
        imgblock_3_4_V_read => imgblock_3_4_V_read_int_reg,
        imgblock_3_5_V_read => imgblock_3_5_V_read_int_reg,
        imgblock_4_0_V_read => imgblock_4_0_V_read_int_reg,
        imgblock_4_1_V_read => imgblock_4_1_V_read_int_reg,
        imgblock_4_2_V_read => imgblock_4_2_V_read_int_reg,
        imgblock_4_3_V_read => imgblock_4_3_V_read_int_reg,
        imgblock_4_4_V_read => imgblock_4_4_V_read_int_reg,
        imgblock_4_5_V_read => imgblock_4_5_V_read_int_reg,
        loop_r => loop_r_int_reg,
        ap_return => grp_rgr_bgb_kernel_fu_393_ap_return,
        ap_ce => grp_rgr_bgb_kernel_fu_393_ap_ce);

    grp_rb_kernel_fu_461 : component rb_kernel
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        imgblock_0_0_V_read => imgblock_0_0_V_read_int_reg,
        imgblock_0_1_V_read => imgblock_0_1_V_read_int_reg,
        imgblock_0_2_V_read => imgblock_0_2_V_read_int_reg,
        imgblock_0_3_V_read => imgblock_0_3_V_read_int_reg,
        imgblock_0_4_V_read => imgblock_0_4_V_read_int_reg,
        imgblock_0_5_V_read => imgblock_0_5_V_read_int_reg,
        imgblock_1_0_V_read => imgblock_1_0_V_read_int_reg,
        imgblock_1_1_V_read => imgblock_1_1_V_read_int_reg,
        imgblock_1_2_V_read => imgblock_1_2_V_read_int_reg,
        imgblock_1_3_V_read => imgblock_1_3_V_read_int_reg,
        imgblock_1_4_V_read => imgblock_1_4_V_read_int_reg,
        imgblock_1_5_V_read => imgblock_1_5_V_read_int_reg,
        imgblock_2_0_V_read => imgblock_2_0_V_read_int_reg,
        imgblock_2_1_V_read => imgblock_2_1_V_read_int_reg,
        imgblock_2_2_V_read => imgblock_2_2_V_read_int_reg,
        imgblock_2_3_V_read => imgblock_2_3_V_read_int_reg,
        imgblock_2_4_V_read => imgblock_2_4_V_read_int_reg,
        imgblock_2_5_V_read => imgblock_2_5_V_read_int_reg,
        imgblock_3_0_V_read => imgblock_3_0_V_read_int_reg,
        imgblock_3_1_V_read => imgblock_3_1_V_read_int_reg,
        imgblock_3_2_V_read => imgblock_3_2_V_read_int_reg,
        imgblock_3_3_V_read => imgblock_3_3_V_read_int_reg,
        imgblock_3_4_V_read => imgblock_3_4_V_read_int_reg,
        imgblock_3_5_V_read => imgblock_3_5_V_read_int_reg,
        imgblock_4_0_V_read => imgblock_4_0_V_read_int_reg,
        imgblock_4_1_V_read => imgblock_4_1_V_read_int_reg,
        imgblock_4_2_V_read => imgblock_4_2_V_read_int_reg,
        imgblock_4_3_V_read => imgblock_4_3_V_read_int_reg,
        imgblock_4_4_V_read => imgblock_4_4_V_read_int_reg,
        imgblock_4_5_V_read => imgblock_4_5_V_read_int_reg,
        loop_r => loop_r_int_reg,
        ap_return => grp_rb_kernel_fu_461_ap_return,
        ap_ce => grp_rb_kernel_fu_461_ap_ce);

    grp_g_kernel_ap_uint_6_s_fu_529 : component g_kernel_ap_uint_6_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        imgblock_0_0_V_read => imgblock_0_0_V_read_int_reg,
        imgblock_0_1_V_read => imgblock_0_1_V_read_int_reg,
        imgblock_0_2_V_read => imgblock_0_2_V_read_int_reg,
        imgblock_0_3_V_read => imgblock_0_3_V_read_int_reg,
        imgblock_0_4_V_read => imgblock_0_4_V_read_int_reg,
        imgblock_0_5_V_read => imgblock_0_5_V_read_int_reg,
        imgblock_1_0_V_read => imgblock_1_0_V_read_int_reg,
        imgblock_1_1_V_read => imgblock_1_1_V_read_int_reg,
        imgblock_1_2_V_read => imgblock_1_2_V_read_int_reg,
        imgblock_1_3_V_read => imgblock_1_3_V_read_int_reg,
        imgblock_1_4_V_read => imgblock_1_4_V_read_int_reg,
        imgblock_1_5_V_read => imgblock_1_5_V_read_int_reg,
        imgblock_2_0_V_read => imgblock_2_0_V_read_int_reg,
        imgblock_2_1_V_read => imgblock_2_1_V_read_int_reg,
        imgblock_2_2_V_read => imgblock_2_2_V_read_int_reg,
        imgblock_2_3_V_read => imgblock_2_3_V_read_int_reg,
        imgblock_2_4_V_read => imgblock_2_4_V_read_int_reg,
        imgblock_2_5_V_read => imgblock_2_5_V_read_int_reg,
        imgblock_3_0_V_read => imgblock_3_0_V_read_int_reg,
        imgblock_3_1_V_read => imgblock_3_1_V_read_int_reg,
        imgblock_3_2_V_read => imgblock_3_2_V_read_int_reg,
        imgblock_3_3_V_read => imgblock_3_3_V_read_int_reg,
        imgblock_3_4_V_read => imgblock_3_4_V_read_int_reg,
        imgblock_3_5_V_read => imgblock_3_5_V_read_int_reg,
        imgblock_4_0_V_read => imgblock_4_0_V_read_int_reg,
        imgblock_4_1_V_read => imgblock_4_1_V_read_int_reg,
        imgblock_4_2_V_read => imgblock_4_2_V_read_int_reg,
        imgblock_4_3_V_read => imgblock_4_3_V_read_int_reg,
        imgblock_4_4_V_read => imgblock_4_4_V_read_int_reg,
        imgblock_4_5_V_read => imgblock_4_5_V_read_int_reg,
        loop_r => loop_r_int_reg,
        ap_return => grp_g_kernel_ap_uint_6_s_fu_529_ap_return,
        ap_ce => grp_g_kernel_ap_uint_6_s_fu_529_ap_ce);

    ISPPipeline_accelkbM_U263 : component ISPPipeline_accelkbM
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 10,
        din2_WIDTH => 10,
        din3_WIDTH => 10,
        din4_WIDTH => 10,
        din5_WIDTH => 10,
        din6_WIDTH => 3,
        dout_WIDTH => 10)
    port map (
        din0 => imgblock_2_0_V_read_int_reg,
        din1 => imgblock_2_1_V_read_int_reg,
        din2 => imgblock_2_2_V_read_int_reg,
        din3 => imgblock_2_3_V_read_int_reg,
        din4 => imgblock_2_4_V_read_int_reg,
        din5 => imgblock_2_5_V_read_int_reg,
        din6 => tmp_60_fu_617_p7,
        dout => tmp_60_fu_617_p8);

    ISPPipeline_accelkbM_U264 : component ISPPipeline_accelkbM
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 10,
        din2_WIDTH => 10,
        din3_WIDTH => 10,
        din4_WIDTH => 10,
        din5_WIDTH => 10,
        din6_WIDTH => 3,
        dout_WIDTH => 10)
    port map (
        din0 => imgblock_2_0_V_read_int_reg,
        din1 => imgblock_2_1_V_read_int_reg,
        din2 => imgblock_2_2_V_read_int_reg,
        din3 => imgblock_2_3_V_read_int_reg,
        din4 => imgblock_2_4_V_read_int_reg,
        din5 => imgblock_2_5_V_read_int_reg,
        din6 => tmp_59_fu_647_p7,
        dout => tmp_59_fu_647_p8);

    ISPPipeline_accelkbM_U265 : component ISPPipeline_accelkbM
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 10,
        din2_WIDTH => 10,
        din3_WIDTH => 10,
        din4_WIDTH => 10,
        din5_WIDTH => 10,
        din6_WIDTH => 3,
        dout_WIDTH => 10)
    port map (
        din0 => imgblock_2_0_V_read_int_reg,
        din1 => imgblock_2_1_V_read_int_reg,
        din2 => imgblock_2_2_V_read_int_reg,
        din3 => imgblock_2_3_V_read_int_reg,
        din4 => imgblock_2_4_V_read_int_reg,
        din5 => imgblock_2_5_V_read_int_reg,
        din6 => tmp_58_fu_677_p7,
        dout => tmp_58_fu_677_p8);

    ISPPipeline_accelkbM_U266 : component ISPPipeline_accelkbM
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 10,
        din2_WIDTH => 10,
        din3_WIDTH => 10,
        din4_WIDTH => 10,
        din5_WIDTH => 10,
        din6_WIDTH => 3,
        dout_WIDTH => 10)
    port map (
        din0 => imgblock_2_0_V_read_int_reg,
        din1 => imgblock_2_1_V_read_int_reg,
        din2 => imgblock_2_2_V_read_int_reg,
        din3 => imgblock_2_3_V_read_int_reg,
        din4 => imgblock_2_4_V_read_int_reg,
        din5 => imgblock_2_5_V_read_int_reg,
        din6 => tmp_57_fu_707_p7,
        dout => tmp_57_fu_707_p8);





    ap_ce_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            ap_ce_reg <= ap_ce;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_ce_reg)) then
                ap_return_0_int_reg <= sext_ln121_fu_741_p1;
                ap_return_1_int_reg <= sext_ln121_1_fu_745_p1;
                ap_return_2_int_reg <= sext_ln121_2_fu_749_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_ce)) then
                col_int_reg <= col;
                imgblock_0_0_V_read_int_reg <= imgblock_0_0_V_read;
                imgblock_0_1_V_read_int_reg <= imgblock_0_1_V_read;
                imgblock_0_2_V_read_int_reg <= imgblock_0_2_V_read;
                imgblock_0_3_V_read_int_reg <= imgblock_0_3_V_read;
                imgblock_0_4_V_read_int_reg <= imgblock_0_4_V_read;
                imgblock_0_5_V_read_int_reg <= imgblock_0_5_V_read;
                imgblock_1_0_V_read_int_reg <= imgblock_1_0_V_read;
                imgblock_1_1_V_read_int_reg <= imgblock_1_1_V_read;
                imgblock_1_2_V_read_int_reg <= imgblock_1_2_V_read;
                imgblock_1_3_V_read_int_reg <= imgblock_1_3_V_read;
                imgblock_1_4_V_read_int_reg <= imgblock_1_4_V_read;
                imgblock_1_5_V_read_int_reg <= imgblock_1_5_V_read;
                imgblock_2_0_V_read_int_reg <= imgblock_2_0_V_read;
                imgblock_2_1_V_read_int_reg <= imgblock_2_1_V_read;
                imgblock_2_2_V_read_int_reg <= imgblock_2_2_V_read;
                imgblock_2_3_V_read_int_reg <= imgblock_2_3_V_read;
                imgblock_2_4_V_read_int_reg <= imgblock_2_4_V_read;
                imgblock_2_5_V_read_int_reg <= imgblock_2_5_V_read;
                imgblock_3_0_V_read_int_reg <= imgblock_3_0_V_read;
                imgblock_3_1_V_read_int_reg <= imgblock_3_1_V_read;
                imgblock_3_2_V_read_int_reg <= imgblock_3_2_V_read;
                imgblock_3_3_V_read_int_reg <= imgblock_3_3_V_read;
                imgblock_3_4_V_read_int_reg <= imgblock_3_4_V_read;
                imgblock_3_5_V_read_int_reg <= imgblock_3_5_V_read;
                imgblock_4_0_V_read_int_reg <= imgblock_4_0_V_read;
                imgblock_4_1_V_read_int_reg <= imgblock_4_1_V_read;
                imgblock_4_2_V_read_int_reg <= imgblock_4_2_V_read;
                imgblock_4_3_V_read_int_reg <= imgblock_4_3_V_read;
                imgblock_4_4_V_read_int_reg <= imgblock_4_4_V_read;
                imgblock_4_5_V_read_int_reg <= imgblock_4_5_V_read;
                loop_r_int_reg <= loop_r;
                row_int_reg <= row;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_ce_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln190_fu_601_p1 = ap_const_lv1_1) and (trunc_ln189_fu_597_p1 = ap_const_lv1_1))) then
                tmp_57_reg_1042 <= tmp_57_fu_707_p8;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_ce_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_57_reg_1042_pp0_iter1_reg <= tmp_57_reg_1042;
                tmp_57_reg_1042_pp0_iter2_reg <= tmp_57_reg_1042_pp0_iter1_reg;
                tmp_58_reg_1037_pp0_iter1_reg <= tmp_58_reg_1037;
                tmp_58_reg_1037_pp0_iter2_reg <= tmp_58_reg_1037_pp0_iter1_reg;
                tmp_59_reg_1032_pp0_iter1_reg <= tmp_59_reg_1032;
                tmp_59_reg_1032_pp0_iter2_reg <= tmp_59_reg_1032_pp0_iter1_reg;
                tmp_60_reg_1027_pp0_iter1_reg <= tmp_60_reg_1027;
                tmp_60_reg_1027_pp0_iter2_reg <= tmp_60_reg_1027_pp0_iter1_reg;
                trunc_ln189_reg_1019 <= trunc_ln189_fu_597_p1;
                trunc_ln189_reg_1019_pp0_iter1_reg <= trunc_ln189_reg_1019;
                trunc_ln189_reg_1019_pp0_iter2_reg <= trunc_ln189_reg_1019_pp0_iter1_reg;
                trunc_ln190_reg_1023 <= trunc_ln190_fu_601_p1;
                trunc_ln190_reg_1023_pp0_iter1_reg <= trunc_ln190_reg_1023;
                trunc_ln190_reg_1023_pp0_iter2_reg <= trunc_ln190_reg_1023_pp0_iter1_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_ce_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln190_fu_601_p1 = ap_const_lv1_0) and (trunc_ln189_fu_597_p1 = ap_const_lv1_1))) then
                tmp_58_reg_1037 <= tmp_58_fu_677_p8;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_ce_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln190_fu_601_p1 = ap_const_lv1_1) and (trunc_ln189_fu_597_p1 = ap_const_lv1_0))) then
                tmp_59_reg_1032 <= tmp_59_fu_647_p8;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_ce_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln190_fu_601_p1 = ap_const_lv1_0) and (trunc_ln189_fu_597_p1 = ap_const_lv1_0))) then
                tmp_60_reg_1027 <= tmp_60_fu_617_p8;
            end if;
        end if;
    end process;
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001_ignoreCallOp42 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001_ignoreCallOp46 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001_ignoreCallOp50 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001_ignoreCallOp51 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0_ignore_call4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0_ignore_call5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call5 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_phi_mux_b_write_assign_phi_fu_289_p8_assign_proc : process(trunc_ln189_reg_1019_pp0_iter2_reg, trunc_ln190_reg_1023_pp0_iter2_reg, grp_rgb_bgr_kernel_fu_325_ap_return, grp_rgr_bgb_kernel_fu_393_ap_return, grp_rb_kernel_fu_461_ap_return, ap_phi_reg_pp0_iter3_b_write_assign_reg_286, zext_ln202_fu_733_p1)
    begin
        if (((trunc_ln190_reg_1023_pp0_iter2_reg = ap_const_lv1_1) and (trunc_ln189_reg_1019_pp0_iter2_reg = ap_const_lv1_1))) then 
            ap_phi_mux_b_write_assign_phi_fu_289_p8 <= grp_rgr_bgb_kernel_fu_393_ap_return;
        elsif (((trunc_ln190_reg_1023_pp0_iter2_reg = ap_const_lv1_0) and (trunc_ln189_reg_1019_pp0_iter2_reg = ap_const_lv1_1))) then 
            ap_phi_mux_b_write_assign_phi_fu_289_p8 <= zext_ln202_fu_733_p1;
        elsif (((trunc_ln190_reg_1023_pp0_iter2_reg = ap_const_lv1_1) and (trunc_ln189_reg_1019_pp0_iter2_reg = ap_const_lv1_0))) then 
            ap_phi_mux_b_write_assign_phi_fu_289_p8 <= grp_rb_kernel_fu_461_ap_return;
        elsif (((trunc_ln190_reg_1023_pp0_iter2_reg = ap_const_lv1_0) and (trunc_ln189_reg_1019_pp0_iter2_reg = ap_const_lv1_0))) then 
            ap_phi_mux_b_write_assign_phi_fu_289_p8 <= grp_rgb_bgr_kernel_fu_325_ap_return;
        else 
            ap_phi_mux_b_write_assign_phi_fu_289_p8 <= ap_phi_reg_pp0_iter3_b_write_assign_reg_286;
        end if; 
    end process;


    ap_phi_mux_g_write_assign_phi_fu_302_p8_assign_proc : process(trunc_ln189_reg_1019_pp0_iter2_reg, trunc_ln190_reg_1023_pp0_iter2_reg, grp_g_kernel_ap_uint_6_s_fu_529_ap_return, zext_ln193_fu_725_p1, ap_phi_reg_pp0_iter3_g_write_assign_reg_299, zext_ln207_fu_737_p1)
    begin
        if (((trunc_ln190_reg_1023_pp0_iter2_reg = ap_const_lv1_1) and (trunc_ln189_reg_1019_pp0_iter2_reg = ap_const_lv1_1))) then 
            ap_phi_mux_g_write_assign_phi_fu_302_p8 <= zext_ln207_fu_737_p1;
        elsif ((((trunc_ln190_reg_1023_pp0_iter2_reg = ap_const_lv1_0) and (trunc_ln189_reg_1019_pp0_iter2_reg = ap_const_lv1_1)) or ((trunc_ln190_reg_1023_pp0_iter2_reg = ap_const_lv1_1) and (trunc_ln189_reg_1019_pp0_iter2_reg = ap_const_lv1_0)))) then 
            ap_phi_mux_g_write_assign_phi_fu_302_p8 <= grp_g_kernel_ap_uint_6_s_fu_529_ap_return;
        elsif (((trunc_ln190_reg_1023_pp0_iter2_reg = ap_const_lv1_0) and (trunc_ln189_reg_1019_pp0_iter2_reg = ap_const_lv1_0))) then 
            ap_phi_mux_g_write_assign_phi_fu_302_p8 <= zext_ln193_fu_725_p1;
        else 
            ap_phi_mux_g_write_assign_phi_fu_302_p8 <= ap_phi_reg_pp0_iter3_g_write_assign_reg_299;
        end if; 
    end process;


    ap_phi_mux_r_write_assign_phi_fu_315_p8_assign_proc : process(trunc_ln189_reg_1019_pp0_iter2_reg, trunc_ln190_reg_1023_pp0_iter2_reg, grp_rgb_bgr_kernel_fu_325_ap_return, grp_rgr_bgb_kernel_fu_393_ap_return, grp_rb_kernel_fu_461_ap_return, ap_phi_reg_pp0_iter3_r_write_assign_reg_312, zext_ln196_fu_729_p1)
    begin
        if (((trunc_ln190_reg_1023_pp0_iter2_reg = ap_const_lv1_1) and (trunc_ln189_reg_1019_pp0_iter2_reg = ap_const_lv1_1))) then 
            ap_phi_mux_r_write_assign_phi_fu_315_p8 <= grp_rgb_bgr_kernel_fu_325_ap_return;
        elsif (((trunc_ln190_reg_1023_pp0_iter2_reg = ap_const_lv1_0) and (trunc_ln189_reg_1019_pp0_iter2_reg = ap_const_lv1_1))) then 
            ap_phi_mux_r_write_assign_phi_fu_315_p8 <= grp_rb_kernel_fu_461_ap_return;
        elsif (((trunc_ln190_reg_1023_pp0_iter2_reg = ap_const_lv1_1) and (trunc_ln189_reg_1019_pp0_iter2_reg = ap_const_lv1_0))) then 
            ap_phi_mux_r_write_assign_phi_fu_315_p8 <= zext_ln196_fu_729_p1;
        elsif (((trunc_ln190_reg_1023_pp0_iter2_reg = ap_const_lv1_0) and (trunc_ln189_reg_1019_pp0_iter2_reg = ap_const_lv1_0))) then 
            ap_phi_mux_r_write_assign_phi_fu_315_p8 <= grp_rgr_bgb_kernel_fu_393_ap_return;
        else 
            ap_phi_mux_r_write_assign_phi_fu_315_p8 <= ap_phi_reg_pp0_iter3_r_write_assign_reg_312;
        end if; 
    end process;

    ap_phi_reg_pp0_iter3_b_write_assign_reg_286 <= "XXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter3_g_write_assign_reg_299 <= "XXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter3_r_write_assign_reg_312 <= "XXXXXXXXXXXXXX";

    ap_predicate_op42_call_state1_assign_proc : process(trunc_ln189_fu_597_p1, trunc_ln190_fu_601_p1)
    begin
                ap_predicate_op42_call_state1 <= ((trunc_ln190_fu_601_p1 = ap_const_lv1_0) and (trunc_ln189_fu_597_p1 = ap_const_lv1_0));
    end process;


    ap_predicate_op46_call_state1_assign_proc : process(trunc_ln189_fu_597_p1, trunc_ln190_fu_601_p1)
    begin
                ap_predicate_op46_call_state1 <= ((trunc_ln190_fu_601_p1 = ap_const_lv1_0) and (trunc_ln189_fu_597_p1 = ap_const_lv1_0));
    end process;


    ap_predicate_op50_call_state1_assign_proc : process(trunc_ln189_fu_597_p1, trunc_ln190_fu_601_p1)
    begin
                ap_predicate_op50_call_state1 <= ((trunc_ln190_fu_601_p1 = ap_const_lv1_1) and (trunc_ln189_fu_597_p1 = ap_const_lv1_0));
    end process;


    ap_predicate_op51_call_state1_assign_proc : process(trunc_ln189_fu_597_p1, trunc_ln190_fu_601_p1)
    begin
                ap_predicate_op51_call_state1 <= ((trunc_ln190_fu_601_p1 = ap_const_lv1_1) and (trunc_ln189_fu_597_p1 = ap_const_lv1_0));
    end process;


    ap_predicate_op56_call_state1_assign_proc : process(trunc_ln189_fu_597_p1, trunc_ln190_fu_601_p1)
    begin
                ap_predicate_op56_call_state1 <= ((trunc_ln190_fu_601_p1 = ap_const_lv1_0) and (trunc_ln189_fu_597_p1 = ap_const_lv1_1));
    end process;


    ap_predicate_op57_call_state1_assign_proc : process(trunc_ln189_fu_597_p1, trunc_ln190_fu_601_p1)
    begin
                ap_predicate_op57_call_state1 <= ((trunc_ln190_fu_601_p1 = ap_const_lv1_0) and (trunc_ln189_fu_597_p1 = ap_const_lv1_1));
    end process;


    ap_predicate_op58_call_state1_assign_proc : process(trunc_ln189_fu_597_p1, trunc_ln190_fu_601_p1)
    begin
                ap_predicate_op58_call_state1 <= ((trunc_ln190_fu_601_p1 = ap_const_lv1_1) and (trunc_ln189_fu_597_p1 = ap_const_lv1_1));
    end process;


    ap_predicate_op62_call_state1_assign_proc : process(trunc_ln189_fu_597_p1, trunc_ln190_fu_601_p1)
    begin
                ap_predicate_op62_call_state1 <= ((trunc_ln190_fu_601_p1 = ap_const_lv1_1) and (trunc_ln189_fu_597_p1 = ap_const_lv1_1));
    end process;


    ap_return_0_assign_proc : process(sext_ln121_fu_741_p1, ap_ce_reg, ap_return_0_int_reg)
    begin
        if ((ap_const_logic_0 = ap_ce_reg)) then 
            ap_return_0 <= ap_return_0_int_reg;
        elsif ((ap_const_logic_1 = ap_ce_reg)) then 
            ap_return_0 <= sext_ln121_fu_741_p1;
        end if; 
    end process;


    ap_return_1_assign_proc : process(sext_ln121_1_fu_745_p1, ap_ce_reg, ap_return_1_int_reg)
    begin
        if ((ap_const_logic_0 = ap_ce_reg)) then 
            ap_return_1 <= ap_return_1_int_reg;
        elsif ((ap_const_logic_1 = ap_ce_reg)) then 
            ap_return_1 <= sext_ln121_1_fu_745_p1;
        end if; 
    end process;


    ap_return_2_assign_proc : process(sext_ln121_2_fu_749_p1, ap_ce_reg, ap_return_2_int_reg)
    begin
        if ((ap_const_logic_0 = ap_ce_reg)) then 
            ap_return_2 <= ap_return_2_int_reg;
        elsif ((ap_const_logic_1 = ap_ce_reg)) then 
            ap_return_2 <= sext_ln121_2_fu_749_p1;
        end if; 
    end process;


    grp_g_kernel_ap_uint_6_s_fu_529_ap_ce_assign_proc : process(ap_block_pp0_stage0_11001_ignoreCallOp50, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp50) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_g_kernel_ap_uint_6_s_fu_529_ap_ce <= ap_const_logic_1;
        else 
            grp_g_kernel_ap_uint_6_s_fu_529_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_rb_kernel_fu_461_ap_ce_assign_proc : process(ap_block_pp0_stage0_11001_ignoreCallOp51, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp51) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_rb_kernel_fu_461_ap_ce <= ap_const_logic_1;
        else 
            grp_rb_kernel_fu_461_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_rgb_bgr_kernel_fu_325_ap_ce_assign_proc : process(ap_block_pp0_stage0_11001_ignoreCallOp42, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp42) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_rgb_bgr_kernel_fu_325_ap_ce <= ap_const_logic_1;
        else 
            grp_rgb_bgr_kernel_fu_325_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_rgr_bgb_kernel_fu_393_ap_ce_assign_proc : process(ap_block_pp0_stage0_11001_ignoreCallOp46, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp46) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_rgr_bgb_kernel_fu_393_ap_ce <= ap_const_logic_1;
        else 
            grp_rgr_bgb_kernel_fu_393_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    or_ln544_1_fu_665_p3 <= (ap_const_lv1_1 & loop_r_int_reg);
    or_ln544_2_fu_635_p3 <= (ap_const_lv1_1 & loop_r_int_reg);
    or_ln544_3_fu_605_p3 <= (ap_const_lv1_1 & loop_r_int_reg);
    or_ln_fu_695_p3 <= (ap_const_lv1_1 & loop_r_int_reg);
        sext_ln121_1_fu_745_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ap_phi_mux_g_write_assign_phi_fu_302_p8),32));

        sext_ln121_2_fu_749_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ap_phi_mux_r_write_assign_phi_fu_315_p8),32));

        sext_ln121_fu_741_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ap_phi_mux_b_write_assign_phi_fu_289_p8),32));

    tmp_57_fu_707_p7 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln_fu_695_p3),3));
    tmp_58_fu_677_p7 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln544_1_fu_665_p3),3));
    tmp_59_fu_647_p7 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln544_2_fu_635_p3),3));
    tmp_60_fu_617_p7 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln544_3_fu_605_p3),3));
    trunc_ln189_fu_597_p1 <= row_int_reg(1 - 1 downto 0);
    trunc_ln190_fu_601_p1 <= col_int_reg(1 - 1 downto 0);
    zext_ln193_fu_725_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_60_reg_1027_pp0_iter2_reg),14));
    zext_ln196_fu_729_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_59_reg_1032_pp0_iter2_reg),14));
    zext_ln202_fu_733_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_58_reg_1037_pp0_iter2_reg),14));
    zext_ln207_fu_737_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_57_reg_1042_pp0_iter2_reg),14));
end behav;
