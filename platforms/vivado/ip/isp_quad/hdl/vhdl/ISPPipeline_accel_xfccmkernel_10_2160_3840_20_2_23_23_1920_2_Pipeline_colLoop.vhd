-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
-- Version: 2021.1
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity ISPPipeline_accel_xfccmkernel_10_2160_3840_20_2_23_23_1920_2_Pipeline_colLoop is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ltm_in_4199_dout : IN STD_LOGIC_VECTOR (95 downto 0);
    ltm_in_4199_empty_n : IN STD_LOGIC;
    ltm_in_4199_read : OUT STD_LOGIC;
    lsc_out_4200_din : OUT STD_LOGIC_VECTOR (95 downto 0);
    lsc_out_4200_full_n : IN STD_LOGIC;
    lsc_out_4200_write : OUT STD_LOGIC;
    width : IN STD_LOGIC_VECTOR (10 downto 0) );
end;


architecture behav of ISPPipeline_accel_xfccmkernel_10_2160_3840_20_2_23_23_1920_2_Pipeline_colLoop is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_4F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001111";
    constant ap_const_lv32_50 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010000";
    constant ap_const_lv32_5F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011111";
    constant ap_const_lv45_1A916872 : STD_LOGIC_VECTOR (44 downto 0) := "000000000000000011010100100010110100001110010";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_2C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101100";
    constant ap_const_lv45_1FFFF69930BE : STD_LOGIC_VECTOR (44 downto 0) := "111111111111111110110100110010011000010111110";
    constant ap_const_lv45_12205BC0 : STD_LOGIC_VECTOR (44 downto 0) := "000000000000000010010001000000101101111000000";
    constant ap_const_lv32_29 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101001";
    constant ap_const_lv32_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100110";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv45_11E631F8 : STD_LOGIC_VECTOR (44 downto 0) := "000000000000000010001111001100011000111111000";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv20_0 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000000";
    constant ap_const_lv28_0 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000000000000000";
    constant ap_const_lv21_1 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000000001";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv22_FFFF : STD_LOGIC_VECTOR (21 downto 0) := "0000001111111111111111";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv42_3FFFED5CFAA : STD_LOGIC_VECTOR (41 downto 0) := "111111111111111110110101011100111110101010";
    constant ap_const_lv42_3FFFE01A36E : STD_LOGIC_VECTOR (41 downto 0) := "111111111111111110000000011010001101101110";
    constant ap_const_lv39_7FFFDE00D1 : STD_LOGIC_VECTOR (38 downto 0) := "111111111111111110111100000000011010001";
    constant ap_const_lv40_FFFFB573EA : STD_LOGIC_VECTOR (39 downto 0) := "1111111111111111101101010111001111101010";
    constant ap_const_lv42_3FFFE63F141 : STD_LOGIC_VECTOR (41 downto 0) := "111111111111111110011000111111000101000001";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal icmp_ln245_fu_163_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal ltm_in_4199_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal lsc_out_4200_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal r_V_fu_174_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_reg_1410 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_reg_1410_pp0_iter2_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal g_V_fu_178_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal g_V_reg_1415 : STD_LOGIC_VECTOR (15 downto 0);
    signal g_V_reg_1415_pp0_iter2_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal b_V_fu_188_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal b_V_reg_1420 : STD_LOGIC_VECTOR (15 downto 0);
    signal b_V_reg_1420_pp0_iter2_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal b_V_reg_1420_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_12_fu_218_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_12_reg_1450 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_12_reg_1450_pp0_iter2_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal g_V_1_fu_228_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal g_V_1_reg_1455 : STD_LOGIC_VECTOR (15 downto 0);
    signal g_V_1_reg_1455_pp0_iter2_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal b_V_1_fu_238_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal b_V_1_reg_1460 : STD_LOGIC_VECTOR (15 downto 0);
    signal b_V_1_reg_1460_pp0_iter2_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal b_V_1_reg_1460_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_6_reg_1490 : STD_LOGIC_VECTOR (24 downto 0);
    signal ret_V_24_fu_330_p2 : STD_LOGIC_VECTOR (26 downto 0);
    signal ret_V_24_reg_1495 : STD_LOGIC_VECTOR (26 downto 0);
    signal tmp_27_reg_1500 : STD_LOGIC_VECTOR (24 downto 0);
    signal ret_V_33_fu_398_p2 : STD_LOGIC_VECTOR (26 downto 0);
    signal ret_V_33_reg_1505 : STD_LOGIC_VECTOR (26 downto 0);
    signal ret_V_26_fu_535_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal ret_V_26_reg_1510 : STD_LOGIC_VECTOR (20 downto 0);
    signal ret_V_28_fu_564_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal ret_V_28_reg_1515 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_4_reg_1520 : STD_LOGIC_VECTOR (19 downto 0);
    signal icmp_ln902_1_fu_592_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln902_1_reg_1525 : STD_LOGIC_VECTOR (0 downto 0);
    signal ret_V_31_fu_620_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal ret_V_31_reg_1530 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_7_reg_1535 : STD_LOGIC_VECTOR (19 downto 0);
    signal trunc_ln902_2_fu_636_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln902_2_reg_1540 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln109_fu_650_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln109_reg_1545 : STD_LOGIC_VECTOR (0 downto 0);
    signal ret_V_35_fu_787_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal ret_V_35_reg_1550 : STD_LOGIC_VECTOR (20 downto 0);
    signal ret_V_37_fu_816_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal ret_V_37_reg_1555 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_12_reg_1560 : STD_LOGIC_VECTOR (19 downto 0);
    signal icmp_ln902_4_fu_844_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln902_4_reg_1565 : STD_LOGIC_VECTOR (0 downto 0);
    signal ret_V_40_fu_872_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal ret_V_40_reg_1570 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_13_reg_1575 : STD_LOGIC_VECTOR (19 downto 0);
    signal trunc_ln902_5_fu_888_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln902_5_reg_1580 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln109_3_fu_902_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln109_3_reg_1585 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_V_fu_126 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_j_V_1 : STD_LOGIC_VECTOR (10 downto 0);
    signal j_V_2_fu_157_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal r_V_1_fu_271_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_1_fu_271_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal r_V_1_fu_271_p2 : STD_LOGIC_VECTOR (44 downto 0);
    signal r_V_3_fu_290_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln1168_4_fu_287_p1 : STD_LOGIC_VECTOR (44 downto 0);
    signal r_V_3_fu_290_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal r_V_3_fu_290_p2 : STD_LOGIC_VECTOR (44 downto 0);
    signal r_V_7_fu_306_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_7_fu_306_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal r_V_7_fu_306_p2 : STD_LOGIC_VECTOR (44 downto 0);
    signal tmp_fu_277_p4 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_2_fu_296_p4 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln1245_fu_326_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal zext_ln1245_fu_322_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal r_V_13_fu_339_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_13_fu_339_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal r_V_13_fu_339_p2 : STD_LOGIC_VECTOR (44 downto 0);
    signal r_V_15_fu_358_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln1168_12_fu_355_p1 : STD_LOGIC_VECTOR (44 downto 0);
    signal r_V_15_fu_358_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal r_V_15_fu_358_p2 : STD_LOGIC_VECTOR (44 downto 0);
    signal r_V_19_fu_374_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_19_fu_374_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal r_V_19_fu_374_p2 : STD_LOGIC_VECTOR (44 downto 0);
    signal tmp_23_fu_345_p4 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_24_fu_364_p4 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln1245_9_fu_394_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal zext_ln1245_3_fu_390_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal grp_fu_1329_p2 : STD_LOGIC_VECTOR (41 downto 0);
    signal grp_fu_1336_p2 : STD_LOGIC_VECTOR (41 downto 0);
    signal grp_fu_1343_p2 : STD_LOGIC_VECTOR (38 downto 0);
    signal grp_fu_1350_p2 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_fu_1357_p2 : STD_LOGIC_VECTOR (41 downto 0);
    signal r_V_11_fu_452_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_11_fu_452_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal r_V_11_fu_452_p2 : STD_LOGIC_VECTOR (44 downto 0);
    signal tmp_3_fu_407_p4 : STD_LOGIC_VECTOR (21 downto 0);
    signal sext_ln1245_1_fu_468_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal sext_ln1245_2_fu_471_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal ret_V_25_fu_475_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_1_fu_481_p4 : STD_LOGIC_VECTOR (19 downto 0);
    signal trunc_ln902_fu_503_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_mask_fu_507_p3 : STD_LOGIC_VECTOR (27 downto 0);
    signal sext_ln901_fu_491_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal icmp_ln902_fu_515_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ret_V_fu_521_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal p_Result_s_fu_495_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln901_fu_527_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal tmp_5_fu_416_p4 : STD_LOGIC_VECTOR (21 downto 0);
    signal zext_ln1245_1_fu_547_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal sext_ln1245_3_fu_543_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal ret_V_27_fu_550_p2 : STD_LOGIC_VECTOR (26 downto 0);
    signal tmp_8_fu_425_p4 : STD_LOGIC_VECTOR (18 downto 0);
    signal sext_ln1245_4_fu_556_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal sext_ln1245_5_fu_560_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal trunc_ln902_1_fu_580_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_mask1_fu_584_p3 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_9_fu_434_p4 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp_10_fu_443_p4 : STD_LOGIC_VECTOR (21 downto 0);
    signal sext_ln1245_7_fu_602_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal sext_ln1245_6_fu_598_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal ret_V_30_fu_606_p2 : STD_LOGIC_VECTOR (26 downto 0);
    signal tmp_11_fu_458_p4 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln1245_8_fu_612_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal zext_ln1245_2_fu_616_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_17_fu_640_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_fu_1364_p2 : STD_LOGIC_VECTOR (41 downto 0);
    signal grp_fu_1371_p2 : STD_LOGIC_VECTOR (41 downto 0);
    signal grp_fu_1378_p2 : STD_LOGIC_VECTOR (38 downto 0);
    signal grp_fu_1385_p2 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_fu_1392_p2 : STD_LOGIC_VECTOR (41 downto 0);
    signal r_V_23_fu_704_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_23_fu_704_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal r_V_23_fu_704_p2 : STD_LOGIC_VECTOR (44 downto 0);
    signal tmp_25_fu_659_p4 : STD_LOGIC_VECTOR (21 downto 0);
    signal sext_ln1245_10_fu_720_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal sext_ln1245_11_fu_723_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal ret_V_34_fu_727_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_s_fu_733_p4 : STD_LOGIC_VECTOR (19 downto 0);
    signal trunc_ln902_3_fu_755_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_mask3_fu_759_p3 : STD_LOGIC_VECTOR (27 downto 0);
    signal sext_ln901_3_fu_743_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal icmp_ln902_3_fu_767_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ret_V_14_fu_773_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal p_Result_3_fu_747_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln901_3_fu_779_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal tmp_26_fu_668_p4 : STD_LOGIC_VECTOR (21 downto 0);
    signal zext_ln1245_4_fu_799_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal sext_ln1245_12_fu_795_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal ret_V_36_fu_802_p2 : STD_LOGIC_VECTOR (26 downto 0);
    signal tmp_28_fu_677_p4 : STD_LOGIC_VECTOR (18 downto 0);
    signal sext_ln1245_13_fu_808_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal sext_ln1245_14_fu_812_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal trunc_ln902_4_fu_832_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_mask4_fu_836_p3 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_29_fu_686_p4 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp_30_fu_695_p4 : STD_LOGIC_VECTOR (21 downto 0);
    signal sext_ln1245_16_fu_854_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal sext_ln1245_15_fu_850_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal ret_V_39_fu_858_p2 : STD_LOGIC_VECTOR (26 downto 0);
    signal tmp_31_fu_710_p4 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln1245_17_fu_864_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal zext_ln1245_5_fu_868_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_35_fu_892_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal sext_ln901_1_fu_911_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal ret_V_6_fu_921_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal p_Result_1_fu_914_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln901_1_fu_927_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal ret_V_29_fu_934_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal p_mask2_fu_956_p3 : STD_LOGIC_VECTOR (27 downto 0);
    signal sext_ln901_2_fu_946_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal icmp_ln902_2_fu_963_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ret_V_10_fu_969_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal p_Result_2_fu_949_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln901_2_fu_975_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal ret_V_32_fu_983_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal sext_ln882_fu_908_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal select_ln109_fu_995_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_18_fu_1002_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln315_fu_1010_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_19_fu_1022_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln109_1_fu_1032_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln882_1_fu_942_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal select_ln109_1_fu_1038_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_20_fu_1046_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln315_1_fu_1054_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_21_fu_1066_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln109_2_fu_1076_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln882_2_fu_991_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal select_ln109_2_fu_1082_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_22_fu_1090_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln315_2_fu_1098_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln901_4_fu_1113_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal ret_V_18_fu_1123_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal p_Result_4_fu_1116_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln901_4_fu_1129_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal ret_V_38_fu_1136_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal p_mask5_fu_1158_p3 : STD_LOGIC_VECTOR (27 downto 0);
    signal sext_ln901_5_fu_1148_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal icmp_ln902_5_fu_1165_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ret_V_22_fu_1171_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal p_Result_5_fu_1151_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln901_5_fu_1177_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal ret_V_41_fu_1185_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal sext_ln882_3_fu_1110_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal select_ln109_3_fu_1197_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_36_fu_1204_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln315_3_fu_1212_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_37_fu_1224_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln109_4_fu_1234_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln882_4_fu_1144_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal select_ln109_4_fu_1240_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_38_fu_1248_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln315_4_fu_1256_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_39_fu_1268_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln109_5_fu_1278_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln882_5_fu_1193_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal select_ln109_5_fu_1284_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_40_fu_1292_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln315_5_fu_1300_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln315_5_fu_1304_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln315_4_fu_1260_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln315_3_fu_1216_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln315_2_fu_1102_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln315_1_fu_1058_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln315_fu_1014_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1329_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1329_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_1336_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1336_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_1343_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1343_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal grp_fu_1350_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1350_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_1357_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1357_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_1364_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1364_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_1371_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1371_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_1378_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1378_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal grp_fu_1385_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1385_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_1392_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1392_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_1329_ce : STD_LOGIC;
    signal grp_fu_1336_ce : STD_LOGIC;
    signal grp_fu_1343_ce : STD_LOGIC;
    signal grp_fu_1350_ce : STD_LOGIC;
    signal grp_fu_1357_ce : STD_LOGIC;
    signal grp_fu_1364_ce : STD_LOGIC;
    signal grp_fu_1371_ce : STD_LOGIC;
    signal grp_fu_1378_ce : STD_LOGIC;
    signal grp_fu_1385_ce : STD_LOGIC;
    signal grp_fu_1392_ce : STD_LOGIC;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter2_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter3_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter4_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal grp_fu_1329_p00 : STD_LOGIC_VECTOR (41 downto 0);
    signal grp_fu_1336_p00 : STD_LOGIC_VECTOR (41 downto 0);
    signal grp_fu_1343_p00 : STD_LOGIC_VECTOR (38 downto 0);
    signal grp_fu_1350_p00 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_fu_1357_p00 : STD_LOGIC_VECTOR (41 downto 0);
    signal grp_fu_1364_p00 : STD_LOGIC_VECTOR (41 downto 0);
    signal grp_fu_1371_p00 : STD_LOGIC_VECTOR (41 downto 0);
    signal grp_fu_1378_p00 : STD_LOGIC_VECTOR (38 downto 0);
    signal grp_fu_1385_p00 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_fu_1392_p00 : STD_LOGIC_VECTOR (41 downto 0);
    signal r_V_11_fu_452_p00 : STD_LOGIC_VECTOR (44 downto 0);
    signal r_V_13_fu_339_p00 : STD_LOGIC_VECTOR (44 downto 0);
    signal r_V_1_fu_271_p00 : STD_LOGIC_VECTOR (44 downto 0);
    signal r_V_23_fu_704_p00 : STD_LOGIC_VECTOR (44 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component ISPPipeline_accel_mul_16ns_30ns_45_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (29 downto 0);
        dout : OUT STD_LOGIC_VECTOR (44 downto 0) );
    end component;


    component ISPPipeline_accel_mul_16ns_29s_45_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (28 downto 0);
        dout : OUT STD_LOGIC_VECTOR (44 downto 0) );
    end component;


    component ISPPipeline_accel_mul_mul_16ns_26s_42_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (25 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (41 downto 0) );
    end component;


    component ISPPipeline_accel_mul_mul_16ns_23s_39_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (22 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (38 downto 0) );
    end component;


    component ISPPipeline_accel_mul_mul_16ns_24s_40_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (23 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (39 downto 0) );
    end component;


    component ISPPipeline_accel_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    mul_16ns_30ns_45_1_1_U565 : component ISPPipeline_accel_mul_16ns_30ns_45_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 30,
        dout_WIDTH => 45)
    port map (
        din0 => r_V_1_fu_271_p0,
        din1 => r_V_1_fu_271_p1,
        dout => r_V_1_fu_271_p2);

    mul_16ns_29s_45_1_1_U566 : component ISPPipeline_accel_mul_16ns_29s_45_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 29,
        dout_WIDTH => 45)
    port map (
        din0 => r_V_3_fu_290_p0,
        din1 => r_V_3_fu_290_p1,
        dout => r_V_3_fu_290_p2);

    mul_16ns_30ns_45_1_1_U567 : component ISPPipeline_accel_mul_16ns_30ns_45_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 30,
        dout_WIDTH => 45)
    port map (
        din0 => r_V_7_fu_306_p0,
        din1 => r_V_7_fu_306_p1,
        dout => r_V_7_fu_306_p2);

    mul_16ns_30ns_45_1_1_U568 : component ISPPipeline_accel_mul_16ns_30ns_45_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 30,
        dout_WIDTH => 45)
    port map (
        din0 => r_V_13_fu_339_p0,
        din1 => r_V_13_fu_339_p1,
        dout => r_V_13_fu_339_p2);

    mul_16ns_29s_45_1_1_U569 : component ISPPipeline_accel_mul_16ns_29s_45_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 29,
        dout_WIDTH => 45)
    port map (
        din0 => r_V_15_fu_358_p0,
        din1 => r_V_15_fu_358_p1,
        dout => r_V_15_fu_358_p2);

    mul_16ns_30ns_45_1_1_U570 : component ISPPipeline_accel_mul_16ns_30ns_45_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 30,
        dout_WIDTH => 45)
    port map (
        din0 => r_V_19_fu_374_p0,
        din1 => r_V_19_fu_374_p1,
        dout => r_V_19_fu_374_p2);

    mul_16ns_30ns_45_1_1_U571 : component ISPPipeline_accel_mul_16ns_30ns_45_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 30,
        dout_WIDTH => 45)
    port map (
        din0 => r_V_11_fu_452_p0,
        din1 => r_V_11_fu_452_p1,
        dout => r_V_11_fu_452_p2);

    mul_16ns_30ns_45_1_1_U572 : component ISPPipeline_accel_mul_16ns_30ns_45_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 30,
        dout_WIDTH => 45)
    port map (
        din0 => r_V_23_fu_704_p0,
        din1 => r_V_23_fu_704_p1,
        dout => r_V_23_fu_704_p2);

    mul_mul_16ns_26s_42_4_1_U573 : component ISPPipeline_accel_mul_mul_16ns_26s_42_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 26,
        dout_WIDTH => 42)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1329_p0,
        din1 => grp_fu_1329_p1,
        ce => grp_fu_1329_ce,
        dout => grp_fu_1329_p2);

    mul_mul_16ns_26s_42_4_1_U574 : component ISPPipeline_accel_mul_mul_16ns_26s_42_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 26,
        dout_WIDTH => 42)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1336_p0,
        din1 => grp_fu_1336_p1,
        ce => grp_fu_1336_ce,
        dout => grp_fu_1336_p2);

    mul_mul_16ns_23s_39_4_1_U575 : component ISPPipeline_accel_mul_mul_16ns_23s_39_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 23,
        dout_WIDTH => 39)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1343_p0,
        din1 => grp_fu_1343_p1,
        ce => grp_fu_1343_ce,
        dout => grp_fu_1343_p2);

    mul_mul_16ns_24s_40_4_1_U576 : component ISPPipeline_accel_mul_mul_16ns_24s_40_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 24,
        dout_WIDTH => 40)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1350_p0,
        din1 => grp_fu_1350_p1,
        ce => grp_fu_1350_ce,
        dout => grp_fu_1350_p2);

    mul_mul_16ns_26s_42_4_1_U577 : component ISPPipeline_accel_mul_mul_16ns_26s_42_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 26,
        dout_WIDTH => 42)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1357_p0,
        din1 => grp_fu_1357_p1,
        ce => grp_fu_1357_ce,
        dout => grp_fu_1357_p2);

    mul_mul_16ns_26s_42_4_1_U578 : component ISPPipeline_accel_mul_mul_16ns_26s_42_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 26,
        dout_WIDTH => 42)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1364_p0,
        din1 => grp_fu_1364_p1,
        ce => grp_fu_1364_ce,
        dout => grp_fu_1364_p2);

    mul_mul_16ns_26s_42_4_1_U579 : component ISPPipeline_accel_mul_mul_16ns_26s_42_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 26,
        dout_WIDTH => 42)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1371_p0,
        din1 => grp_fu_1371_p1,
        ce => grp_fu_1371_ce,
        dout => grp_fu_1371_p2);

    mul_mul_16ns_23s_39_4_1_U580 : component ISPPipeline_accel_mul_mul_16ns_23s_39_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 23,
        dout_WIDTH => 39)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1378_p0,
        din1 => grp_fu_1378_p1,
        ce => grp_fu_1378_ce,
        dout => grp_fu_1378_p2);

    mul_mul_16ns_24s_40_4_1_U581 : component ISPPipeline_accel_mul_mul_16ns_24s_40_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 24,
        dout_WIDTH => 40)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1385_p0,
        din1 => grp_fu_1385_p1,
        ce => grp_fu_1385_ce,
        dout => grp_fu_1385_p2);

    mul_mul_16ns_26s_42_4_1_U582 : component ISPPipeline_accel_mul_mul_16ns_26s_42_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 26,
        dout_WIDTH => 42)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1392_p0,
        din1 => grp_fu_1392_p1,
        ce => grp_fu_1392_ce,
        dout => grp_fu_1392_p2);

    flow_control_loop_pipe_sequential_init_U : component ISPPipeline_accel_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter4_reg = ap_const_logic_1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage0)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    j_V_fu_126_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((icmp_ln245_fu_163_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                    j_V_fu_126 <= j_V_2_fu_157_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    j_V_fu_126 <= ap_const_lv11_0;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
                ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
                b_V_1_reg_1460 <= ltm_in_4199_dout(95 downto 80);
                b_V_reg_1420 <= ltm_in_4199_dout(47 downto 32);
                g_V_1_reg_1455 <= ltm_in_4199_dout(79 downto 64);
                g_V_reg_1415 <= ltm_in_4199_dout(31 downto 16);
                r_V_12_reg_1450 <= ltm_in_4199_dout(63 downto 48);
                r_V_reg_1410 <= r_V_fu_174_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
                ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
                b_V_1_reg_1460_pp0_iter2_reg <= b_V_1_reg_1460;
                b_V_1_reg_1460_pp0_iter3_reg <= b_V_1_reg_1460_pp0_iter2_reg;
                b_V_reg_1420_pp0_iter2_reg <= b_V_reg_1420;
                b_V_reg_1420_pp0_iter3_reg <= b_V_reg_1420_pp0_iter2_reg;
                g_V_1_reg_1455_pp0_iter2_reg <= g_V_1_reg_1455;
                g_V_reg_1415_pp0_iter2_reg <= g_V_reg_1415;
                icmp_ln109_3_reg_1585 <= icmp_ln109_3_fu_902_p2;
                icmp_ln109_reg_1545 <= icmp_ln109_fu_650_p2;
                icmp_ln902_1_reg_1525 <= icmp_ln902_1_fu_592_p2;
                icmp_ln902_4_reg_1565 <= icmp_ln902_4_fu_844_p2;
                r_V_12_reg_1450_pp0_iter2_reg <= r_V_12_reg_1450;
                r_V_reg_1410_pp0_iter2_reg <= r_V_reg_1410;
                ret_V_24_reg_1495 <= ret_V_24_fu_330_p2;
                ret_V_26_reg_1510 <= ret_V_26_fu_535_p3;
                ret_V_28_reg_1515 <= ret_V_28_fu_564_p2;
                ret_V_31_reg_1530 <= ret_V_31_fu_620_p2;
                ret_V_33_reg_1505 <= ret_V_33_fu_398_p2;
                ret_V_35_reg_1550 <= ret_V_35_fu_787_p3;
                ret_V_37_reg_1555 <= ret_V_37_fu_816_p2;
                ret_V_40_reg_1570 <= ret_V_40_fu_872_p2;
                tmp_12_reg_1560 <= ret_V_37_fu_816_p2(27 downto 8);
                tmp_13_reg_1575 <= ret_V_40_fu_872_p2(27 downto 8);
                tmp_27_reg_1500 <= r_V_19_fu_374_p2(44 downto 20);
                tmp_4_reg_1520 <= ret_V_28_fu_564_p2(27 downto 8);
                tmp_6_reg_1490 <= r_V_7_fu_306_p2(44 downto 20);
                tmp_7_reg_1535 <= ret_V_31_fu_620_p2(27 downto 8);
                trunc_ln902_2_reg_1540 <= trunc_ln902_2_fu_636_p1;
                trunc_ln902_5_reg_1580 <= trunc_ln902_5_fu_888_p1;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter5, ltm_in_4199_empty_n, lsc_out_4200_full_n)
    begin
                ap_block_pp0_stage0_01001 <= (((lsc_out_4200_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1)) or ((ltm_in_4199_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter5, ltm_in_4199_empty_n, lsc_out_4200_full_n)
    begin
                ap_block_pp0_stage0_11001 <= (((lsc_out_4200_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1)) or ((ltm_in_4199_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter5, ltm_in_4199_empty_n, lsc_out_4200_full_n)
    begin
                ap_block_pp0_stage0_subdone <= (((lsc_out_4200_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1)) or ((ltm_in_4199_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;

        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state2_pp0_stage0_iter1_assign_proc : process(ltm_in_4199_empty_n)
    begin
                ap_block_state2_pp0_stage0_iter1 <= (ltm_in_4199_empty_n = ap_const_logic_0);
    end process;

        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state6_pp0_stage0_iter5_assign_proc : process(lsc_out_4200_full_n)
    begin
                ap_block_state6_pp0_stage0_iter5 <= (lsc_out_4200_full_n = ap_const_logic_0);
    end process;


    ap_condition_exit_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, icmp_ln245_fu_163_p2)
    begin
        if (((icmp_ln245_fu_163_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_block_pp0_stage0_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter4_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter4_reg = ap_const_logic_1))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_start_int = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage0;

    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_j_V_1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, j_V_fu_126, ap_loop_init)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1))) then 
            ap_sig_allocacmp_j_V_1 <= ap_const_lv11_0;
        else 
            ap_sig_allocacmp_j_V_1 <= j_V_fu_126;
        end if; 
    end process;

    b_V_1_fu_238_p4 <= ltm_in_4199_dout(95 downto 80);
    b_V_fu_188_p4 <= ltm_in_4199_dout(47 downto 32);
    g_V_1_fu_228_p4 <= ltm_in_4199_dout(79 downto 64);
    g_V_fu_178_p4 <= ltm_in_4199_dout(31 downto 16);

    grp_fu_1329_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1329_ce <= ap_const_logic_1;
        else 
            grp_fu_1329_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1329_p0 <= grp_fu_1329_p00(16 - 1 downto 0);
    grp_fu_1329_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(b_V_fu_188_p4),42));
    grp_fu_1329_p1 <= ap_const_lv42_3FFFED5CFAA(26 - 1 downto 0);

    grp_fu_1336_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1336_ce <= ap_const_logic_1;
        else 
            grp_fu_1336_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1336_p0 <= grp_fu_1336_p00(16 - 1 downto 0);
    grp_fu_1336_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_fu_174_p1),42));
    grp_fu_1336_p1 <= ap_const_lv42_3FFFE01A36E(26 - 1 downto 0);

    grp_fu_1343_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1343_ce <= ap_const_logic_1;
        else 
            grp_fu_1343_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1343_p0 <= grp_fu_1343_p00(16 - 1 downto 0);
    grp_fu_1343_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(b_V_fu_188_p4),39));
    grp_fu_1343_p1 <= ap_const_lv39_7FFFDE00D1(23 - 1 downto 0);

    grp_fu_1350_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1350_ce <= ap_const_logic_1;
        else 
            grp_fu_1350_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1350_p0 <= grp_fu_1350_p00(16 - 1 downto 0);
    grp_fu_1350_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_fu_174_p1),40));
    grp_fu_1350_p1 <= ap_const_lv40_FFFFB573EA(24 - 1 downto 0);

    grp_fu_1357_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1357_ce <= ap_const_logic_1;
        else 
            grp_fu_1357_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1357_p0 <= grp_fu_1357_p00(16 - 1 downto 0);
    grp_fu_1357_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(g_V_fu_178_p4),42));
    grp_fu_1357_p1 <= ap_const_lv42_3FFFE63F141(26 - 1 downto 0);

    grp_fu_1364_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1364_ce <= ap_const_logic_1;
        else 
            grp_fu_1364_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1364_p0 <= grp_fu_1364_p00(16 - 1 downto 0);
    grp_fu_1364_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(b_V_1_fu_238_p4),42));
    grp_fu_1364_p1 <= ap_const_lv42_3FFFED5CFAA(26 - 1 downto 0);

    grp_fu_1371_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1371_ce <= ap_const_logic_1;
        else 
            grp_fu_1371_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1371_p0 <= grp_fu_1371_p00(16 - 1 downto 0);
    grp_fu_1371_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_12_fu_218_p4),42));
    grp_fu_1371_p1 <= ap_const_lv42_3FFFE01A36E(26 - 1 downto 0);

    grp_fu_1378_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1378_ce <= ap_const_logic_1;
        else 
            grp_fu_1378_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1378_p0 <= grp_fu_1378_p00(16 - 1 downto 0);
    grp_fu_1378_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(b_V_1_fu_238_p4),39));
    grp_fu_1378_p1 <= ap_const_lv39_7FFFDE00D1(23 - 1 downto 0);

    grp_fu_1385_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1385_ce <= ap_const_logic_1;
        else 
            grp_fu_1385_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1385_p0 <= grp_fu_1385_p00(16 - 1 downto 0);
    grp_fu_1385_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_12_fu_218_p4),40));
    grp_fu_1385_p1 <= ap_const_lv40_FFFFB573EA(24 - 1 downto 0);

    grp_fu_1392_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1392_ce <= ap_const_logic_1;
        else 
            grp_fu_1392_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1392_p0 <= grp_fu_1392_p00(16 - 1 downto 0);
    grp_fu_1392_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(g_V_1_fu_228_p4),42));
    grp_fu_1392_p1 <= ap_const_lv42_3FFFE63F141(26 - 1 downto 0);
    icmp_ln109_1_fu_1032_p2 <= "1" when (signed(tmp_19_fu_1022_p4) > signed(ap_const_lv5_0)) else "0";
    icmp_ln109_2_fu_1076_p2 <= "1" when (signed(tmp_21_fu_1066_p4) > signed(ap_const_lv5_0)) else "0";
    icmp_ln109_3_fu_902_p2 <= "1" when (signed(tmp_35_fu_892_p4) > signed(ap_const_lv5_0)) else "0";
    icmp_ln109_4_fu_1234_p2 <= "1" when (signed(tmp_37_fu_1224_p4) > signed(ap_const_lv5_0)) else "0";
    icmp_ln109_5_fu_1278_p2 <= "1" when (signed(tmp_39_fu_1268_p4) > signed(ap_const_lv5_0)) else "0";
    icmp_ln109_fu_650_p2 <= "1" when (signed(tmp_17_fu_640_p4) > signed(ap_const_lv5_0)) else "0";
    icmp_ln245_fu_163_p2 <= "1" when (ap_sig_allocacmp_j_V_1 = width) else "0";
    icmp_ln902_1_fu_592_p2 <= "1" when (p_mask1_fu_584_p3 = ap_const_lv28_0) else "0";
    icmp_ln902_2_fu_963_p2 <= "1" when (p_mask2_fu_956_p3 = ap_const_lv28_0) else "0";
    icmp_ln902_3_fu_767_p2 <= "1" when (p_mask3_fu_759_p3 = ap_const_lv28_0) else "0";
    icmp_ln902_4_fu_844_p2 <= "1" when (p_mask4_fu_836_p3 = ap_const_lv28_0) else "0";
    icmp_ln902_5_fu_1165_p2 <= "1" when (p_mask5_fu_1158_p3 = ap_const_lv28_0) else "0";
    icmp_ln902_fu_515_p2 <= "1" when (p_mask_fu_507_p3 = ap_const_lv28_0) else "0";
    j_V_2_fu_157_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_j_V_1) + unsigned(ap_const_lv11_1));

    lsc_out_4200_blk_n_assign_proc : process(ap_enable_reg_pp0_iter5, lsc_out_4200_full_n, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            lsc_out_4200_blk_n <= lsc_out_4200_full_n;
        else 
            lsc_out_4200_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    lsc_out_4200_din <= (((((select_ln315_5_fu_1304_p3 & select_ln315_4_fu_1260_p3) & select_ln315_3_fu_1216_p3) & select_ln315_2_fu_1102_p3) & select_ln315_1_fu_1058_p3) & select_ln315_fu_1014_p3);

    lsc_out_4200_write_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            lsc_out_4200_write <= ap_const_logic_1;
        else 
            lsc_out_4200_write <= ap_const_logic_0;
        end if; 
    end process;


    ltm_in_4199_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ltm_in_4199_empty_n, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ltm_in_4199_blk_n <= ltm_in_4199_empty_n;
        else 
            ltm_in_4199_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    ltm_in_4199_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ltm_in_4199_read <= ap_const_logic_1;
        else 
            ltm_in_4199_read <= ap_const_logic_0;
        end if; 
    end process;

    p_Result_1_fu_914_p3 <= ret_V_28_reg_1515(27 downto 27);
    p_Result_2_fu_949_p3 <= ret_V_31_reg_1530(27 downto 27);
    p_Result_3_fu_747_p3 <= ret_V_34_fu_727_p2(27 downto 27);
    p_Result_4_fu_1116_p3 <= ret_V_37_reg_1555(27 downto 27);
    p_Result_5_fu_1151_p3 <= ret_V_40_reg_1570(27 downto 27);
    p_Result_s_fu_495_p3 <= ret_V_25_fu_475_p2(27 downto 27);
    p_mask1_fu_584_p3 <= (ap_const_lv20_0 & trunc_ln902_1_fu_580_p1);
    p_mask2_fu_956_p3 <= (ap_const_lv20_0 & trunc_ln902_2_reg_1540);
    p_mask3_fu_759_p3 <= (ap_const_lv20_0 & trunc_ln902_3_fu_755_p1);
    p_mask4_fu_836_p3 <= (ap_const_lv20_0 & trunc_ln902_4_fu_832_p1);
    p_mask5_fu_1158_p3 <= (ap_const_lv20_0 & trunc_ln902_5_reg_1580);
    p_mask_fu_507_p3 <= (ap_const_lv20_0 & trunc_ln902_fu_503_p1);
    r_V_11_fu_452_p0 <= r_V_11_fu_452_p00(16 - 1 downto 0);
    r_V_11_fu_452_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(b_V_reg_1420_pp0_iter3_reg),45));
    r_V_11_fu_452_p1 <= ap_const_lv45_11E631F8(30 - 1 downto 0);
    r_V_12_fu_218_p4 <= ltm_in_4199_dout(63 downto 48);
    r_V_13_fu_339_p0 <= r_V_13_fu_339_p00(16 - 1 downto 0);
    r_V_13_fu_339_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_12_reg_1450_pp0_iter2_reg),45));
    r_V_13_fu_339_p1 <= ap_const_lv45_1A916872(30 - 1 downto 0);
    r_V_15_fu_358_p0 <= zext_ln1168_12_fu_355_p1(16 - 1 downto 0);
    r_V_15_fu_358_p1 <= ap_const_lv45_1FFFF69930BE(29 - 1 downto 0);
    r_V_19_fu_374_p0 <= zext_ln1168_12_fu_355_p1(16 - 1 downto 0);
    r_V_19_fu_374_p1 <= ap_const_lv45_12205BC0(30 - 1 downto 0);
    r_V_1_fu_271_p0 <= r_V_1_fu_271_p00(16 - 1 downto 0);
    r_V_1_fu_271_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_reg_1410_pp0_iter2_reg),45));
    r_V_1_fu_271_p1 <= ap_const_lv45_1A916872(30 - 1 downto 0);
    r_V_23_fu_704_p0 <= r_V_23_fu_704_p00(16 - 1 downto 0);
    r_V_23_fu_704_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(b_V_1_reg_1460_pp0_iter3_reg),45));
    r_V_23_fu_704_p1 <= ap_const_lv45_11E631F8(30 - 1 downto 0);
    r_V_3_fu_290_p0 <= zext_ln1168_4_fu_287_p1(16 - 1 downto 0);
    r_V_3_fu_290_p1 <= ap_const_lv45_1FFFF69930BE(29 - 1 downto 0);
    r_V_7_fu_306_p0 <= zext_ln1168_4_fu_287_p1(16 - 1 downto 0);
    r_V_7_fu_306_p1 <= ap_const_lv45_12205BC0(30 - 1 downto 0);
    r_V_fu_174_p1 <= ltm_in_4199_dout(16 - 1 downto 0);
    ret_V_10_fu_969_p2 <= std_logic_vector(signed(sext_ln901_2_fu_946_p1) + signed(ap_const_lv21_1));
    ret_V_14_fu_773_p2 <= std_logic_vector(signed(sext_ln901_3_fu_743_p1) + signed(ap_const_lv21_1));
    ret_V_18_fu_1123_p2 <= std_logic_vector(signed(sext_ln901_4_fu_1113_p1) + signed(ap_const_lv21_1));
    ret_V_22_fu_1171_p2 <= std_logic_vector(signed(sext_ln901_5_fu_1148_p1) + signed(ap_const_lv21_1));
    ret_V_24_fu_330_p2 <= std_logic_vector(signed(sext_ln1245_fu_326_p1) + signed(zext_ln1245_fu_322_p1));
    ret_V_25_fu_475_p2 <= std_logic_vector(signed(sext_ln1245_1_fu_468_p1) + signed(sext_ln1245_2_fu_471_p1));
    ret_V_26_fu_535_p3 <= 
        select_ln901_fu_527_p3 when (p_Result_s_fu_495_p3(0) = '1') else 
        sext_ln901_fu_491_p1;
    ret_V_27_fu_550_p2 <= std_logic_vector(unsigned(zext_ln1245_1_fu_547_p1) + unsigned(sext_ln1245_3_fu_543_p1));
    ret_V_28_fu_564_p2 <= std_logic_vector(signed(sext_ln1245_4_fu_556_p1) + signed(sext_ln1245_5_fu_560_p1));
    ret_V_29_fu_934_p3 <= 
        select_ln901_1_fu_927_p3 when (p_Result_1_fu_914_p3(0) = '1') else 
        sext_ln901_1_fu_911_p1;
    ret_V_30_fu_606_p2 <= std_logic_vector(signed(sext_ln1245_7_fu_602_p1) + signed(sext_ln1245_6_fu_598_p1));
    ret_V_31_fu_620_p2 <= std_logic_vector(signed(sext_ln1245_8_fu_612_p1) + signed(zext_ln1245_2_fu_616_p1));
    ret_V_32_fu_983_p3 <= 
        select_ln901_2_fu_975_p3 when (p_Result_2_fu_949_p3(0) = '1') else 
        sext_ln901_2_fu_946_p1;
    ret_V_33_fu_398_p2 <= std_logic_vector(signed(sext_ln1245_9_fu_394_p1) + signed(zext_ln1245_3_fu_390_p1));
    ret_V_34_fu_727_p2 <= std_logic_vector(signed(sext_ln1245_10_fu_720_p1) + signed(sext_ln1245_11_fu_723_p1));
    ret_V_35_fu_787_p3 <= 
        select_ln901_3_fu_779_p3 when (p_Result_3_fu_747_p3(0) = '1') else 
        sext_ln901_3_fu_743_p1;
    ret_V_36_fu_802_p2 <= std_logic_vector(unsigned(zext_ln1245_4_fu_799_p1) + unsigned(sext_ln1245_12_fu_795_p1));
    ret_V_37_fu_816_p2 <= std_logic_vector(signed(sext_ln1245_13_fu_808_p1) + signed(sext_ln1245_14_fu_812_p1));
    ret_V_38_fu_1136_p3 <= 
        select_ln901_4_fu_1129_p3 when (p_Result_4_fu_1116_p3(0) = '1') else 
        sext_ln901_4_fu_1113_p1;
    ret_V_39_fu_858_p2 <= std_logic_vector(signed(sext_ln1245_16_fu_854_p1) + signed(sext_ln1245_15_fu_850_p1));
    ret_V_40_fu_872_p2 <= std_logic_vector(signed(sext_ln1245_17_fu_864_p1) + signed(zext_ln1245_5_fu_868_p1));
    ret_V_41_fu_1185_p3 <= 
        select_ln901_5_fu_1177_p3 when (p_Result_5_fu_1151_p3(0) = '1') else 
        sext_ln901_5_fu_1148_p1;
    ret_V_6_fu_921_p2 <= std_logic_vector(signed(sext_ln901_1_fu_911_p1) + signed(ap_const_lv21_1));
    ret_V_fu_521_p2 <= std_logic_vector(signed(sext_ln901_fu_491_p1) + signed(ap_const_lv21_1));
    select_ln109_1_fu_1038_p3 <= 
        ap_const_lv22_FFFF when (icmp_ln109_1_fu_1032_p2(0) = '1') else 
        sext_ln882_1_fu_942_p1;
    select_ln109_2_fu_1082_p3 <= 
        ap_const_lv22_FFFF when (icmp_ln109_2_fu_1076_p2(0) = '1') else 
        sext_ln882_2_fu_991_p1;
    select_ln109_3_fu_1197_p3 <= 
        ap_const_lv22_FFFF when (icmp_ln109_3_reg_1585(0) = '1') else 
        sext_ln882_3_fu_1110_p1;
    select_ln109_4_fu_1240_p3 <= 
        ap_const_lv22_FFFF when (icmp_ln109_4_fu_1234_p2(0) = '1') else 
        sext_ln882_4_fu_1144_p1;
    select_ln109_5_fu_1284_p3 <= 
        ap_const_lv22_FFFF when (icmp_ln109_5_fu_1278_p2(0) = '1') else 
        sext_ln882_5_fu_1193_p1;
    select_ln109_fu_995_p3 <= 
        ap_const_lv22_FFFF when (icmp_ln109_reg_1545(0) = '1') else 
        sext_ln882_fu_908_p1;
    select_ln315_1_fu_1058_p3 <= 
        ap_const_lv16_0 when (tmp_20_fu_1046_p3(0) = '1') else 
        trunc_ln315_1_fu_1054_p1;
    select_ln315_2_fu_1102_p3 <= 
        ap_const_lv16_0 when (tmp_22_fu_1090_p3(0) = '1') else 
        trunc_ln315_2_fu_1098_p1;
    select_ln315_3_fu_1216_p3 <= 
        ap_const_lv16_0 when (tmp_36_fu_1204_p3(0) = '1') else 
        trunc_ln315_3_fu_1212_p1;
    select_ln315_4_fu_1260_p3 <= 
        ap_const_lv16_0 when (tmp_38_fu_1248_p3(0) = '1') else 
        trunc_ln315_4_fu_1256_p1;
    select_ln315_5_fu_1304_p3 <= 
        ap_const_lv16_0 when (tmp_40_fu_1292_p3(0) = '1') else 
        trunc_ln315_5_fu_1300_p1;
    select_ln315_fu_1014_p3 <= 
        ap_const_lv16_0 when (tmp_18_fu_1002_p3(0) = '1') else 
        trunc_ln315_fu_1010_p1;
    select_ln901_1_fu_927_p3 <= 
        sext_ln901_1_fu_911_p1 when (icmp_ln902_1_reg_1525(0) = '1') else 
        ret_V_6_fu_921_p2;
    select_ln901_2_fu_975_p3 <= 
        sext_ln901_2_fu_946_p1 when (icmp_ln902_2_fu_963_p2(0) = '1') else 
        ret_V_10_fu_969_p2;
    select_ln901_3_fu_779_p3 <= 
        sext_ln901_3_fu_743_p1 when (icmp_ln902_3_fu_767_p2(0) = '1') else 
        ret_V_14_fu_773_p2;
    select_ln901_4_fu_1129_p3 <= 
        sext_ln901_4_fu_1113_p1 when (icmp_ln902_4_reg_1565(0) = '1') else 
        ret_V_18_fu_1123_p2;
    select_ln901_5_fu_1177_p3 <= 
        sext_ln901_5_fu_1148_p1 when (icmp_ln902_5_fu_1165_p2(0) = '1') else 
        ret_V_22_fu_1171_p2;
    select_ln901_fu_527_p3 <= 
        sext_ln901_fu_491_p1 when (icmp_ln902_fu_515_p2(0) = '1') else 
        ret_V_fu_521_p2;
        sext_ln1245_10_fu_720_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_V_33_reg_1505),28));

        sext_ln1245_11_fu_723_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_25_fu_659_p4),28));

        sext_ln1245_12_fu_795_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_26_fu_668_p4),27));

        sext_ln1245_13_fu_808_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_V_36_fu_802_p2),28));

        sext_ln1245_14_fu_812_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_28_fu_677_p4),28));

        sext_ln1245_15_fu_850_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_29_fu_686_p4),27));

        sext_ln1245_16_fu_854_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_30_fu_695_p4),27));

        sext_ln1245_17_fu_864_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_V_39_fu_858_p2),28));

        sext_ln1245_1_fu_468_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_V_24_reg_1495),28));

        sext_ln1245_2_fu_471_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_3_fu_407_p4),28));

        sext_ln1245_3_fu_543_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_5_fu_416_p4),27));

        sext_ln1245_4_fu_556_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_V_27_fu_550_p2),28));

        sext_ln1245_5_fu_560_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_8_fu_425_p4),28));

        sext_ln1245_6_fu_598_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_9_fu_434_p4),27));

        sext_ln1245_7_fu_602_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_10_fu_443_p4),27));

        sext_ln1245_8_fu_612_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_V_30_fu_606_p2),28));

        sext_ln1245_9_fu_394_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_24_fu_364_p4),27));

        sext_ln1245_fu_326_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_2_fu_296_p4),27));

        sext_ln882_1_fu_942_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_V_29_fu_934_p3),22));

        sext_ln882_2_fu_991_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_V_32_fu_983_p3),22));

        sext_ln882_3_fu_1110_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_V_35_reg_1550),22));

        sext_ln882_4_fu_1144_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_V_38_fu_1136_p3),22));

        sext_ln882_5_fu_1193_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_V_41_fu_1185_p3),22));

        sext_ln882_fu_908_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_V_26_reg_1510),22));

        sext_ln901_1_fu_911_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_4_reg_1520),21));

        sext_ln901_2_fu_946_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_7_reg_1535),21));

        sext_ln901_3_fu_743_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_s_fu_733_p4),21));

        sext_ln901_4_fu_1113_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_12_reg_1560),21));

        sext_ln901_5_fu_1148_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_13_reg_1575),21));

        sext_ln901_fu_491_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_1_fu_481_p4),21));

    tmp_10_fu_443_p4 <= grp_fu_1357_p2(41 downto 20);
    tmp_11_fu_458_p4 <= r_V_11_fu_452_p2(44 downto 20);
    tmp_17_fu_640_p4 <= ret_V_26_fu_535_p3(20 downto 16);
    tmp_18_fu_1002_p3 <= select_ln109_fu_995_p3(21 downto 21);
    tmp_19_fu_1022_p4 <= ret_V_29_fu_934_p3(20 downto 16);
    tmp_1_fu_481_p4 <= ret_V_25_fu_475_p2(27 downto 8);
    tmp_20_fu_1046_p3 <= select_ln109_1_fu_1038_p3(21 downto 21);
    tmp_21_fu_1066_p4 <= ret_V_32_fu_983_p3(20 downto 16);
    tmp_22_fu_1090_p3 <= select_ln109_2_fu_1082_p3(21 downto 21);
    tmp_23_fu_345_p4 <= r_V_13_fu_339_p2(44 downto 20);
    tmp_24_fu_364_p4 <= r_V_15_fu_358_p2(44 downto 20);
    tmp_25_fu_659_p4 <= grp_fu_1364_p2(41 downto 20);
    tmp_26_fu_668_p4 <= grp_fu_1371_p2(41 downto 20);
    tmp_28_fu_677_p4 <= grp_fu_1378_p2(38 downto 20);
    tmp_29_fu_686_p4 <= grp_fu_1385_p2(39 downto 20);
    tmp_2_fu_296_p4 <= r_V_3_fu_290_p2(44 downto 20);
    tmp_30_fu_695_p4 <= grp_fu_1392_p2(41 downto 20);
    tmp_31_fu_710_p4 <= r_V_23_fu_704_p2(44 downto 20);
    tmp_35_fu_892_p4 <= ret_V_35_fu_787_p3(20 downto 16);
    tmp_36_fu_1204_p3 <= select_ln109_3_fu_1197_p3(21 downto 21);
    tmp_37_fu_1224_p4 <= ret_V_38_fu_1136_p3(20 downto 16);
    tmp_38_fu_1248_p3 <= select_ln109_4_fu_1240_p3(21 downto 21);
    tmp_39_fu_1268_p4 <= ret_V_41_fu_1185_p3(20 downto 16);
    tmp_3_fu_407_p4 <= grp_fu_1329_p2(41 downto 20);
    tmp_40_fu_1292_p3 <= select_ln109_5_fu_1284_p3(21 downto 21);
    tmp_5_fu_416_p4 <= grp_fu_1336_p2(41 downto 20);
    tmp_8_fu_425_p4 <= grp_fu_1343_p2(38 downto 20);
    tmp_9_fu_434_p4 <= grp_fu_1350_p2(39 downto 20);
    tmp_fu_277_p4 <= r_V_1_fu_271_p2(44 downto 20);
    tmp_s_fu_733_p4 <= ret_V_34_fu_727_p2(27 downto 8);
    trunc_ln315_1_fu_1054_p1 <= select_ln109_1_fu_1038_p3(16 - 1 downto 0);
    trunc_ln315_2_fu_1098_p1 <= select_ln109_2_fu_1082_p3(16 - 1 downto 0);
    trunc_ln315_3_fu_1212_p1 <= select_ln109_3_fu_1197_p3(16 - 1 downto 0);
    trunc_ln315_4_fu_1256_p1 <= select_ln109_4_fu_1240_p3(16 - 1 downto 0);
    trunc_ln315_5_fu_1300_p1 <= select_ln109_5_fu_1284_p3(16 - 1 downto 0);
    trunc_ln315_fu_1010_p1 <= select_ln109_fu_995_p3(16 - 1 downto 0);
    trunc_ln902_1_fu_580_p1 <= ret_V_28_fu_564_p2(8 - 1 downto 0);
    trunc_ln902_2_fu_636_p1 <= ret_V_31_fu_620_p2(8 - 1 downto 0);
    trunc_ln902_3_fu_755_p1 <= ret_V_34_fu_727_p2(8 - 1 downto 0);
    trunc_ln902_4_fu_832_p1 <= ret_V_37_fu_816_p2(8 - 1 downto 0);
    trunc_ln902_5_fu_888_p1 <= ret_V_40_fu_872_p2(8 - 1 downto 0);
    trunc_ln902_fu_503_p1 <= ret_V_25_fu_475_p2(8 - 1 downto 0);
    zext_ln1168_12_fu_355_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(g_V_1_reg_1455_pp0_iter2_reg),45));
    zext_ln1168_4_fu_287_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(g_V_reg_1415_pp0_iter2_reg),45));
    zext_ln1245_1_fu_547_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_6_reg_1490),27));
    zext_ln1245_2_fu_616_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_11_fu_458_p4),28));
    zext_ln1245_3_fu_390_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_23_fu_345_p4),27));
    zext_ln1245_4_fu_799_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_27_reg_1500),27));
    zext_ln1245_5_fu_868_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_31_fu_710_p4),28));
    zext_ln1245_fu_322_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_fu_277_p4),27));
end behav;
