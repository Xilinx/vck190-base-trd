-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.2
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity xf_QuatizationDither is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    stream_in_rows_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    stream_in_rows_empty_n : IN STD_LOGIC;
    stream_in_rows_read : OUT STD_LOGIC;
    stream_in_cols_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    stream_in_cols_empty_n : IN STD_LOGIC;
    stream_in_cols_read : OUT STD_LOGIC;
    stream_in_data_V_V_dout : IN STD_LOGIC_VECTOR (59 downto 0);
    stream_in_data_V_V_empty_n : IN STD_LOGIC;
    stream_in_data_V_V_read : OUT STD_LOGIC;
    stream_out_data_V_V_din : OUT STD_LOGIC_VECTOR (47 downto 0);
    stream_out_data_V_V_full_n : IN STD_LOGIC;
    stream_out_data_V_V_write : OUT STD_LOGIC );
end;


architecture behav of xf_QuatizationDither is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_ST_fsm_pp1_stage0 : STD_LOGIC_VECTOR (4 downto 0) := "01000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv15_0 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000000";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv17_1 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000001";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_const_lv17_1FFFF : STD_LOGIC_VECTOR (16 downto 0) := "11111111111111111";
    constant ap_const_lv15_1 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000001";
    constant ap_const_lv16_FFFF : STD_LOGIC_VECTOR (15 downto 0) := "1111111111111111";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv32_31 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110001";
    constant ap_const_lv32_29 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101001";
    constant ap_const_lv32_32 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110010";
    constant ap_const_lv32_3B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111011";
    constant ap_const_lv32_33 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110011";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal stream_in_rows_blk_n : STD_LOGIC;
    signal stream_in_cols_blk_n : STD_LOGIC;
    signal stream_in_data_V_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp1_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage0 : signal is "none";
    signal ap_enable_reg_pp1_iter1 : STD_LOGIC := '0';
    signal ap_block_pp1_stage0 : BOOLEAN;
    signal icmp_ln126_reg_2911 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln136_reg_2925 : STD_LOGIC_VECTOR (0 downto 0);
    signal stream_out_data_V_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp1_iter3 : STD_LOGIC := '0';
    signal icmp_ln136_reg_2925_pp1_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten_reg_440 : STD_LOGIC_VECTOR (31 downto 0);
    signal q_err_2nd_V_2_0_1_i_reg_451 : STD_LOGIC_VECTOR (9 downto 0);
    signal q_err_2nd_V_1_0_1_i_reg_463 : STD_LOGIC_VECTOR (9 downto 0);
    signal q_err_2nd_V_0_0_1_i_reg_475 : STD_LOGIC_VECTOR (9 downto 0);
    signal q_err_1st_V_2_0_1_i_reg_487 : STD_LOGIC_VECTOR (9 downto 0);
    signal q_err_1st_V_1_0_1_i_reg_499 : STD_LOGIC_VECTOR (9 downto 0);
    signal q_err_1st_V_0_0_1_i_reg_511 : STD_LOGIC_VECTOR (9 downto 0);
    signal col_index28_0_i_reg_523 : STD_LOGIC_VECTOR (14 downto 0);
    signal height_reg_2833 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal imgInput_ncpr_fu_544_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal imgInput_ncpr_reg_2838 : STD_LOGIC_VECTOR (15 downto 0);
    signal in_col_loop_bound_fu_554_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal in_col_loop_bound_reg_2844 : STD_LOGIC_VECTOR (15 downto 0);
    signal col_index_fu_565_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal add_ln180_fu_584_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln180_reg_2901 : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal mul_ln180_fu_2827_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln180_reg_2906 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln126_fu_605_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state4_pp1_stage0_iter0 : BOOLEAN;
    signal ap_predicate_op103_read_state5 : BOOLEAN;
    signal ap_block_state5_pp1_stage0_iter1 : BOOLEAN;
    signal ap_block_state6_pp1_stage0_iter2 : BOOLEAN;
    signal ap_block_state7_pp1_stage0_iter3 : BOOLEAN;
    signal ap_block_pp1_stage0_11001 : BOOLEAN;
    signal icmp_ln126_reg_2911_pp1_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln126_reg_2911_pp1_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln126_fu_610_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp1_iter0 : STD_LOGIC := '0';
    signal zext_ln129_1_fu_624_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln129_1_reg_2920 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln129_1_reg_2920_pp1_iter1_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln136_fu_632_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln136_reg_2925_pp1_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln157_fu_637_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln157_reg_2929 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln176_fu_644_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln176_reg_2936 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln176_reg_2936_pp1_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln196_fu_650_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln196_reg_2940 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln196_reg_2940_pp1_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln196_reg_2940_pp1_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal col_index_1_fu_655_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal offset_buffer_0_0_s_q0 : STD_LOGIC_VECTOR (9 downto 0);
    signal offset_buffer_0_0_3_reg_2980 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln68_1_fu_666_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln68_1_reg_2985 : STD_LOGIC_VECTOR (1 downto 0);
    signal offset_buffer_1_0_s_q0 : STD_LOGIC_VECTOR (9 downto 0);
    signal offset_buffer_1_0_3_reg_2990 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln68_9_fu_670_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln68_9_reg_2995 : STD_LOGIC_VECTOR (1 downto 0);
    signal offset_buffer_2_0_s_q0 : STD_LOGIC_VECTOR (9 downto 0);
    signal offset_buffer_2_0_3_reg_3000 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln68_14_fu_674_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln68_14_reg_3005 : STD_LOGIC_VECTOR (1 downto 0);
    signal sext_ln_reg_3025 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_41_fu_808_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_41_reg_3030 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_3037 : STD_LOGIC_VECTOR (8 downto 0);
    signal trunc_ln647_1_fu_836_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln647_1_reg_3042 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_Result_28_0_i_fu_840_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_Result_28_0_i_reg_3047 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_42_reg_3053 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln215_s_reg_3059 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_44_fu_980_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_44_reg_3064 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_12_reg_3071 : STD_LOGIC_VECTOR (8 downto 0);
    signal trunc_ln647_2_fu_1008_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln647_2_reg_3076 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_Result_28_0_1_i_fu_1012_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_Result_28_0_1_i_reg_3081 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_45_reg_3087 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln215_1_reg_3093 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_47_fu_1152_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_47_reg_3098 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_14_reg_3105 : STD_LOGIC_VECTOR (8 downto 0);
    signal trunc_ln647_3_fu_1180_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln647_3_reg_3110 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_Result_28_0_2_i_fu_1184_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_Result_28_0_2_i_reg_3115 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_48_reg_3121 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_1_i_reg_3127 : STD_LOGIC_VECTOR (9 downto 0);
    signal offset_buffer_0_1_s_q0 : STD_LOGIC_VECTOR (8 downto 0);
    signal offset_buffer_0_1_3_reg_3134 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_enable_reg_pp1_iter2 : STD_LOGIC := '0';
    signal tmp_50_reg_3139 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln68_17_fu_1247_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln68_17_reg_3144 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln68_s_reg_3149 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln68_10_reg_3154 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_Result_1_1_i_reg_3159 : STD_LOGIC_VECTOR (9 downto 0);
    signal offset_buffer_1_1_s_q0 : STD_LOGIC_VECTOR (8 downto 0);
    signal offset_buffer_1_1_3_reg_3166 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_55_reg_3171 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln68_18_fu_1323_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln68_18_reg_3176 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln68_12_reg_3181 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln68_13_reg_3186 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_Result_1_2_i_reg_3191 : STD_LOGIC_VECTOR (9 downto 0);
    signal offset_buffer_2_1_s_q0 : STD_LOGIC_VECTOR (8 downto 0);
    signal offset_buffer_2_1_3_reg_3198 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_60_reg_3203 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln68_19_fu_1399_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln68_19_reg_3208 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln68_15_reg_3213 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln68_16_reg_3218 : STD_LOGIC_VECTOR (1 downto 0);
    signal q_err_2nd_0_0_V_2_fu_2154_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal q_err_1st_0_0_V_2_fu_2169_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal q_err_2nd_1_0_V_2_fu_2453_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal q_err_1st_1_0_V_2_fu_2468_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal q_err_2nd_2_0_V_2_fu_2752_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal q_err_1st_2_0_V_2_fu_2767_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_block_pp1_stage0_subdone : BOOLEAN;
    signal ap_condition_pp1_exit_iter0_state4 : STD_LOGIC;
    signal offset_buffer_0_0_s_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal offset_buffer_0_0_s_ce0 : STD_LOGIC;
    signal offset_buffer_0_0_s_we0 : STD_LOGIC;
    signal offset_buffer_0_0_s_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal offset_buffer_0_0_s_ce1 : STD_LOGIC;
    signal offset_buffer_0_0_s_we1 : STD_LOGIC;
    signal offset_buffer_0_1_s_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal offset_buffer_0_1_s_ce0 : STD_LOGIC;
    signal offset_buffer_0_1_s_we0 : STD_LOGIC;
    signal offset_buffer_0_1_s_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal offset_buffer_0_1_s_ce1 : STD_LOGIC;
    signal offset_buffer_0_1_s_we1 : STD_LOGIC;
    signal offset_buffer_0_1_s_d1 : STD_LOGIC_VECTOR (8 downto 0);
    signal offset_buffer_1_0_s_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal offset_buffer_1_0_s_ce0 : STD_LOGIC;
    signal offset_buffer_1_0_s_we0 : STD_LOGIC;
    signal offset_buffer_1_0_s_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal offset_buffer_1_0_s_ce1 : STD_LOGIC;
    signal offset_buffer_1_0_s_we1 : STD_LOGIC;
    signal offset_buffer_1_1_s_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal offset_buffer_1_1_s_ce0 : STD_LOGIC;
    signal offset_buffer_1_1_s_we0 : STD_LOGIC;
    signal offset_buffer_1_1_s_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal offset_buffer_1_1_s_ce1 : STD_LOGIC;
    signal offset_buffer_1_1_s_we1 : STD_LOGIC;
    signal offset_buffer_1_1_s_d1 : STD_LOGIC_VECTOR (8 downto 0);
    signal offset_buffer_2_0_s_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal offset_buffer_2_0_s_ce0 : STD_LOGIC;
    signal offset_buffer_2_0_s_we0 : STD_LOGIC;
    signal offset_buffer_2_0_s_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal offset_buffer_2_0_s_ce1 : STD_LOGIC;
    signal offset_buffer_2_0_s_we1 : STD_LOGIC;
    signal offset_buffer_2_1_s_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal offset_buffer_2_1_s_ce0 : STD_LOGIC;
    signal offset_buffer_2_1_s_we0 : STD_LOGIC;
    signal offset_buffer_2_1_s_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal offset_buffer_2_1_s_ce1 : STD_LOGIC;
    signal offset_buffer_2_1_s_we1 : STD_LOGIC;
    signal offset_buffer_2_1_s_d1 : STD_LOGIC_VECTOR (8 downto 0);
    signal col_index_0_i_reg_429 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln87_fu_560_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_q_err_2nd_V_2_0_1_i_phi_fu_455_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_phi_mux_q_err_2nd_V_1_0_1_i_phi_fu_467_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_phi_mux_q_err_2nd_V_0_0_1_i_phi_fu_479_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln94_fu_571_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln177_fu_690_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal offset_prev_NPC_0_0_fu_190 : STD_LOGIC_VECTOR (9 downto 0);
    signal offset_prev_NPC_0_0_2_fu_1525_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_sig_allocacmp_offset_prev_NPC_0_0_1 : STD_LOGIC_VECTOR (9 downto 0);
    signal offset_prev_NPC_V_0_s_fu_194 : STD_LOGIC_VECTOR (7 downto 0);
    signal sext_ln176_fu_2101_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_allocacmp_offset_prev_NPC_V_0_1 : STD_LOGIC_VECTOR (7 downto 0);
    signal offset_prev_NPC_1_0_fu_198 : STD_LOGIC_VECTOR (9 downto 0);
    signal offset_prev_NPC_1_0_2_fu_1690_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_sig_allocacmp_offset_prev_NPC_1_0_1 : STD_LOGIC_VECTOR (9 downto 0);
    signal offset_prev_NPC_V_1_s_fu_202 : STD_LOGIC_VECTOR (7 downto 0);
    signal sext_ln176_1_fu_2400_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_allocacmp_offset_prev_NPC_V_1_1 : STD_LOGIC_VECTOR (7 downto 0);
    signal offset_prev_NPC_2_0_fu_206 : STD_LOGIC_VECTOR (9 downto 0);
    signal offset_prev_NPC_2_0_2_fu_1850_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_sig_allocacmp_offset_prev_NPC_2_0_1 : STD_LOGIC_VECTOR (9 downto 0);
    signal offset_prev_NPC_V_2_s_fu_210 : STD_LOGIC_VECTOR (7 downto 0);
    signal sext_ln176_2_fu_2699_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_allocacmp_offset_prev_NPC_V_2_1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_s_fu_214 : STD_LOGIC_VECTOR (59 downto 0);
    signal ap_block_pp1_stage0_01001 : BOOLEAN;
    signal zext_ln78_fu_534_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln78_fu_538_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln180_fu_581_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal zext_ln129_fu_596_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln129_fu_600_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln129_fu_616_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal zext_ln136_fu_628_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal trunc_ln68_1_fu_666_p0 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln68_9_fu_670_p0 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln68_14_fu_674_p0 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln177_fu_685_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln68_fu_708_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal shl_ln_fu_712_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln68_fu_704_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln68_fu_720_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln647_fu_700_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Result_24_0_i_fu_726_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal sext_ln68_1_fu_736_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln68_2_fu_743_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln68_fu_761_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln68_6_fu_767_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln68_fu_739_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln68_3_fu_747_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln68_2_fu_751_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln647_fu_777_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln68_1_fu_771_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln647_1_fu_783_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_Result_25_0_i_fu_788_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln1353_fu_816_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln647_3_fu_830_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln68_6_fu_874_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal shl_ln68_3_fu_878_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln68_12_fu_870_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln68_2_fu_886_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Result_0_1_i_fu_860_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Result_24_0_1_i_fu_892_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal sext_ln68_14_fu_902_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln68_18_fu_909_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln68_5_fu_933_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln68_21_fu_939_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln68_1_fu_905_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln68_4_fu_913_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln68_5_fu_923_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln647_4_fu_949_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln68_6_fu_943_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln647_5_fu_955_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_Result_25_0_1_i_fu_960_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln1353_2_fu_988_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln647_7_fu_1002_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln68_11_fu_1046_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal shl_ln68_6_fu_1050_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln68_24_fu_1042_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln68_4_fu_1058_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Result_0_2_i_fu_1032_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Result_24_0_2_i_fu_1064_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal sext_ln68_30_fu_1074_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln68_33_fu_1081_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln68_10_fu_1105_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln68_34_fu_1111_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln68_2_fu_1077_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln68_7_fu_1085_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln68_8_fu_1095_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln647_8_fu_1121_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln68_11_fu_1115_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln647_9_fu_1127_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_Result_25_0_2_i_fu_1132_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln1353_4_fu_1160_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln647_11_fu_1174_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal shl_ln68_9_fu_1217_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal sext_ln68_37_fu_1227_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal sext_ln68_36_fu_1213_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal sub_ln68_6_fu_1231_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln68_17_fu_1247_p0 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln180_1_fu_1271_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal shl_ln68_10_fu_1293_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal sext_ln68_49_fu_1303_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal sext_ln68_48_fu_1289_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal sub_ln68_8_fu_1307_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln68_18_fu_1323_p0 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln180_2_fu_1347_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal shl_ln68_12_fu_1369_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal sext_ln68_61_fu_1379_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal sext_ln68_60_fu_1365_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal sub_ln68_10_fu_1383_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln68_19_fu_1399_p0 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln180_3_fu_1423_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln647_fu_1428_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln1353_1_fu_1431_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal shl_ln68_1_fu_1452_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln68_2_fu_1471_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal sext_ln68_8_fu_1479_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal sext_ln68_7_fu_1468_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal sub_ln68_1_fu_1483_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal sext_ln68_5_fu_1460_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal sext_ln68_4_fu_1448_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal sext_ln68_9_fu_1464_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln68_10_fu_1489_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln68_3_fu_1499_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln68_11_fu_1505_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln68_2_fu_1493_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln68_4_fu_1509_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_s_fu_1515_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln647_2_fu_1439_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_43_fu_1547_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1054_1_fu_1555_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln195_fu_1537_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1054_fu_1561_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1054_fu_1542_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1054_1_fu_1567_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln647_24_fu_1434_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln196_fu_1581_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln1054_fu_1573_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln647_1_fu_1593_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln1353_3_fu_1596_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal shl_ln68_4_fu_1617_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln68_5_fu_1636_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal sext_ln68_20_fu_1644_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal sext_ln68_19_fu_1633_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal sub_ln68_3_fu_1648_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal sext_ln68_17_fu_1625_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal sext_ln68_16_fu_1613_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal sext_ln68_22_fu_1629_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln68_23_fu_1654_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln68_8_fu_1664_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln68_25_fu_1670_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln68_7_fu_1658_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln68_9_fu_1674_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_13_fu_1680_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln647_6_fu_1604_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_46_fu_1707_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1054_3_fu_1715_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1054_2_fu_1721_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1054_2_fu_1702_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1054_3_fu_1727_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln647_25_fu_1599_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln196_1_fu_1741_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln1054_1_fu_1733_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln647_2_fu_1753_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln1353_5_fu_1756_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal shl_ln68_7_fu_1777_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln68_8_fu_1796_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal sext_ln68_32_fu_1804_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal sext_ln68_31_fu_1793_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal sub_ln68_5_fu_1808_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal sext_ln68_29_fu_1785_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal sext_ln68_28_fu_1773_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal sext_ln68_35_fu_1789_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln68_38_fu_1814_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln68_13_fu_1824_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln68_39_fu_1830_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln68_12_fu_1818_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln68_14_fu_1834_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_15_fu_1840_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln647_10_fu_1764_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_49_fu_1867_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1054_5_fu_1875_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1054_4_fu_1881_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1054_4_fu_1862_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1054_5_fu_1887_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln647_26_fu_1759_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln196_2_fu_1901_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln1054_2_fu_1893_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal sext_ln68_47_fu_1919_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln68_46_fu_1913_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln68_15_fu_1922_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln68_3_fu_1916_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln68_50_fu_1928_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln647_12_fu_1948_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln68_16_fu_1942_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln68_31_fu_1937_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln647_13_fu_1952_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_51_fu_1977_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln647_3_fu_1985_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal sext_ln215_2_fu_1967_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln1353_7_fu_2003_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_16_fu_1993_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln1353_6_fu_1989_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Result_25_1_i_fu_1957_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln68_30_fu_1932_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln647_4_fu_2025_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln68_17_fu_2037_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_Result_28_1_i_fu_2029_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal shl_ln68_s_fu_2051_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal sext_ln68_43_fu_2061_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal sext_ln68_42_fu_2047_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal sub_ln68_7_fu_2065_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal sext_ln68_44_fu_2071_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal sext_ln68_41_fu_2043_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln68_18_fu_2075_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal sext_ln68_45_fu_2081_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln68_3_fu_1444_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln68_19_fu_2085_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_52_fu_2091_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln647_15_fu_2019_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_53_fu_2114_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln647_14_fu_2013_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_54_fu_2128_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal q_err_2nd_0_0_V_fu_2110_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal xor_ln1054_6_fu_2122_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln1054_fu_2149_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal q_err_2nd_0_0_V_1_fu_2142_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal q_err_1st_0_0_V_fu_1534_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal q_err_1st_0_0_V_1_fu_2162_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal xor_ln1054_7_fu_2136_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1054_6_fu_2177_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1054_7_fu_2183_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln647_27_fu_2007_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln1054_5_fu_2189_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln196_5_fu_2197_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal sext_ln68_58_fu_2218_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln68_52_fu_2212_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln68_20_fu_2221_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln68_4_fu_2215_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln68_59_fu_2227_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln647_16_fu_2247_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln68_21_fu_2241_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln68_33_fu_2236_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln647_17_fu_2251_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_56_fu_2276_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln647_4_fu_2284_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal sext_ln215_3_fu_2266_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln1353_9_fu_2302_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_17_fu_2292_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln1353_8_fu_2288_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Result_25_1_1_i_fu_2256_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln68_32_fu_2231_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln647_5_fu_2324_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln68_22_fu_2336_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_Result_28_1_1_i_fu_2328_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal shl_ln68_11_fu_2350_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal sext_ln68_55_fu_2360_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal sext_ln68_54_fu_2346_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal sub_ln68_9_fu_2364_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal sext_ln68_56_fu_2370_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal sext_ln68_53_fu_2342_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln68_23_fu_2374_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal sext_ln68_57_fu_2380_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln68_15_fu_1609_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln68_24_fu_2384_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_57_fu_2390_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln647_19_fu_2318_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_58_fu_2413_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln647_18_fu_2312_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_59_fu_2427_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal q_err_2nd_1_0_V_fu_2409_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal xor_ln1054_8_fu_2421_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln1054_1_fu_2448_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal q_err_2nd_1_0_V_1_fu_2441_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal q_err_1st_1_0_V_fu_1699_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal q_err_1st_1_0_V_1_fu_2461_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal xor_ln1054_9_fu_2435_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1054_8_fu_2476_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1054_9_fu_2482_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln647_28_fu_2306_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln1054_9_fu_2488_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln196_8_fu_2496_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal sext_ln68_64_fu_2517_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln68_63_fu_2511_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln68_25_fu_2520_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln68_5_fu_2514_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln68_70_fu_2526_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln647_20_fu_2546_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln68_26_fu_2540_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln68_35_fu_2535_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln647_21_fu_2550_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_61_fu_2575_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln647_5_fu_2583_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal sext_ln215_4_fu_2565_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln1353_11_fu_2601_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_18_fu_2591_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln1353_10_fu_2587_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Result_25_1_2_i_fu_2555_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln68_34_fu_2530_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln647_6_fu_2623_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln68_27_fu_2635_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_Result_28_1_2_i_fu_2627_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal shl_ln68_13_fu_2649_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal sext_ln68_67_fu_2659_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal sext_ln68_66_fu_2645_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal sub_ln68_11_fu_2663_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal sext_ln68_68_fu_2669_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal sext_ln68_65_fu_2641_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln68_28_fu_2673_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal sext_ln68_69_fu_2679_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln68_27_fu_1769_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln68_29_fu_2683_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_62_fu_2689_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln647_23_fu_2617_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_63_fu_2712_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln647_22_fu_2611_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_64_fu_2726_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal q_err_2nd_2_0_V_fu_2708_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal xor_ln1054_10_fu_2720_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln1054_2_fu_2747_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal q_err_2nd_2_0_V_1_fu_2740_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal q_err_1st_2_0_V_fu_1859_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal q_err_1st_2_0_V_1_fu_2760_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal xor_ln1054_11_fu_2734_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1054_10_fu_2775_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1054_11_fu_2781_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln647_29_fu_2605_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln1054_13_fu_2787_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln196_11_fu_2795_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln1054_14_fu_2802_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln1054_10_fu_2503_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln1054_6_fu_2204_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln196_2_fu_1905_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln196_1_fu_1745_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln196_fu_1585_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln180_fu_2827_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_ln180_fu_2827_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_block_pp1 : BOOLEAN;
    signal ap_enable_operation_88 : BOOLEAN;
    signal ap_enable_state4_pp1_iter0_stage0 : BOOLEAN;
    signal ap_enable_operation_106 : BOOLEAN;
    signal ap_enable_state5_pp1_iter1_stage0 : BOOLEAN;
    signal ap_enable_operation_147 : BOOLEAN;
    signal ap_enable_state6_pp1_iter2_stage0 : BOOLEAN;
    signal ap_enable_operation_91 : BOOLEAN;
    signal ap_enable_operation_108 : BOOLEAN;
    signal ap_enable_operation_176 : BOOLEAN;
    signal ap_enable_operation_94 : BOOLEAN;
    signal ap_enable_operation_110 : BOOLEAN;
    signal ap_enable_operation_205 : BOOLEAN;
    signal ap_enable_operation_113 : BOOLEAN;
    signal ap_enable_operation_214 : BOOLEAN;
    signal ap_enable_operation_221 : BOOLEAN;
    signal ap_enable_operation_115 : BOOLEAN;
    signal ap_enable_operation_229 : BOOLEAN;
    signal ap_enable_operation_236 : BOOLEAN;
    signal ap_enable_operation_117 : BOOLEAN;
    signal ap_enable_operation_244 : BOOLEAN;
    signal ap_enable_operation_251 : BOOLEAN;
    signal ap_idle_pp1 : STD_LOGIC;
    signal ap_enable_pp1 : STD_LOGIC;
    signal mul_ln180_fu_2827_p00 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln180_fu_2827_p10 : STD_LOGIC_VECTOR (31 downto 0);

    component ISPPipeline_accelGfk IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component xf_QuatizationDitLf8 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (9 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        address1 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (9 downto 0) );
    end component;


    component xf_QuatizationDitMgi IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (8 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        address1 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (8 downto 0) );
    end component;



begin
    offset_buffer_0_0_s_U : component xf_QuatizationDitLf8
    generic map (
        DataWidth => 10,
        AddressRange => 960,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => offset_buffer_0_0_s_address0,
        ce0 => offset_buffer_0_0_s_ce0,
        we0 => offset_buffer_0_0_s_we0,
        d0 => ap_const_lv10_0,
        q0 => offset_buffer_0_0_s_q0,
        address1 => offset_buffer_0_0_s_address1,
        ce1 => offset_buffer_0_0_s_ce1,
        we1 => offset_buffer_0_0_s_we1,
        d1 => ap_sig_allocacmp_offset_prev_NPC_0_0_1);

    offset_buffer_0_1_s_U : component xf_QuatizationDitMgi
    generic map (
        DataWidth => 9,
        AddressRange => 960,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => offset_buffer_0_1_s_address0,
        ce0 => offset_buffer_0_1_s_ce0,
        we0 => offset_buffer_0_1_s_we0,
        d0 => ap_const_lv9_0,
        q0 => offset_buffer_0_1_s_q0,
        address1 => offset_buffer_0_1_s_address1,
        ce1 => offset_buffer_0_1_s_ce1,
        we1 => offset_buffer_0_1_s_we1,
        d1 => offset_buffer_0_1_s_d1);

    offset_buffer_1_0_s_U : component xf_QuatizationDitLf8
    generic map (
        DataWidth => 10,
        AddressRange => 960,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => offset_buffer_1_0_s_address0,
        ce0 => offset_buffer_1_0_s_ce0,
        we0 => offset_buffer_1_0_s_we0,
        d0 => ap_const_lv10_0,
        q0 => offset_buffer_1_0_s_q0,
        address1 => offset_buffer_1_0_s_address1,
        ce1 => offset_buffer_1_0_s_ce1,
        we1 => offset_buffer_1_0_s_we1,
        d1 => ap_sig_allocacmp_offset_prev_NPC_1_0_1);

    offset_buffer_1_1_s_U : component xf_QuatizationDitMgi
    generic map (
        DataWidth => 9,
        AddressRange => 960,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => offset_buffer_1_1_s_address0,
        ce0 => offset_buffer_1_1_s_ce0,
        we0 => offset_buffer_1_1_s_we0,
        d0 => ap_const_lv9_0,
        q0 => offset_buffer_1_1_s_q0,
        address1 => offset_buffer_1_1_s_address1,
        ce1 => offset_buffer_1_1_s_ce1,
        we1 => offset_buffer_1_1_s_we1,
        d1 => offset_buffer_1_1_s_d1);

    offset_buffer_2_0_s_U : component xf_QuatizationDitLf8
    generic map (
        DataWidth => 10,
        AddressRange => 960,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => offset_buffer_2_0_s_address0,
        ce0 => offset_buffer_2_0_s_ce0,
        we0 => offset_buffer_2_0_s_we0,
        d0 => ap_const_lv10_0,
        q0 => offset_buffer_2_0_s_q0,
        address1 => offset_buffer_2_0_s_address1,
        ce1 => offset_buffer_2_0_s_ce1,
        we1 => offset_buffer_2_0_s_we1,
        d1 => ap_sig_allocacmp_offset_prev_NPC_2_0_1);

    offset_buffer_2_1_s_U : component xf_QuatizationDitMgi
    generic map (
        DataWidth => 9,
        AddressRange => 960,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => offset_buffer_2_1_s_address0,
        ce0 => offset_buffer_2_1_s_ce0,
        we0 => offset_buffer_2_1_s_we0,
        d0 => ap_const_lv9_0,
        q0 => offset_buffer_2_1_s_q0,
        address1 => offset_buffer_2_1_s_address1,
        ce1 => offset_buffer_2_1_s_ce1,
        we1 => offset_buffer_2_1_s_we1,
        d1 => offset_buffer_2_1_s_d1);

    ISPPipeline_accelGfk_U392 : component ISPPipeline_accelGfk
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 32)
    port map (
        din0 => mul_ln180_fu_2827_p0,
        din1 => mul_ln180_fu_2827_p1,
        dout => mul_ln180_fu_2827_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_condition_pp1_exit_iter0_state4))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp1_exit_iter0_state4)) then 
                        ap_enable_reg_pp1_iter1 <= (ap_const_logic_1 xor ap_condition_pp1_exit_iter0_state4);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                    ap_enable_reg_pp1_iter3 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    col_index28_0_i_reg_523_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln126_fu_605_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                col_index28_0_i_reg_523 <= col_index_1_fu_655_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                col_index28_0_i_reg_523 <= ap_const_lv15_0;
            end if; 
        end if;
    end process;

    col_index_0_i_reg_429_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln87_fu_560_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                col_index_0_i_reg_429 <= col_index_fu_565_p2;
            elsif ((not(((stream_in_cols_empty_n = ap_const_logic_0) or (stream_in_rows_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                col_index_0_i_reg_429 <= ap_const_lv16_0;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_440_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln126_fu_605_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                indvar_flatten_reg_440 <= add_ln126_fu_610_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                indvar_flatten_reg_440 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    q_err_1st_V_0_0_1_i_reg_511_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln126_reg_2911_pp1_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                q_err_1st_V_0_0_1_i_reg_511 <= q_err_1st_0_0_V_2_fu_2169_p3;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                q_err_1st_V_0_0_1_i_reg_511 <= ap_const_lv10_0;
            end if; 
        end if;
    end process;

    q_err_1st_V_1_0_1_i_reg_499_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln126_reg_2911_pp1_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                q_err_1st_V_1_0_1_i_reg_499 <= q_err_1st_1_0_V_2_fu_2468_p3;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                q_err_1st_V_1_0_1_i_reg_499 <= ap_const_lv10_0;
            end if; 
        end if;
    end process;

    q_err_1st_V_2_0_1_i_reg_487_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln126_reg_2911_pp1_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                q_err_1st_V_2_0_1_i_reg_487 <= q_err_1st_2_0_V_2_fu_2767_p3;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                q_err_1st_V_2_0_1_i_reg_487 <= ap_const_lv10_0;
            end if; 
        end if;
    end process;

    q_err_2nd_V_0_0_1_i_reg_475_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln126_reg_2911_pp1_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                q_err_2nd_V_0_0_1_i_reg_475 <= q_err_2nd_0_0_V_2_fu_2154_p3;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                q_err_2nd_V_0_0_1_i_reg_475 <= ap_const_lv10_0;
            end if; 
        end if;
    end process;

    q_err_2nd_V_1_0_1_i_reg_463_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln126_reg_2911_pp1_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                q_err_2nd_V_1_0_1_i_reg_463 <= q_err_2nd_1_0_V_2_fu_2453_p3;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                q_err_2nd_V_1_0_1_i_reg_463 <= ap_const_lv10_0;
            end if; 
        end if;
    end process;

    q_err_2nd_V_2_0_1_i_reg_451_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln126_reg_2911_pp1_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                q_err_2nd_V_2_0_1_i_reg_451 <= q_err_2nd_2_0_V_2_fu_2752_p3;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                q_err_2nd_V_2_0_1_i_reg_451 <= ap_const_lv10_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                add_ln180_reg_2901 <= add_ln180_fu_584_p2;
                mul_ln180_reg_2906 <= mul_ln180_fu_2827_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((stream_in_cols_empty_n = ap_const_logic_0) or (stream_in_rows_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                height_reg_2833 <= stream_in_rows_dout;
                imgInput_ncpr_reg_2838 <= add_ln78_fu_538_p2(16 downto 1);
                in_col_loop_bound_reg_2844 <= in_col_loop_bound_fu_554_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                icmp_ln126_reg_2911 <= icmp_ln126_fu_605_p2;
                icmp_ln126_reg_2911_pp1_iter1_reg <= icmp_ln126_reg_2911;
                icmp_ln136_reg_2925_pp1_iter1_reg <= icmp_ln136_reg_2925;
                icmp_ln176_reg_2936_pp1_iter1_reg <= icmp_ln176_reg_2936;
                icmp_ln196_reg_2940_pp1_iter1_reg <= icmp_ln196_reg_2940;
                    zext_ln129_1_reg_2920_pp1_iter1_reg(14 downto 0) <= zext_ln129_1_reg_2920(14 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp1_stage0_11001)) then
                icmp_ln126_reg_2911_pp1_iter2_reg <= icmp_ln126_reg_2911_pp1_iter1_reg;
                icmp_ln136_reg_2925_pp1_iter2_reg <= icmp_ln136_reg_2925_pp1_iter1_reg;
                icmp_ln196_reg_2940_pp1_iter2_reg <= icmp_ln196_reg_2940_pp1_iter1_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln126_fu_605_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                icmp_ln136_reg_2925 <= icmp_ln136_fu_632_p2;
                icmp_ln176_reg_2936 <= icmp_ln176_fu_644_p2;
                icmp_ln196_reg_2940 <= icmp_ln196_fu_650_p2;
                    zext_ln129_1_reg_2920(14 downto 0) <= zext_ln129_1_fu_624_p1(14 downto 0);
                    zext_ln157_reg_2929(14 downto 0) <= zext_ln157_fu_637_p1(14 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln126_reg_2911 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                offset_buffer_0_0_3_reg_2980 <= offset_buffer_0_0_s_q0;
                offset_buffer_1_0_3_reg_2990 <= offset_buffer_1_0_s_q0;
                offset_buffer_2_0_3_reg_3000 <= offset_buffer_2_0_s_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln126_reg_2911_pp1_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                offset_buffer_0_1_3_reg_3134 <= offset_buffer_0_1_s_q0;
                offset_buffer_1_1_3_reg_3166 <= offset_buffer_1_1_s_q0;
                offset_buffer_2_1_3_reg_3198 <= offset_buffer_2_1_s_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln126_reg_2911_pp1_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                offset_prev_NPC_0_0_fu_190 <= offset_prev_NPC_0_0_2_fu_1525_p1;
                offset_prev_NPC_1_0_fu_198 <= offset_prev_NPC_1_0_2_fu_1690_p1;
                offset_prev_NPC_2_0_fu_206 <= offset_prev_NPC_2_0_2_fu_1850_p1;
                offset_prev_NPC_V_0_s_fu_194 <= sext_ln176_fu_2101_p1;
                offset_prev_NPC_V_1_s_fu_202 <= sext_ln176_1_fu_2400_p1;
                offset_prev_NPC_V_2_s_fu_210 <= sext_ln176_2_fu_2699_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln126_reg_2911_pp1_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                p_Result_1_1_i_reg_3159 <= p_Val2_s_fu_214(49 downto 40);
                p_Result_1_2_i_reg_3191 <= p_Val2_s_fu_214(59 downto 50);
                p_Result_1_i_reg_3127 <= p_Val2_s_fu_214(39 downto 30);
                p_Result_28_0_1_i_reg_3081 <= p_Result_28_0_1_i_fu_1012_p3;
                p_Result_28_0_2_i_reg_3115 <= p_Result_28_0_2_i_fu_1184_p3;
                p_Result_28_0_i_reg_3047 <= p_Result_28_0_i_fu_840_p3;
                sext_ln215_1_reg_3093 <= add_ln68_11_fu_1115_p2(9 downto 2);
                sext_ln215_s_reg_3059 <= add_ln68_6_fu_943_p2(9 downto 2);
                sext_ln_reg_3025 <= add_ln68_1_fu_771_p2(9 downto 2);
                tmp_12_reg_3071 <= add_ln68_6_fu_943_p2(10 downto 2);
                tmp_14_reg_3105 <= add_ln68_11_fu_1115_p2(10 downto 2);
                tmp_41_reg_3030 <= add_ln647_1_fu_783_p2(1 downto 1);
                tmp_42_reg_3053 <= add_ln647_3_fu_830_p2(9 downto 9);
                tmp_44_reg_3064 <= add_ln647_5_fu_955_p2(1 downto 1);
                tmp_45_reg_3087 <= add_ln647_7_fu_1002_p2(9 downto 9);
                tmp_47_reg_3098 <= add_ln647_9_fu_1127_p2(1 downto 1);
                tmp_48_reg_3121 <= add_ln647_11_fu_1174_p2(9 downto 9);
                tmp_50_reg_3139 <= sub_ln68_6_fu_1231_p2(6 downto 4);
                tmp_55_reg_3171 <= sub_ln68_8_fu_1307_p2(6 downto 4);
                tmp_60_reg_3203 <= sub_ln68_10_fu_1383_p2(6 downto 4);
                tmp_reg_3037 <= add_ln68_1_fu_771_p2(10 downto 2);
                trunc_ln647_1_reg_3042 <= trunc_ln647_1_fu_836_p1;
                trunc_ln647_2_reg_3076 <= trunc_ln647_2_fu_1008_p1;
                trunc_ln647_3_reg_3110 <= trunc_ln647_3_fu_1180_p1;
                trunc_ln68_10_reg_3154 <= sub_ln68_6_fu_1231_p2(5 downto 4);
                trunc_ln68_12_reg_3181 <= p_Val2_s_fu_214(41 downto 40);
                trunc_ln68_13_reg_3186 <= sub_ln68_8_fu_1307_p2(5 downto 4);
                trunc_ln68_15_reg_3213 <= p_Val2_s_fu_214(51 downto 50);
                trunc_ln68_16_reg_3218 <= sub_ln68_10_fu_1383_p2(5 downto 4);
                trunc_ln68_17_reg_3144 <= trunc_ln68_17_fu_1247_p1;
                trunc_ln68_18_reg_3176 <= trunc_ln68_18_fu_1323_p1;
                trunc_ln68_19_reg_3208 <= trunc_ln68_19_fu_1399_p1;
                trunc_ln68_s_reg_3149 <= p_Val2_s_fu_214(31 downto 30);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln136_reg_2925 = ap_const_lv1_1) and (icmp_ln126_reg_2911 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                p_Val2_s_fu_214 <= stream_in_data_V_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln126_reg_2911 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                trunc_ln68_14_reg_3005 <= trunc_ln68_14_fu_674_p1;
                trunc_ln68_1_reg_2985 <= trunc_ln68_1_fu_666_p1;
                trunc_ln68_9_reg_2995 <= trunc_ln68_9_fu_670_p1;
            end if;
        end if;
    end process;
    zext_ln129_1_reg_2920(15) <= '0';
    zext_ln129_1_reg_2920_pp1_iter1_reg(15) <= '0';
    zext_ln157_reg_2929(63 downto 15) <= "0000000000000000000000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, stream_in_rows_empty_n, stream_in_cols_empty_n, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter3, ap_CS_fsm_state2, icmp_ln126_fu_605_p2, ap_enable_reg_pp1_iter0, ap_enable_reg_pp1_iter2, ap_block_pp1_stage0_subdone, icmp_ln87_fu_560_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((stream_in_cols_empty_n = ap_const_logic_0) or (stream_in_rows_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((icmp_ln87_fu_560_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
            when ap_ST_fsm_pp1_stage0 => 
                if ((not(((icmp_ln126_fu_605_p2 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) and not(((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter2 = ap_const_logic_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                elsif ((((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter2 = ap_const_logic_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1)) or ((icmp_ln126_fu_605_p2 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXX";
        end case;
    end process;
    add_ln126_fu_610_p2 <= std_logic_vector(unsigned(indvar_flatten_reg_440) + unsigned(ap_const_lv32_1));
    add_ln177_fu_685_p2 <= std_logic_vector(signed(ap_const_lv16_FFFF) + signed(zext_ln129_1_reg_2920_pp1_iter1_reg));
    add_ln180_fu_584_p2 <= std_logic_vector(signed(sext_ln180_fu_581_p1) + signed(ap_const_lv17_1FFFF));
    add_ln647_10_fu_1764_p2 <= std_logic_vector(unsigned(tmp_14_reg_3105) + unsigned(zext_ln1353_5_fu_1756_p1));
    add_ln647_11_fu_1174_p2 <= std_logic_vector(unsigned(p_Result_25_0_2_i_fu_1132_p4) + unsigned(zext_ln1353_4_fu_1160_p1));
    add_ln647_12_fu_1948_p2 <= std_logic_vector(unsigned(trunc_ln68_10_reg_3154) + unsigned(trunc_ln68_s_reg_3149));
    add_ln647_13_fu_1952_p2 <= std_logic_vector(unsigned(trunc_ln68_17_reg_3144) + unsigned(add_ln647_12_fu_1948_p2));
    add_ln647_14_fu_2013_p2 <= std_logic_vector(unsigned(zext_ln1353_7_fu_2003_p1) + unsigned(tmp_16_fu_1993_p4));
    add_ln647_15_fu_2019_p2 <= std_logic_vector(unsigned(zext_ln1353_6_fu_1989_p1) + unsigned(p_Result_25_1_i_fu_1957_p4));
    add_ln647_16_fu_2247_p2 <= std_logic_vector(unsigned(trunc_ln68_13_reg_3186) + unsigned(trunc_ln68_12_reg_3181));
    add_ln647_17_fu_2251_p2 <= std_logic_vector(unsigned(trunc_ln68_18_reg_3176) + unsigned(add_ln647_16_fu_2247_p2));
    add_ln647_18_fu_2312_p2 <= std_logic_vector(unsigned(zext_ln1353_9_fu_2302_p1) + unsigned(tmp_17_fu_2292_p4));
    add_ln647_19_fu_2318_p2 <= std_logic_vector(unsigned(zext_ln1353_8_fu_2288_p1) + unsigned(p_Result_25_1_1_i_fu_2256_p4));
    add_ln647_1_fu_783_p2 <= std_logic_vector(unsigned(add_ln647_fu_777_p2) + unsigned(trunc_ln68_1_reg_2985));
    add_ln647_20_fu_2546_p2 <= std_logic_vector(unsigned(trunc_ln68_16_reg_3218) + unsigned(trunc_ln68_15_reg_3213));
    add_ln647_21_fu_2550_p2 <= std_logic_vector(unsigned(trunc_ln68_19_reg_3208) + unsigned(add_ln647_20_fu_2546_p2));
    add_ln647_22_fu_2611_p2 <= std_logic_vector(unsigned(zext_ln1353_11_fu_2601_p1) + unsigned(tmp_18_fu_2591_p4));
    add_ln647_23_fu_2617_p2 <= std_logic_vector(unsigned(zext_ln1353_10_fu_2587_p1) + unsigned(p_Result_25_1_2_i_fu_2555_p4));
    add_ln647_24_fu_1434_p2 <= std_logic_vector(unsigned(sext_ln_reg_3025) + unsigned(zext_ln647_fu_1428_p1));
    add_ln647_25_fu_1599_p2 <= std_logic_vector(unsigned(sext_ln215_s_reg_3059) + unsigned(zext_ln647_1_fu_1593_p1));
    add_ln647_26_fu_1759_p2 <= std_logic_vector(unsigned(sext_ln215_1_reg_3093) + unsigned(zext_ln647_2_fu_1753_p1));
    add_ln647_27_fu_2007_p2 <= std_logic_vector(unsigned(zext_ln647_3_fu_1985_p1) + unsigned(sext_ln215_2_fu_1967_p4));
    add_ln647_28_fu_2306_p2 <= std_logic_vector(unsigned(zext_ln647_4_fu_2284_p1) + unsigned(sext_ln215_3_fu_2266_p4));
    add_ln647_29_fu_2605_p2 <= std_logic_vector(unsigned(zext_ln647_5_fu_2583_p1) + unsigned(sext_ln215_4_fu_2565_p4));
    add_ln647_2_fu_1439_p2 <= std_logic_vector(unsigned(tmp_reg_3037) + unsigned(zext_ln1353_1_fu_1431_p1));
    add_ln647_3_fu_830_p2 <= std_logic_vector(unsigned(p_Result_25_0_i_fu_788_p4) + unsigned(zext_ln1353_fu_816_p1));
    add_ln647_4_fu_949_p2 <= std_logic_vector(unsigned(trunc_ln68_4_fu_913_p4) + unsigned(trunc_ln68_5_fu_923_p4));
    add_ln647_5_fu_955_p2 <= std_logic_vector(unsigned(add_ln647_4_fu_949_p2) + unsigned(trunc_ln68_9_reg_2995));
    add_ln647_6_fu_1604_p2 <= std_logic_vector(unsigned(tmp_12_reg_3071) + unsigned(zext_ln1353_3_fu_1596_p1));
    add_ln647_7_fu_1002_p2 <= std_logic_vector(unsigned(p_Result_25_0_1_i_fu_960_p4) + unsigned(zext_ln1353_2_fu_988_p1));
    add_ln647_8_fu_1121_p2 <= std_logic_vector(unsigned(trunc_ln68_7_fu_1085_p4) + unsigned(trunc_ln68_8_fu_1095_p4));
    add_ln647_9_fu_1127_p2 <= std_logic_vector(unsigned(add_ln647_8_fu_1121_p2) + unsigned(trunc_ln68_14_reg_3005));
    add_ln647_fu_777_p2 <= std_logic_vector(unsigned(trunc_ln68_3_fu_747_p1) + unsigned(trunc_ln68_2_fu_751_p4));
    add_ln68_10_fu_1105_p2 <= std_logic_vector(signed(sext_ln68_30_fu_1074_p1) + signed(sext_ln68_33_fu_1081_p1));
    add_ln68_11_fu_1115_p2 <= std_logic_vector(signed(sext_ln68_34_fu_1111_p1) + signed(zext_ln68_2_fu_1077_p1));
    add_ln68_12_fu_1818_p2 <= std_logic_vector(signed(sext_ln68_29_fu_1785_p1) + signed(sext_ln68_28_fu_1773_p1));
    add_ln68_13_fu_1824_p2 <= std_logic_vector(signed(sext_ln68_35_fu_1789_p1) + signed(sext_ln68_38_fu_1814_p1));
    add_ln68_14_fu_1834_p2 <= std_logic_vector(signed(sext_ln68_39_fu_1830_p1) + signed(add_ln68_12_fu_1818_p2));
    add_ln68_15_fu_1922_p2 <= std_logic_vector(signed(sext_ln68_47_fu_1919_p1) + signed(sext_ln68_46_fu_1913_p1));
    add_ln68_16_fu_1942_p2 <= std_logic_vector(unsigned(zext_ln68_3_fu_1916_p1) + unsigned(sext_ln68_50_fu_1928_p1));
    add_ln68_17_fu_2037_p2 <= std_logic_vector(signed(sext_ln68_7_fu_1468_p1) + signed(sext_ln68_8_fu_1479_p1));
    add_ln68_18_fu_2075_p2 <= std_logic_vector(signed(sext_ln68_44_fu_2071_p1) + signed(sext_ln68_41_fu_2043_p1));
    add_ln68_19_fu_2085_p2 <= std_logic_vector(signed(sext_ln68_45_fu_2081_p1) + signed(sext_ln68_3_fu_1444_p1));
    add_ln68_1_fu_771_p2 <= std_logic_vector(signed(sext_ln68_6_fu_767_p1) + signed(zext_ln68_fu_739_p1));
    add_ln68_20_fu_2221_p2 <= std_logic_vector(signed(sext_ln68_58_fu_2218_p1) + signed(sext_ln68_52_fu_2212_p1));
    add_ln68_21_fu_2241_p2 <= std_logic_vector(unsigned(zext_ln68_4_fu_2215_p1) + unsigned(sext_ln68_59_fu_2227_p1));
    add_ln68_22_fu_2336_p2 <= std_logic_vector(signed(sext_ln68_19_fu_1633_p1) + signed(sext_ln68_20_fu_1644_p1));
    add_ln68_23_fu_2374_p2 <= std_logic_vector(signed(sext_ln68_56_fu_2370_p1) + signed(sext_ln68_53_fu_2342_p1));
    add_ln68_24_fu_2384_p2 <= std_logic_vector(signed(sext_ln68_57_fu_2380_p1) + signed(sext_ln68_15_fu_1609_p1));
    add_ln68_25_fu_2520_p2 <= std_logic_vector(signed(sext_ln68_64_fu_2517_p1) + signed(sext_ln68_63_fu_2511_p1));
    add_ln68_26_fu_2540_p2 <= std_logic_vector(unsigned(zext_ln68_5_fu_2514_p1) + unsigned(sext_ln68_70_fu_2526_p1));
    add_ln68_27_fu_2635_p2 <= std_logic_vector(signed(sext_ln68_31_fu_1793_p1) + signed(sext_ln68_32_fu_1804_p1));
    add_ln68_28_fu_2673_p2 <= std_logic_vector(signed(sext_ln68_68_fu_2669_p1) + signed(sext_ln68_65_fu_2641_p1));
    add_ln68_29_fu_2683_p2 <= std_logic_vector(signed(sext_ln68_69_fu_2679_p1) + signed(sext_ln68_27_fu_1769_p1));
    add_ln68_2_fu_1493_p2 <= std_logic_vector(signed(sext_ln68_5_fu_1460_p1) + signed(sext_ln68_4_fu_1448_p1));
    add_ln68_30_fu_1932_p2 <= std_logic_vector(signed(add_ln68_15_fu_1922_p2) + signed(p_Result_1_i_reg_3127));
    add_ln68_31_fu_1937_p2 <= std_logic_vector(signed(add_ln68_15_fu_1922_p2) + signed(p_Result_1_i_reg_3127));
    add_ln68_32_fu_2231_p2 <= std_logic_vector(signed(add_ln68_20_fu_2221_p2) + signed(p_Result_1_1_i_reg_3159));
    add_ln68_33_fu_2236_p2 <= std_logic_vector(signed(add_ln68_20_fu_2221_p2) + signed(p_Result_1_1_i_reg_3159));
    add_ln68_34_fu_2530_p2 <= std_logic_vector(signed(add_ln68_25_fu_2520_p2) + signed(p_Result_1_2_i_reg_3191));
    add_ln68_35_fu_2535_p2 <= std_logic_vector(signed(add_ln68_25_fu_2520_p2) + signed(p_Result_1_2_i_reg_3191));
    add_ln68_3_fu_1499_p2 <= std_logic_vector(signed(sext_ln68_9_fu_1464_p1) + signed(sext_ln68_10_fu_1489_p1));
    add_ln68_4_fu_1509_p2 <= std_logic_vector(signed(sext_ln68_11_fu_1505_p1) + signed(add_ln68_2_fu_1493_p2));
    add_ln68_5_fu_933_p2 <= std_logic_vector(signed(sext_ln68_14_fu_902_p1) + signed(sext_ln68_18_fu_909_p1));
    add_ln68_6_fu_943_p2 <= std_logic_vector(signed(sext_ln68_21_fu_939_p1) + signed(zext_ln68_1_fu_905_p1));
    add_ln68_7_fu_1658_p2 <= std_logic_vector(signed(sext_ln68_17_fu_1625_p1) + signed(sext_ln68_16_fu_1613_p1));
    add_ln68_8_fu_1664_p2 <= std_logic_vector(signed(sext_ln68_22_fu_1629_p1) + signed(sext_ln68_23_fu_1654_p1));
    add_ln68_9_fu_1674_p2 <= std_logic_vector(signed(sext_ln68_25_fu_1670_p1) + signed(add_ln68_7_fu_1658_p2));
    add_ln68_fu_761_p2 <= std_logic_vector(signed(sext_ln68_1_fu_736_p1) + signed(sext_ln68_2_fu_743_p1));
    add_ln78_fu_538_p2 <= std_logic_vector(unsigned(zext_ln78_fu_534_p1) + unsigned(ap_const_lv17_1));
    and_ln1054_10_fu_2775_p2 <= (xor_ln195_fu_1537_p2 and xor_ln1054_11_fu_2734_p2);
    and_ln1054_11_fu_2781_p2 <= (xor_ln1054_10_fu_2720_p2 and and_ln1054_10_fu_2775_p2);
    and_ln1054_1_fu_1567_p2 <= (xor_ln1054_fu_1542_p2 and and_ln1054_fu_1561_p2);
    and_ln1054_2_fu_1721_p2 <= (xor_ln195_fu_1537_p2 and xor_ln1054_3_fu_1715_p2);
    and_ln1054_3_fu_1727_p2 <= (xor_ln1054_2_fu_1702_p2 and and_ln1054_2_fu_1721_p2);
    and_ln1054_4_fu_1881_p2 <= (xor_ln195_fu_1537_p2 and xor_ln1054_5_fu_1875_p2);
    and_ln1054_5_fu_1887_p2 <= (xor_ln1054_4_fu_1862_p2 and and_ln1054_4_fu_1881_p2);
    and_ln1054_6_fu_2177_p2 <= (xor_ln195_fu_1537_p2 and xor_ln1054_7_fu_2136_p2);
    and_ln1054_7_fu_2183_p2 <= (xor_ln1054_6_fu_2122_p2 and and_ln1054_6_fu_2177_p2);
    and_ln1054_8_fu_2476_p2 <= (xor_ln195_fu_1537_p2 and xor_ln1054_9_fu_2435_p2);
    and_ln1054_9_fu_2482_p2 <= (xor_ln1054_8_fu_2421_p2 and and_ln1054_8_fu_2476_p2);
    and_ln1054_fu_1561_p2 <= (xor_ln195_fu_1537_p2 and xor_ln1054_1_fu_1555_p2);
    ap_CS_fsm_pp1_stage0 <= ap_CS_fsm(3);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state8 <= ap_CS_fsm(4);

    ap_block_pp1_assign_proc : process(ap_CS_fsm, ap_block_pp1_stage0_subdone)
    begin
                ap_block_pp1 <= ((ap_ST_fsm_pp1_stage0 = ap_CS_fsm) and (ap_const_boolean_1 = ap_block_pp1_stage0_subdone));
    end process;

        ap_block_pp1_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage0_01001_assign_proc : process(stream_in_data_V_V_empty_n, stream_out_data_V_V_full_n, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter3, icmp_ln136_reg_2925_pp1_iter2_reg, ap_predicate_op103_read_state5)
    begin
                ap_block_pp1_stage0_01001 <= (((icmp_ln136_reg_2925_pp1_iter2_reg = ap_const_lv1_1) and (stream_out_data_V_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1)) or ((stream_in_data_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op103_read_state5 = ap_const_boolean_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1)));
    end process;


    ap_block_pp1_stage0_11001_assign_proc : process(stream_in_data_V_V_empty_n, stream_out_data_V_V_full_n, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter3, icmp_ln136_reg_2925_pp1_iter2_reg, ap_predicate_op103_read_state5)
    begin
                ap_block_pp1_stage0_11001 <= (((icmp_ln136_reg_2925_pp1_iter2_reg = ap_const_lv1_1) and (stream_out_data_V_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1)) or ((stream_in_data_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op103_read_state5 = ap_const_boolean_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1)));
    end process;


    ap_block_pp1_stage0_subdone_assign_proc : process(stream_in_data_V_V_empty_n, stream_out_data_V_V_full_n, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter3, icmp_ln136_reg_2925_pp1_iter2_reg, ap_predicate_op103_read_state5)
    begin
                ap_block_pp1_stage0_subdone <= (((icmp_ln136_reg_2925_pp1_iter2_reg = ap_const_lv1_1) and (stream_out_data_V_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1)) or ((stream_in_data_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op103_read_state5 = ap_const_boolean_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1)));
    end process;


    ap_block_state1_assign_proc : process(ap_start, ap_done_reg, stream_in_rows_empty_n, stream_in_cols_empty_n)
    begin
                ap_block_state1 <= ((stream_in_cols_empty_n = ap_const_logic_0) or (stream_in_rows_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;

        ap_block_state4_pp1_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state5_pp1_stage0_iter1_assign_proc : process(stream_in_data_V_V_empty_n, ap_predicate_op103_read_state5)
    begin
                ap_block_state5_pp1_stage0_iter1 <= ((stream_in_data_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op103_read_state5 = ap_const_boolean_1));
    end process;

        ap_block_state6_pp1_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state7_pp1_stage0_iter3_assign_proc : process(stream_out_data_V_V_full_n, icmp_ln136_reg_2925_pp1_iter2_reg)
    begin
                ap_block_state7_pp1_stage0_iter3 <= ((icmp_ln136_reg_2925_pp1_iter2_reg = ap_const_lv1_1) and (stream_out_data_V_V_full_n = ap_const_logic_0));
    end process;


    ap_condition_pp1_exit_iter0_state4_assign_proc : process(icmp_ln126_fu_605_p2)
    begin
        if ((icmp_ln126_fu_605_p2 = ap_const_lv1_1)) then 
            ap_condition_pp1_exit_iter0_state4 <= ap_const_logic_1;
        else 
            ap_condition_pp1_exit_iter0_state4 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_enable_operation_106_assign_proc : process(icmp_ln126_reg_2911)
    begin
                ap_enable_operation_106 <= (icmp_ln126_reg_2911 = ap_const_lv1_0);
    end process;


    ap_enable_operation_108_assign_proc : process(icmp_ln126_reg_2911)
    begin
                ap_enable_operation_108 <= (icmp_ln126_reg_2911 = ap_const_lv1_0);
    end process;


    ap_enable_operation_110_assign_proc : process(icmp_ln126_reg_2911)
    begin
                ap_enable_operation_110 <= (icmp_ln126_reg_2911 = ap_const_lv1_0);
    end process;


    ap_enable_operation_113_assign_proc : process(icmp_ln126_reg_2911)
    begin
                ap_enable_operation_113 <= (icmp_ln126_reg_2911 = ap_const_lv1_0);
    end process;


    ap_enable_operation_115_assign_proc : process(icmp_ln126_reg_2911)
    begin
                ap_enable_operation_115 <= (icmp_ln126_reg_2911 = ap_const_lv1_0);
    end process;


    ap_enable_operation_117_assign_proc : process(icmp_ln126_reg_2911)
    begin
                ap_enable_operation_117 <= (icmp_ln126_reg_2911 = ap_const_lv1_0);
    end process;


    ap_enable_operation_147_assign_proc : process(icmp_ln176_reg_2936_pp1_iter1_reg)
    begin
                ap_enable_operation_147 <= (icmp_ln176_reg_2936_pp1_iter1_reg = ap_const_lv1_0);
    end process;


    ap_enable_operation_176_assign_proc : process(icmp_ln176_reg_2936_pp1_iter1_reg)
    begin
                ap_enable_operation_176 <= (icmp_ln176_reg_2936_pp1_iter1_reg = ap_const_lv1_0);
    end process;


    ap_enable_operation_205_assign_proc : process(icmp_ln176_reg_2936_pp1_iter1_reg)
    begin
                ap_enable_operation_205 <= (icmp_ln176_reg_2936_pp1_iter1_reg = ap_const_lv1_0);
    end process;


    ap_enable_operation_214_assign_proc : process(icmp_ln126_reg_2911_pp1_iter1_reg)
    begin
                ap_enable_operation_214 <= (icmp_ln126_reg_2911_pp1_iter1_reg = ap_const_lv1_0);
    end process;


    ap_enable_operation_221_assign_proc : process(icmp_ln176_reg_2936_pp1_iter1_reg)
    begin
                ap_enable_operation_221 <= (icmp_ln176_reg_2936_pp1_iter1_reg = ap_const_lv1_0);
    end process;


    ap_enable_operation_229_assign_proc : process(icmp_ln126_reg_2911_pp1_iter1_reg)
    begin
                ap_enable_operation_229 <= (icmp_ln126_reg_2911_pp1_iter1_reg = ap_const_lv1_0);
    end process;


    ap_enable_operation_236_assign_proc : process(icmp_ln176_reg_2936_pp1_iter1_reg)
    begin
                ap_enable_operation_236 <= (icmp_ln176_reg_2936_pp1_iter1_reg = ap_const_lv1_0);
    end process;


    ap_enable_operation_244_assign_proc : process(icmp_ln126_reg_2911_pp1_iter1_reg)
    begin
                ap_enable_operation_244 <= (icmp_ln126_reg_2911_pp1_iter1_reg = ap_const_lv1_0);
    end process;


    ap_enable_operation_251_assign_proc : process(icmp_ln176_reg_2936_pp1_iter1_reg)
    begin
                ap_enable_operation_251 <= (icmp_ln176_reg_2936_pp1_iter1_reg = ap_const_lv1_0);
    end process;


    ap_enable_operation_88_assign_proc : process(icmp_ln126_fu_605_p2)
    begin
                ap_enable_operation_88 <= (icmp_ln126_fu_605_p2 = ap_const_lv1_0);
    end process;


    ap_enable_operation_91_assign_proc : process(icmp_ln126_fu_605_p2)
    begin
                ap_enable_operation_91 <= (icmp_ln126_fu_605_p2 = ap_const_lv1_0);
    end process;


    ap_enable_operation_94_assign_proc : process(icmp_ln126_fu_605_p2)
    begin
                ap_enable_operation_94 <= (icmp_ln126_fu_605_p2 = ap_const_lv1_0);
    end process;

    ap_enable_pp1 <= (ap_idle_pp1 xor ap_const_logic_1);

    ap_enable_state4_pp1_iter0_stage0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0)
    begin
                ap_enable_state4_pp1_iter0_stage0 <= ((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1));
    end process;


    ap_enable_state5_pp1_iter1_stage0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1)
    begin
                ap_enable_state5_pp1_iter1_stage0 <= ((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0));
    end process;


    ap_enable_state6_pp1_iter2_stage0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter2)
    begin
                ap_enable_state6_pp1_iter2_stage0 <= ((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1));
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp1_assign_proc : process(ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter3, ap_enable_reg_pp1_iter0, ap_enable_reg_pp1_iter2)
    begin
        if (((ap_enable_reg_pp1_iter3 = ap_const_logic_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_0))) then 
            ap_idle_pp1 <= ap_const_logic_1;
        else 
            ap_idle_pp1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_q_err_2nd_V_0_0_1_i_phi_fu_479_p4_assign_proc : process(ap_block_pp1_stage0, ap_enable_reg_pp1_iter3, q_err_2nd_V_0_0_1_i_reg_475, icmp_ln126_reg_2911_pp1_iter2_reg, q_err_2nd_0_0_V_2_fu_2154_p3)
    begin
        if (((icmp_ln126_reg_2911_pp1_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
            ap_phi_mux_q_err_2nd_V_0_0_1_i_phi_fu_479_p4 <= q_err_2nd_0_0_V_2_fu_2154_p3;
        else 
            ap_phi_mux_q_err_2nd_V_0_0_1_i_phi_fu_479_p4 <= q_err_2nd_V_0_0_1_i_reg_475;
        end if; 
    end process;


    ap_phi_mux_q_err_2nd_V_1_0_1_i_phi_fu_467_p4_assign_proc : process(ap_block_pp1_stage0, ap_enable_reg_pp1_iter3, q_err_2nd_V_1_0_1_i_reg_463, icmp_ln126_reg_2911_pp1_iter2_reg, q_err_2nd_1_0_V_2_fu_2453_p3)
    begin
        if (((icmp_ln126_reg_2911_pp1_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
            ap_phi_mux_q_err_2nd_V_1_0_1_i_phi_fu_467_p4 <= q_err_2nd_1_0_V_2_fu_2453_p3;
        else 
            ap_phi_mux_q_err_2nd_V_1_0_1_i_phi_fu_467_p4 <= q_err_2nd_V_1_0_1_i_reg_463;
        end if; 
    end process;


    ap_phi_mux_q_err_2nd_V_2_0_1_i_phi_fu_455_p4_assign_proc : process(ap_block_pp1_stage0, ap_enable_reg_pp1_iter3, q_err_2nd_V_2_0_1_i_reg_451, icmp_ln126_reg_2911_pp1_iter2_reg, q_err_2nd_2_0_V_2_fu_2752_p3)
    begin
        if (((icmp_ln126_reg_2911_pp1_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
            ap_phi_mux_q_err_2nd_V_2_0_1_i_phi_fu_455_p4 <= q_err_2nd_2_0_V_2_fu_2752_p3;
        else 
            ap_phi_mux_q_err_2nd_V_2_0_1_i_phi_fu_455_p4 <= q_err_2nd_V_2_0_1_i_reg_451;
        end if; 
    end process;


    ap_predicate_op103_read_state5_assign_proc : process(icmp_ln126_reg_2911, icmp_ln136_reg_2925)
    begin
                ap_predicate_op103_read_state5 <= ((icmp_ln136_reg_2925 = ap_const_lv1_1) and (icmp_ln126_reg_2911 = ap_const_lv1_0));
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_offset_prev_NPC_0_0_1_assign_proc : process(ap_block_pp1_stage0, ap_enable_reg_pp1_iter3, icmp_ln126_reg_2911_pp1_iter2_reg, offset_prev_NPC_0_0_fu_190, offset_prev_NPC_0_0_2_fu_1525_p1)
    begin
        if (((icmp_ln126_reg_2911_pp1_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
            ap_sig_allocacmp_offset_prev_NPC_0_0_1 <= offset_prev_NPC_0_0_2_fu_1525_p1;
        else 
            ap_sig_allocacmp_offset_prev_NPC_0_0_1 <= offset_prev_NPC_0_0_fu_190;
        end if; 
    end process;


    ap_sig_allocacmp_offset_prev_NPC_1_0_1_assign_proc : process(ap_block_pp1_stage0, ap_enable_reg_pp1_iter3, icmp_ln126_reg_2911_pp1_iter2_reg, offset_prev_NPC_1_0_fu_198, offset_prev_NPC_1_0_2_fu_1690_p1)
    begin
        if (((icmp_ln126_reg_2911_pp1_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
            ap_sig_allocacmp_offset_prev_NPC_1_0_1 <= offset_prev_NPC_1_0_2_fu_1690_p1;
        else 
            ap_sig_allocacmp_offset_prev_NPC_1_0_1 <= offset_prev_NPC_1_0_fu_198;
        end if; 
    end process;


    ap_sig_allocacmp_offset_prev_NPC_2_0_1_assign_proc : process(ap_block_pp1_stage0, ap_enable_reg_pp1_iter3, icmp_ln126_reg_2911_pp1_iter2_reg, offset_prev_NPC_2_0_fu_206, offset_prev_NPC_2_0_2_fu_1850_p1)
    begin
        if (((icmp_ln126_reg_2911_pp1_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
            ap_sig_allocacmp_offset_prev_NPC_2_0_1 <= offset_prev_NPC_2_0_2_fu_1850_p1;
        else 
            ap_sig_allocacmp_offset_prev_NPC_2_0_1 <= offset_prev_NPC_2_0_fu_206;
        end if; 
    end process;


    ap_sig_allocacmp_offset_prev_NPC_V_0_1_assign_proc : process(ap_block_pp1_stage0, ap_enable_reg_pp1_iter3, icmp_ln126_reg_2911_pp1_iter2_reg, offset_prev_NPC_V_0_s_fu_194, sext_ln176_fu_2101_p1)
    begin
        if (((icmp_ln126_reg_2911_pp1_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
            ap_sig_allocacmp_offset_prev_NPC_V_0_1 <= sext_ln176_fu_2101_p1;
        else 
            ap_sig_allocacmp_offset_prev_NPC_V_0_1 <= offset_prev_NPC_V_0_s_fu_194;
        end if; 
    end process;


    ap_sig_allocacmp_offset_prev_NPC_V_1_1_assign_proc : process(ap_block_pp1_stage0, ap_enable_reg_pp1_iter3, icmp_ln126_reg_2911_pp1_iter2_reg, offset_prev_NPC_V_1_s_fu_202, sext_ln176_1_fu_2400_p1)
    begin
        if (((icmp_ln126_reg_2911_pp1_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
            ap_sig_allocacmp_offset_prev_NPC_V_1_1 <= sext_ln176_1_fu_2400_p1;
        else 
            ap_sig_allocacmp_offset_prev_NPC_V_1_1 <= offset_prev_NPC_V_1_s_fu_202;
        end if; 
    end process;


    ap_sig_allocacmp_offset_prev_NPC_V_2_1_assign_proc : process(ap_block_pp1_stage0, ap_enable_reg_pp1_iter3, icmp_ln126_reg_2911_pp1_iter2_reg, offset_prev_NPC_V_2_s_fu_210, sext_ln176_2_fu_2699_p1)
    begin
        if (((icmp_ln126_reg_2911_pp1_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
            ap_sig_allocacmp_offset_prev_NPC_V_2_1 <= sext_ln176_2_fu_2699_p1;
        else 
            ap_sig_allocacmp_offset_prev_NPC_V_2_1 <= offset_prev_NPC_V_2_s_fu_210;
        end if; 
    end process;

    col_index_1_fu_655_p2 <= std_logic_vector(unsigned(select_ln129_fu_616_p3) + unsigned(ap_const_lv15_1));
    col_index_fu_565_p2 <= std_logic_vector(unsigned(col_index_0_i_reg_429) + unsigned(ap_const_lv16_1));
    icmp_ln126_fu_605_p2 <= "1" when (indvar_flatten_reg_440 = mul_ln180_reg_2906) else "0";
    icmp_ln129_fu_600_p2 <= "1" when (signed(zext_ln129_fu_596_p1) < signed(in_col_loop_bound_reg_2844)) else "0";
    icmp_ln136_fu_632_p2 <= "1" when (unsigned(zext_ln129_1_fu_624_p1) < unsigned(imgInput_ncpr_reg_2838)) else "0";
    icmp_ln176_fu_644_p2 <= "1" when (select_ln129_fu_616_p3 = ap_const_lv15_0) else "0";
    icmp_ln196_fu_650_p2 <= "1" when (zext_ln136_fu_628_p1 = add_ln180_reg_2901) else "0";
    icmp_ln87_fu_560_p2 <= "1" when (col_index_0_i_reg_429 = imgInput_ncpr_reg_2838) else "0";
    imgInput_ncpr_fu_544_p4 <= add_ln78_fu_538_p2(16 downto 1);
    in_col_loop_bound_fu_554_p2 <= std_logic_vector(unsigned(imgInput_ncpr_fu_544_p4) + unsigned(ap_const_lv16_1));
    mul_ln180_fu_2827_p0 <= mul_ln180_fu_2827_p00(16 - 1 downto 0);
    mul_ln180_fu_2827_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(in_col_loop_bound_reg_2844),32));
    mul_ln180_fu_2827_p1 <= mul_ln180_fu_2827_p10(16 - 1 downto 0);
    mul_ln180_fu_2827_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(height_reg_2833),32));

    offset_buffer_0_0_s_address0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0, ap_CS_fsm_state2, ap_enable_reg_pp1_iter0, zext_ln157_fu_637_p1, zext_ln94_fu_571_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) then 
            offset_buffer_0_0_s_address0 <= zext_ln157_fu_637_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            offset_buffer_0_0_s_address0 <= zext_ln94_fu_571_p1(10 - 1 downto 0);
        else 
            offset_buffer_0_0_s_address0 <= "XXXXXXXXXX";
        end if; 
    end process;

    offset_buffer_0_0_s_address1 <= sext_ln177_fu_690_p1(10 - 1 downto 0);

    offset_buffer_0_0_s_ce0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_CS_fsm_state2, ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or ((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)))) then 
            offset_buffer_0_0_s_ce0 <= ap_const_logic_1;
        else 
            offset_buffer_0_0_s_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    offset_buffer_0_0_s_ce1_assign_proc : process(ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter2)
    begin
        if (((ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
            offset_buffer_0_0_s_ce1 <= ap_const_logic_1;
        else 
            offset_buffer_0_0_s_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    offset_buffer_0_0_s_we0_assign_proc : process(ap_CS_fsm_state2, icmp_ln87_fu_560_p2)
    begin
        if (((icmp_ln87_fu_560_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            offset_buffer_0_0_s_we0 <= ap_const_logic_1;
        else 
            offset_buffer_0_0_s_we0 <= ap_const_logic_0;
        end if; 
    end process;


    offset_buffer_0_0_s_we1_assign_proc : process(ap_block_pp1_stage0_11001, icmp_ln176_reg_2936_pp1_iter1_reg, ap_enable_reg_pp1_iter2)
    begin
        if (((icmp_ln176_reg_2936_pp1_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
            offset_buffer_0_0_s_we1 <= ap_const_logic_1;
        else 
            offset_buffer_0_0_s_we1 <= ap_const_logic_0;
        end if; 
    end process;


    offset_buffer_0_1_s_address0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, ap_CS_fsm_state2, zext_ln157_reg_2929, zext_ln94_fu_571_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            offset_buffer_0_1_s_address0 <= zext_ln157_reg_2929(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            offset_buffer_0_1_s_address0 <= zext_ln94_fu_571_p1(10 - 1 downto 0);
        else 
            offset_buffer_0_1_s_address0 <= "XXXXXXXXXX";
        end if; 
    end process;

    offset_buffer_0_1_s_address1 <= sext_ln177_fu_690_p1(10 - 1 downto 0);

    offset_buffer_0_1_s_ce0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_CS_fsm_state2, ap_block_pp1_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or ((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)))) then 
            offset_buffer_0_1_s_ce0 <= ap_const_logic_1;
        else 
            offset_buffer_0_1_s_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    offset_buffer_0_1_s_ce1_assign_proc : process(ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter2)
    begin
        if (((ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
            offset_buffer_0_1_s_ce1 <= ap_const_logic_1;
        else 
            offset_buffer_0_1_s_ce1 <= ap_const_logic_0;
        end if; 
    end process;

        offset_buffer_0_1_s_d1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln180_1_fu_1271_p0),9));


    offset_buffer_0_1_s_we0_assign_proc : process(ap_CS_fsm_state2, icmp_ln87_fu_560_p2)
    begin
        if (((icmp_ln87_fu_560_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            offset_buffer_0_1_s_we0 <= ap_const_logic_1;
        else 
            offset_buffer_0_1_s_we0 <= ap_const_logic_0;
        end if; 
    end process;


    offset_buffer_0_1_s_we1_assign_proc : process(ap_block_pp1_stage0_11001, icmp_ln176_reg_2936_pp1_iter1_reg, ap_enable_reg_pp1_iter2)
    begin
        if (((icmp_ln176_reg_2936_pp1_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
            offset_buffer_0_1_s_we1 <= ap_const_logic_1;
        else 
            offset_buffer_0_1_s_we1 <= ap_const_logic_0;
        end if; 
    end process;


    offset_buffer_1_0_s_address0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0, ap_CS_fsm_state2, ap_enable_reg_pp1_iter0, zext_ln157_fu_637_p1, zext_ln94_fu_571_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) then 
            offset_buffer_1_0_s_address0 <= zext_ln157_fu_637_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            offset_buffer_1_0_s_address0 <= zext_ln94_fu_571_p1(10 - 1 downto 0);
        else 
            offset_buffer_1_0_s_address0 <= "XXXXXXXXXX";
        end if; 
    end process;

    offset_buffer_1_0_s_address1 <= sext_ln177_fu_690_p1(10 - 1 downto 0);

    offset_buffer_1_0_s_ce0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_CS_fsm_state2, ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or ((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)))) then 
            offset_buffer_1_0_s_ce0 <= ap_const_logic_1;
        else 
            offset_buffer_1_0_s_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    offset_buffer_1_0_s_ce1_assign_proc : process(ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter2)
    begin
        if (((ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
            offset_buffer_1_0_s_ce1 <= ap_const_logic_1;
        else 
            offset_buffer_1_0_s_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    offset_buffer_1_0_s_we0_assign_proc : process(ap_CS_fsm_state2, icmp_ln87_fu_560_p2)
    begin
        if (((icmp_ln87_fu_560_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            offset_buffer_1_0_s_we0 <= ap_const_logic_1;
        else 
            offset_buffer_1_0_s_we0 <= ap_const_logic_0;
        end if; 
    end process;


    offset_buffer_1_0_s_we1_assign_proc : process(ap_block_pp1_stage0_11001, icmp_ln176_reg_2936_pp1_iter1_reg, ap_enable_reg_pp1_iter2)
    begin
        if (((icmp_ln176_reg_2936_pp1_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
            offset_buffer_1_0_s_we1 <= ap_const_logic_1;
        else 
            offset_buffer_1_0_s_we1 <= ap_const_logic_0;
        end if; 
    end process;


    offset_buffer_1_1_s_address0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, ap_CS_fsm_state2, zext_ln157_reg_2929, zext_ln94_fu_571_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            offset_buffer_1_1_s_address0 <= zext_ln157_reg_2929(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            offset_buffer_1_1_s_address0 <= zext_ln94_fu_571_p1(10 - 1 downto 0);
        else 
            offset_buffer_1_1_s_address0 <= "XXXXXXXXXX";
        end if; 
    end process;

    offset_buffer_1_1_s_address1 <= sext_ln177_fu_690_p1(10 - 1 downto 0);

    offset_buffer_1_1_s_ce0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_CS_fsm_state2, ap_block_pp1_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or ((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)))) then 
            offset_buffer_1_1_s_ce0 <= ap_const_logic_1;
        else 
            offset_buffer_1_1_s_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    offset_buffer_1_1_s_ce1_assign_proc : process(ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter2)
    begin
        if (((ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
            offset_buffer_1_1_s_ce1 <= ap_const_logic_1;
        else 
            offset_buffer_1_1_s_ce1 <= ap_const_logic_0;
        end if; 
    end process;

        offset_buffer_1_1_s_d1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln180_2_fu_1347_p0),9));


    offset_buffer_1_1_s_we0_assign_proc : process(ap_CS_fsm_state2, icmp_ln87_fu_560_p2)
    begin
        if (((icmp_ln87_fu_560_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            offset_buffer_1_1_s_we0 <= ap_const_logic_1;
        else 
            offset_buffer_1_1_s_we0 <= ap_const_logic_0;
        end if; 
    end process;


    offset_buffer_1_1_s_we1_assign_proc : process(ap_block_pp1_stage0_11001, icmp_ln176_reg_2936_pp1_iter1_reg, ap_enable_reg_pp1_iter2)
    begin
        if (((icmp_ln176_reg_2936_pp1_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
            offset_buffer_1_1_s_we1 <= ap_const_logic_1;
        else 
            offset_buffer_1_1_s_we1 <= ap_const_logic_0;
        end if; 
    end process;


    offset_buffer_2_0_s_address0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0, ap_CS_fsm_state2, ap_enable_reg_pp1_iter0, zext_ln157_fu_637_p1, zext_ln94_fu_571_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) then 
            offset_buffer_2_0_s_address0 <= zext_ln157_fu_637_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            offset_buffer_2_0_s_address0 <= zext_ln94_fu_571_p1(10 - 1 downto 0);
        else 
            offset_buffer_2_0_s_address0 <= "XXXXXXXXXX";
        end if; 
    end process;

    offset_buffer_2_0_s_address1 <= sext_ln177_fu_690_p1(10 - 1 downto 0);

    offset_buffer_2_0_s_ce0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_CS_fsm_state2, ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or ((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)))) then 
            offset_buffer_2_0_s_ce0 <= ap_const_logic_1;
        else 
            offset_buffer_2_0_s_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    offset_buffer_2_0_s_ce1_assign_proc : process(ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter2)
    begin
        if (((ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
            offset_buffer_2_0_s_ce1 <= ap_const_logic_1;
        else 
            offset_buffer_2_0_s_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    offset_buffer_2_0_s_we0_assign_proc : process(ap_CS_fsm_state2, icmp_ln87_fu_560_p2)
    begin
        if (((icmp_ln87_fu_560_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            offset_buffer_2_0_s_we0 <= ap_const_logic_1;
        else 
            offset_buffer_2_0_s_we0 <= ap_const_logic_0;
        end if; 
    end process;


    offset_buffer_2_0_s_we1_assign_proc : process(ap_block_pp1_stage0_11001, icmp_ln176_reg_2936_pp1_iter1_reg, ap_enable_reg_pp1_iter2)
    begin
        if (((icmp_ln176_reg_2936_pp1_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
            offset_buffer_2_0_s_we1 <= ap_const_logic_1;
        else 
            offset_buffer_2_0_s_we1 <= ap_const_logic_0;
        end if; 
    end process;


    offset_buffer_2_1_s_address0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, ap_CS_fsm_state2, zext_ln157_reg_2929, zext_ln94_fu_571_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            offset_buffer_2_1_s_address0 <= zext_ln157_reg_2929(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            offset_buffer_2_1_s_address0 <= zext_ln94_fu_571_p1(10 - 1 downto 0);
        else 
            offset_buffer_2_1_s_address0 <= "XXXXXXXXXX";
        end if; 
    end process;

    offset_buffer_2_1_s_address1 <= sext_ln177_fu_690_p1(10 - 1 downto 0);

    offset_buffer_2_1_s_ce0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_CS_fsm_state2, ap_block_pp1_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or ((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)))) then 
            offset_buffer_2_1_s_ce0 <= ap_const_logic_1;
        else 
            offset_buffer_2_1_s_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    offset_buffer_2_1_s_ce1_assign_proc : process(ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter2)
    begin
        if (((ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
            offset_buffer_2_1_s_ce1 <= ap_const_logic_1;
        else 
            offset_buffer_2_1_s_ce1 <= ap_const_logic_0;
        end if; 
    end process;

        offset_buffer_2_1_s_d1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln180_3_fu_1423_p0),9));


    offset_buffer_2_1_s_we0_assign_proc : process(ap_CS_fsm_state2, icmp_ln87_fu_560_p2)
    begin
        if (((icmp_ln87_fu_560_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            offset_buffer_2_1_s_we0 <= ap_const_logic_1;
        else 
            offset_buffer_2_1_s_we0 <= ap_const_logic_0;
        end if; 
    end process;


    offset_buffer_2_1_s_we1_assign_proc : process(ap_block_pp1_stage0_11001, icmp_ln176_reg_2936_pp1_iter1_reg, ap_enable_reg_pp1_iter2)
    begin
        if (((icmp_ln176_reg_2936_pp1_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
            offset_buffer_2_1_s_we1 <= ap_const_logic_1;
        else 
            offset_buffer_2_1_s_we1 <= ap_const_logic_0;
        end if; 
    end process;

        offset_prev_NPC_0_0_2_fu_1525_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_s_fu_1515_p4),10));

        offset_prev_NPC_1_0_2_fu_1690_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_13_fu_1680_p4),10));

        offset_prev_NPC_2_0_2_fu_1850_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_15_fu_1840_p4),10));

    or_ln1054_1_fu_2448_p2 <= (xor_ln1054_8_fu_2421_p2 or icmp_ln196_reg_2940_pp1_iter2_reg);
    or_ln1054_2_fu_2747_p2 <= (xor_ln1054_10_fu_2720_p2 or icmp_ln196_reg_2940_pp1_iter2_reg);
    or_ln1054_fu_2149_p2 <= (xor_ln1054_6_fu_2122_p2 or icmp_ln196_reg_2940_pp1_iter2_reg);
    or_ln196_1_fu_1741_p2 <= (tmp_45_reg_3087 or icmp_ln196_reg_2940_pp1_iter2_reg);
    or_ln196_2_fu_1901_p2 <= (tmp_48_reg_3121 or icmp_ln196_reg_2940_pp1_iter2_reg);
    or_ln196_fu_1581_p2 <= (tmp_42_reg_3053 or icmp_ln196_reg_2940_pp1_iter2_reg);
    p_Result_0_1_i_fu_860_p4 <= p_Val2_s_fu_214(19 downto 10);
    p_Result_0_2_i_fu_1032_p4 <= p_Val2_s_fu_214(29 downto 20);
    p_Result_24_0_1_i_fu_892_p4 <= sub_ln68_2_fu_886_p2(11 downto 4);
    p_Result_24_0_2_i_fu_1064_p4 <= sub_ln68_4_fu_1058_p2(11 downto 4);
    p_Result_24_0_i_fu_726_p4 <= sub_ln68_fu_720_p2(11 downto 4);
    p_Result_25_0_1_i_fu_960_p4 <= add_ln68_6_fu_943_p2(11 downto 2);
    p_Result_25_0_2_i_fu_1132_p4 <= add_ln68_11_fu_1115_p2(11 downto 2);
    p_Result_25_0_i_fu_788_p4 <= add_ln68_1_fu_771_p2(11 downto 2);
    p_Result_25_1_1_i_fu_2256_p4 <= add_ln68_21_fu_2241_p2(11 downto 2);
    p_Result_25_1_2_i_fu_2555_p4 <= add_ln68_26_fu_2540_p2(11 downto 2);
    p_Result_25_1_i_fu_1957_p4 <= add_ln68_16_fu_1942_p2(11 downto 2);
    p_Result_28_0_1_i_fu_1012_p3 <= (tmp_44_fu_980_p3 & trunc_ln647_2_fu_1008_p1);
    p_Result_28_0_2_i_fu_1184_p3 <= (tmp_47_fu_1152_p3 & trunc_ln647_3_fu_1180_p1);
    p_Result_28_0_i_fu_840_p3 <= (tmp_41_fu_808_p3 & trunc_ln647_1_fu_836_p1);
    p_Result_28_1_1_i_fu_2328_p3 <= (tmp_56_fu_2276_p3 & trunc_ln647_5_fu_2324_p1);
    p_Result_28_1_2_i_fu_2627_p3 <= (tmp_61_fu_2575_p3 & trunc_ln647_6_fu_2623_p1);
    p_Result_28_1_i_fu_2029_p3 <= (tmp_51_fu_1977_p3 & trunc_ln647_4_fu_2025_p1);
    q_err_1st_0_0_V_1_fu_2162_p3 <= 
        q_err_1st_V_0_0_1_i_reg_511 when (icmp_ln196_reg_2940_pp1_iter2_reg(0) = '1') else 
        q_err_1st_0_0_V_fu_1534_p1;
    q_err_1st_0_0_V_2_fu_2169_p3 <= 
        q_err_1st_0_0_V_1_fu_2162_p3 when (or_ln1054_fu_2149_p2(0) = '1') else 
        q_err_1st_0_0_V_fu_1534_p1;
        q_err_1st_0_0_V_fu_1534_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Result_28_0_i_reg_3047),10));

    q_err_1st_1_0_V_1_fu_2461_p3 <= 
        q_err_1st_V_1_0_1_i_reg_499 when (icmp_ln196_reg_2940_pp1_iter2_reg(0) = '1') else 
        q_err_1st_1_0_V_fu_1699_p1;
    q_err_1st_1_0_V_2_fu_2468_p3 <= 
        q_err_1st_1_0_V_1_fu_2461_p3 when (or_ln1054_1_fu_2448_p2(0) = '1') else 
        q_err_1st_1_0_V_fu_1699_p1;
        q_err_1st_1_0_V_fu_1699_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Result_28_0_1_i_reg_3081),10));

    q_err_1st_2_0_V_1_fu_2760_p3 <= 
        q_err_1st_V_2_0_1_i_reg_487 when (icmp_ln196_reg_2940_pp1_iter2_reg(0) = '1') else 
        q_err_1st_2_0_V_fu_1859_p1;
    q_err_1st_2_0_V_2_fu_2767_p3 <= 
        q_err_1st_2_0_V_1_fu_2760_p3 when (or_ln1054_2_fu_2747_p2(0) = '1') else 
        q_err_1st_2_0_V_fu_1859_p1;
        q_err_1st_2_0_V_fu_1859_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Result_28_0_2_i_reg_3115),10));

    q_err_2nd_0_0_V_1_fu_2142_p3 <= 
        q_err_2nd_V_0_0_1_i_reg_475 when (icmp_ln196_reg_2940_pp1_iter2_reg(0) = '1') else 
        q_err_2nd_0_0_V_fu_2110_p1;
    q_err_2nd_0_0_V_2_fu_2154_p3 <= 
        q_err_2nd_0_0_V_1_fu_2142_p3 when (or_ln1054_fu_2149_p2(0) = '1') else 
        q_err_2nd_0_0_V_fu_2110_p1;
        q_err_2nd_0_0_V_fu_2110_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Result_28_1_i_fu_2029_p3),10));

    q_err_2nd_1_0_V_1_fu_2441_p3 <= 
        q_err_2nd_V_1_0_1_i_reg_463 when (icmp_ln196_reg_2940_pp1_iter2_reg(0) = '1') else 
        q_err_2nd_1_0_V_fu_2409_p1;
    q_err_2nd_1_0_V_2_fu_2453_p3 <= 
        q_err_2nd_1_0_V_1_fu_2441_p3 when (or_ln1054_1_fu_2448_p2(0) = '1') else 
        q_err_2nd_1_0_V_fu_2409_p1;
        q_err_2nd_1_0_V_fu_2409_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Result_28_1_1_i_fu_2328_p3),10));

    q_err_2nd_2_0_V_1_fu_2740_p3 <= 
        q_err_2nd_V_2_0_1_i_reg_451 when (icmp_ln196_reg_2940_pp1_iter2_reg(0) = '1') else 
        q_err_2nd_2_0_V_fu_2708_p1;
    q_err_2nd_2_0_V_2_fu_2752_p3 <= 
        q_err_2nd_2_0_V_1_fu_2740_p3 when (or_ln1054_2_fu_2747_p2(0) = '1') else 
        q_err_2nd_2_0_V_fu_2708_p1;
        q_err_2nd_2_0_V_fu_2708_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Result_28_1_2_i_fu_2627_p3),10));

    select_ln1054_10_fu_2503_p3 <= 
        select_ln196_8_fu_2496_p3 when (or_ln1054_1_fu_2448_p2(0) = '1') else 
        ap_const_lv8_0;
    select_ln1054_13_fu_2787_p3 <= 
        add_ln647_29_fu_2605_p2 when (and_ln1054_11_fu_2781_p2(0) = '1') else 
        ap_const_lv8_FF;
    select_ln1054_14_fu_2802_p3 <= 
        select_ln196_11_fu_2795_p3 when (or_ln1054_2_fu_2747_p2(0) = '1') else 
        ap_const_lv8_0;
    select_ln1054_1_fu_1733_p3 <= 
        add_ln647_25_fu_1599_p2 when (and_ln1054_3_fu_1727_p2(0) = '1') else 
        ap_const_lv8_FF;
    select_ln1054_2_fu_1893_p3 <= 
        add_ln647_26_fu_1759_p2 when (and_ln1054_5_fu_1887_p2(0) = '1') else 
        ap_const_lv8_FF;
    select_ln1054_5_fu_2189_p3 <= 
        add_ln647_27_fu_2007_p2 when (and_ln1054_7_fu_2183_p2(0) = '1') else 
        ap_const_lv8_FF;
    select_ln1054_6_fu_2204_p3 <= 
        select_ln196_5_fu_2197_p3 when (or_ln1054_fu_2149_p2(0) = '1') else 
        ap_const_lv8_0;
    select_ln1054_9_fu_2488_p3 <= 
        add_ln647_28_fu_2306_p2 when (and_ln1054_9_fu_2482_p2(0) = '1') else 
        ap_const_lv8_FF;
    select_ln1054_fu_1573_p3 <= 
        add_ln647_24_fu_1434_p2 when (and_ln1054_1_fu_1567_p2(0) = '1') else 
        ap_const_lv8_FF;
    select_ln129_fu_616_p3 <= 
        col_index28_0_i_reg_523 when (icmp_ln129_fu_600_p2(0) = '1') else 
        ap_const_lv15_0;
    select_ln196_11_fu_2795_p3 <= 
        ap_const_lv8_0 when (icmp_ln196_reg_2940_pp1_iter2_reg(0) = '1') else 
        select_ln1054_13_fu_2787_p3;
    select_ln196_1_fu_1745_p3 <= 
        ap_const_lv8_0 when (or_ln196_1_fu_1741_p2(0) = '1') else 
        select_ln1054_1_fu_1733_p3;
    select_ln196_2_fu_1905_p3 <= 
        ap_const_lv8_0 when (or_ln196_2_fu_1901_p2(0) = '1') else 
        select_ln1054_2_fu_1893_p3;
    select_ln196_5_fu_2197_p3 <= 
        ap_const_lv8_0 when (icmp_ln196_reg_2940_pp1_iter2_reg(0) = '1') else 
        select_ln1054_5_fu_2189_p3;
    select_ln196_8_fu_2496_p3 <= 
        ap_const_lv8_0 when (icmp_ln196_reg_2940_pp1_iter2_reg(0) = '1') else 
        select_ln1054_9_fu_2488_p3;
    select_ln196_fu_1585_p3 <= 
        ap_const_lv8_0 when (or_ln196_fu_1581_p2(0) = '1') else 
        select_ln1054_fu_1573_p3;
        sext_ln176_1_fu_2400_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_57_fu_2390_p4),8));

        sext_ln176_2_fu_2699_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_62_fu_2689_p4),8));

        sext_ln176_fu_2101_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_52_fu_2091_p4),8));

        sext_ln177_fu_690_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln177_fu_685_p2),64));

    sext_ln180_1_fu_1271_p0 <= ap_sig_allocacmp_offset_prev_NPC_V_0_1;
    sext_ln180_2_fu_1347_p0 <= ap_sig_allocacmp_offset_prev_NPC_V_1_1;
    sext_ln180_3_fu_1423_p0 <= ap_sig_allocacmp_offset_prev_NPC_V_2_1;
        sext_ln180_fu_581_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(in_col_loop_bound_reg_2844),17));

    sext_ln215_2_fu_1967_p4 <= add_ln68_31_fu_1937_p2(9 downto 2);
    sext_ln215_3_fu_2266_p4 <= add_ln68_33_fu_2236_p2(9 downto 2);
    sext_ln215_4_fu_2565_p4 <= add_ln68_35_fu_2535_p2(9 downto 2);
        sext_ln68_10_fu_1489_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln68_1_fu_1483_p2),11));

        sext_ln68_11_fu_1505_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln68_3_fu_1499_p2),13));

        sext_ln68_12_fu_870_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ap_phi_mux_q_err_2nd_V_1_0_1_i_phi_fu_467_p4),12));

        sext_ln68_14_fu_902_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(offset_buffer_1_0_3_reg_2990),11));

        sext_ln68_15_fu_1609_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(q_err_2nd_V_1_0_1_i_reg_463),11));

        sext_ln68_16_fu_1613_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(q_err_2nd_V_1_0_1_i_reg_463),13));

        sext_ln68_17_fu_1625_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln68_4_fu_1617_p3),13));

        sext_ln68_18_fu_909_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Result_24_0_1_i_fu_892_p4),11));

        sext_ln68_19_fu_1633_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Result_28_0_1_i_reg_3081),6));

        sext_ln68_1_fu_736_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(offset_buffer_0_0_3_reg_2980),11));

        sext_ln68_20_fu_1644_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln68_5_fu_1636_p4),6));

        sext_ln68_21_fu_939_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln68_5_fu_933_p2),12));

        sext_ln68_22_fu_1629_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(q_err_1st_V_1_0_1_i_reg_499),11));

        sext_ln68_23_fu_1654_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln68_3_fu_1648_p2),11));

        sext_ln68_24_fu_1042_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ap_phi_mux_q_err_2nd_V_2_0_1_i_phi_fu_455_p4),12));

        sext_ln68_25_fu_1670_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln68_8_fu_1664_p2),13));

        sext_ln68_27_fu_1769_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(q_err_2nd_V_2_0_1_i_reg_451),11));

        sext_ln68_28_fu_1773_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(q_err_2nd_V_2_0_1_i_reg_451),13));

        sext_ln68_29_fu_1785_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln68_7_fu_1777_p3),13));

        sext_ln68_2_fu_743_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Result_24_0_i_fu_726_p4),11));

        sext_ln68_30_fu_1074_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(offset_buffer_2_0_3_reg_3000),11));

        sext_ln68_31_fu_1793_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Result_28_0_2_i_reg_3115),6));

        sext_ln68_32_fu_1804_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln68_8_fu_1796_p4),6));

        sext_ln68_33_fu_1081_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Result_24_0_2_i_fu_1064_p4),11));

        sext_ln68_34_fu_1111_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln68_10_fu_1105_p2),12));

        sext_ln68_35_fu_1789_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(q_err_1st_V_2_0_1_i_reg_487),11));

        sext_ln68_36_fu_1213_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Result_28_0_i_fu_840_p3),7));

        sext_ln68_37_fu_1227_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln68_9_fu_1217_p4),7));

        sext_ln68_38_fu_1814_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln68_5_fu_1808_p2),11));

        sext_ln68_39_fu_1830_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln68_13_fu_1824_p2),13));

        sext_ln68_3_fu_1444_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(q_err_2nd_V_0_0_1_i_reg_475),11));

        sext_ln68_41_fu_2043_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln68_17_fu_2037_p2),7));

        sext_ln68_42_fu_2047_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Result_28_1_i_fu_2029_p3),6));

        sext_ln68_43_fu_2061_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln68_s_fu_2051_p4),6));

        sext_ln68_44_fu_2071_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln68_7_fu_2065_p2),7));

        sext_ln68_45_fu_2081_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln68_18_fu_2075_p2),11));

        sext_ln68_46_fu_1913_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(offset_buffer_0_1_3_reg_3134),10));

        sext_ln68_47_fu_1919_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_50_reg_3139),10));

        sext_ln68_48_fu_1289_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Result_28_0_1_i_fu_1012_p3),7));

        sext_ln68_49_fu_1303_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln68_10_fu_1293_p4),7));

        sext_ln68_4_fu_1448_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(q_err_2nd_V_0_0_1_i_reg_475),13));

        sext_ln68_50_fu_1928_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln68_15_fu_1922_p2),12));

        sext_ln68_52_fu_2212_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(offset_buffer_1_1_3_reg_3166),10));

        sext_ln68_53_fu_2342_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln68_22_fu_2336_p2),7));

        sext_ln68_54_fu_2346_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Result_28_1_1_i_fu_2328_p3),6));

        sext_ln68_55_fu_2360_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln68_11_fu_2350_p4),6));

        sext_ln68_56_fu_2370_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln68_9_fu_2364_p2),7));

        sext_ln68_57_fu_2380_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln68_23_fu_2374_p2),11));

        sext_ln68_58_fu_2218_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_55_reg_3171),10));

        sext_ln68_59_fu_2227_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln68_20_fu_2221_p2),12));

        sext_ln68_5_fu_1460_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln68_1_fu_1452_p3),13));

        sext_ln68_60_fu_1365_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Result_28_0_2_i_fu_1184_p3),7));

        sext_ln68_61_fu_1379_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln68_12_fu_1369_p4),7));

        sext_ln68_63_fu_2511_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(offset_buffer_2_1_3_reg_3198),10));

        sext_ln68_64_fu_2517_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_60_reg_3203),10));

        sext_ln68_65_fu_2641_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln68_27_fu_2635_p2),7));

        sext_ln68_66_fu_2645_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Result_28_1_2_i_fu_2627_p3),6));

        sext_ln68_67_fu_2659_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln68_13_fu_2649_p4),6));

        sext_ln68_68_fu_2669_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln68_11_fu_2663_p2),7));

        sext_ln68_69_fu_2679_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln68_28_fu_2673_p2),11));

        sext_ln68_6_fu_767_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln68_fu_761_p2),12));

        sext_ln68_70_fu_2526_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln68_25_fu_2520_p2),12));

        sext_ln68_7_fu_1468_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Result_28_0_i_reg_3047),6));

        sext_ln68_8_fu_1479_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln68_2_fu_1471_p4),6));

        sext_ln68_9_fu_1464_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(q_err_1st_V_0_0_1_i_reg_511),11));

        sext_ln68_fu_704_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ap_phi_mux_q_err_2nd_V_0_0_1_i_phi_fu_479_p4),12));

    shl_ln68_10_fu_1293_p4 <= ((tmp_44_fu_980_p3 & trunc_ln647_2_fu_1008_p1) & ap_const_lv3_0);
    shl_ln68_11_fu_2350_p4 <= ((tmp_56_fu_2276_p3 & trunc_ln647_5_fu_2324_p1) & ap_const_lv2_0);
    shl_ln68_12_fu_1369_p4 <= ((tmp_47_fu_1152_p3 & trunc_ln647_3_fu_1180_p1) & ap_const_lv3_0);
    shl_ln68_13_fu_2649_p4 <= ((tmp_61_fu_2575_p3 & trunc_ln647_6_fu_2623_p1) & ap_const_lv2_0);
    shl_ln68_1_fu_1452_p3 <= (q_err_2nd_V_0_0_1_i_reg_475 & ap_const_lv2_0);
    shl_ln68_2_fu_1471_p4 <= ((tmp_41_reg_3030 & trunc_ln647_1_reg_3042) & ap_const_lv2_0);
    shl_ln68_3_fu_878_p3 <= (trunc_ln68_6_fu_874_p1 & ap_const_lv3_0);
    shl_ln68_4_fu_1617_p3 <= (q_err_2nd_V_1_0_1_i_reg_463 & ap_const_lv2_0);
    shl_ln68_5_fu_1636_p4 <= ((tmp_44_reg_3064 & trunc_ln647_2_reg_3076) & ap_const_lv2_0);
    shl_ln68_6_fu_1050_p3 <= (trunc_ln68_11_fu_1046_p1 & ap_const_lv3_0);
    shl_ln68_7_fu_1777_p3 <= (q_err_2nd_V_2_0_1_i_reg_451 & ap_const_lv2_0);
    shl_ln68_8_fu_1796_p4 <= ((tmp_47_reg_3098 & trunc_ln647_3_reg_3110) & ap_const_lv2_0);
    shl_ln68_9_fu_1217_p4 <= ((tmp_41_fu_808_p3 & trunc_ln647_1_fu_836_p1) & ap_const_lv3_0);
    shl_ln68_s_fu_2051_p4 <= ((tmp_51_fu_1977_p3 & trunc_ln647_4_fu_2025_p1) & ap_const_lv2_0);
    shl_ln_fu_712_p3 <= (trunc_ln68_fu_708_p1 & ap_const_lv3_0);

    stream_in_cols_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, stream_in_cols_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            stream_in_cols_blk_n <= stream_in_cols_empty_n;
        else 
            stream_in_cols_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    stream_in_cols_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, stream_in_rows_empty_n, stream_in_cols_empty_n)
    begin
        if ((not(((stream_in_cols_empty_n = ap_const_logic_0) or (stream_in_rows_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            stream_in_cols_read <= ap_const_logic_1;
        else 
            stream_in_cols_read <= ap_const_logic_0;
        end if; 
    end process;


    stream_in_data_V_V_blk_n_assign_proc : process(stream_in_data_V_V_empty_n, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, icmp_ln126_reg_2911, icmp_ln136_reg_2925)
    begin
        if (((icmp_ln136_reg_2925 = ap_const_lv1_1) and (icmp_ln126_reg_2911 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            stream_in_data_V_V_blk_n <= stream_in_data_V_V_empty_n;
        else 
            stream_in_data_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    stream_in_data_V_V_read_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_predicate_op103_read_state5, ap_block_pp1_stage0_11001)
    begin
        if (((ap_predicate_op103_read_state5 = ap_const_boolean_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
            stream_in_data_V_V_read <= ap_const_logic_1;
        else 
            stream_in_data_V_V_read <= ap_const_logic_0;
        end if; 
    end process;


    stream_in_rows_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, stream_in_rows_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            stream_in_rows_blk_n <= stream_in_rows_empty_n;
        else 
            stream_in_rows_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    stream_in_rows_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, stream_in_rows_empty_n, stream_in_cols_empty_n)
    begin
        if ((not(((stream_in_cols_empty_n = ap_const_logic_0) or (stream_in_rows_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            stream_in_rows_read <= ap_const_logic_1;
        else 
            stream_in_rows_read <= ap_const_logic_0;
        end if; 
    end process;


    stream_out_data_V_V_blk_n_assign_proc : process(stream_out_data_V_V_full_n, ap_block_pp1_stage0, ap_enable_reg_pp1_iter3, icmp_ln136_reg_2925_pp1_iter2_reg)
    begin
        if (((icmp_ln136_reg_2925_pp1_iter2_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
            stream_out_data_V_V_blk_n <= stream_out_data_V_V_full_n;
        else 
            stream_out_data_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    stream_out_data_V_V_din <= (((((select_ln1054_14_fu_2802_p3 & select_ln1054_10_fu_2503_p3) & select_ln1054_6_fu_2204_p3) & select_ln196_2_fu_1905_p3) & select_ln196_1_fu_1745_p3) & select_ln196_fu_1585_p3);

    stream_out_data_V_V_write_assign_proc : process(ap_enable_reg_pp1_iter3, icmp_ln136_reg_2925_pp1_iter2_reg, ap_block_pp1_stage0_11001)
    begin
        if (((icmp_ln136_reg_2925_pp1_iter2_reg = ap_const_lv1_1) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
            stream_out_data_V_V_write <= ap_const_logic_1;
        else 
            stream_out_data_V_V_write <= ap_const_logic_0;
        end if; 
    end process;

    sub_ln68_10_fu_1383_p2 <= std_logic_vector(signed(sext_ln68_61_fu_1379_p1) - signed(sext_ln68_60_fu_1365_p1));
    sub_ln68_11_fu_2663_p2 <= std_logic_vector(signed(sext_ln68_67_fu_2659_p1) - signed(sext_ln68_66_fu_2645_p1));
    sub_ln68_1_fu_1483_p2 <= std_logic_vector(signed(sext_ln68_8_fu_1479_p1) - signed(sext_ln68_7_fu_1468_p1));
    sub_ln68_2_fu_886_p2 <= std_logic_vector(unsigned(shl_ln68_3_fu_878_p3) - unsigned(sext_ln68_12_fu_870_p1));
    sub_ln68_3_fu_1648_p2 <= std_logic_vector(signed(sext_ln68_20_fu_1644_p1) - signed(sext_ln68_19_fu_1633_p1));
    sub_ln68_4_fu_1058_p2 <= std_logic_vector(unsigned(shl_ln68_6_fu_1050_p3) - unsigned(sext_ln68_24_fu_1042_p1));
    sub_ln68_5_fu_1808_p2 <= std_logic_vector(signed(sext_ln68_32_fu_1804_p1) - signed(sext_ln68_31_fu_1793_p1));
    sub_ln68_6_fu_1231_p2 <= std_logic_vector(signed(sext_ln68_37_fu_1227_p1) - signed(sext_ln68_36_fu_1213_p1));
    sub_ln68_7_fu_2065_p2 <= std_logic_vector(signed(sext_ln68_43_fu_2061_p1) - signed(sext_ln68_42_fu_2047_p1));
    sub_ln68_8_fu_1307_p2 <= std_logic_vector(signed(sext_ln68_49_fu_1303_p1) - signed(sext_ln68_48_fu_1289_p1));
    sub_ln68_9_fu_2364_p2 <= std_logic_vector(signed(sext_ln68_55_fu_2360_p1) - signed(sext_ln68_54_fu_2346_p1));
    sub_ln68_fu_720_p2 <= std_logic_vector(unsigned(shl_ln_fu_712_p3) - unsigned(sext_ln68_fu_704_p1));
    tmp_13_fu_1680_p4 <= add_ln68_9_fu_1674_p2(12 downto 4);
    tmp_15_fu_1840_p4 <= add_ln68_14_fu_1834_p2(12 downto 4);
    tmp_16_fu_1993_p4 <= add_ln68_16_fu_1942_p2(10 downto 2);
    tmp_17_fu_2292_p4 <= add_ln68_21_fu_2241_p2(10 downto 2);
    tmp_18_fu_2591_p4 <= add_ln68_26_fu_2540_p2(10 downto 2);
    tmp_41_fu_808_p3 <= add_ln647_1_fu_783_p2(1 downto 1);
    tmp_43_fu_1547_p3 <= add_ln647_2_fu_1439_p2(8 downto 8);
    tmp_44_fu_980_p3 <= add_ln647_5_fu_955_p2(1 downto 1);
    tmp_46_fu_1707_p3 <= add_ln647_6_fu_1604_p2(8 downto 8);
    tmp_47_fu_1152_p3 <= add_ln647_9_fu_1127_p2(1 downto 1);
    tmp_49_fu_1867_p3 <= add_ln647_10_fu_1764_p2(8 downto 8);
    tmp_51_fu_1977_p3 <= add_ln647_13_fu_1952_p2(1 downto 1);
    tmp_52_fu_2091_p4 <= add_ln68_19_fu_2085_p2(10 downto 4);
    tmp_53_fu_2114_p3 <= add_ln647_15_fu_2019_p2(9 downto 9);
    tmp_54_fu_2128_p3 <= add_ln647_14_fu_2013_p2(8 downto 8);
    tmp_56_fu_2276_p3 <= add_ln647_17_fu_2251_p2(1 downto 1);
    tmp_57_fu_2390_p4 <= add_ln68_24_fu_2384_p2(10 downto 4);
    tmp_58_fu_2413_p3 <= add_ln647_19_fu_2318_p2(9 downto 9);
    tmp_59_fu_2427_p3 <= add_ln647_18_fu_2312_p2(8 downto 8);
    tmp_61_fu_2575_p3 <= add_ln647_21_fu_2550_p2(1 downto 1);
    tmp_62_fu_2689_p4 <= add_ln68_29_fu_2683_p2(10 downto 4);
    tmp_63_fu_2712_p3 <= add_ln647_23_fu_2617_p2(9 downto 9);
    tmp_64_fu_2726_p3 <= add_ln647_22_fu_2611_p2(8 downto 8);
    tmp_s_fu_1515_p4 <= add_ln68_4_fu_1509_p2(12 downto 4);
    trunc_ln647_1_fu_836_p1 <= add_ln68_1_fu_771_p2(2 - 1 downto 0);
    trunc_ln647_2_fu_1008_p1 <= add_ln68_6_fu_943_p2(2 - 1 downto 0);
    trunc_ln647_3_fu_1180_p1 <= add_ln68_11_fu_1115_p2(2 - 1 downto 0);
    trunc_ln647_4_fu_2025_p1 <= add_ln68_30_fu_1932_p2(2 - 1 downto 0);
    trunc_ln647_5_fu_2324_p1 <= add_ln68_32_fu_2231_p2(2 - 1 downto 0);
    trunc_ln647_6_fu_2623_p1 <= add_ln68_34_fu_2530_p2(2 - 1 downto 0);
    trunc_ln647_fu_700_p1 <= p_Val2_s_fu_214(10 - 1 downto 0);
    trunc_ln68_11_fu_1046_p1 <= ap_phi_mux_q_err_2nd_V_2_0_1_i_phi_fu_455_p4(9 - 1 downto 0);
    trunc_ln68_14_fu_674_p0 <= offset_buffer_2_0_s_q0;
    trunc_ln68_14_fu_674_p1 <= trunc_ln68_14_fu_674_p0(2 - 1 downto 0);
    trunc_ln68_17_fu_1247_p0 <= offset_buffer_0_1_s_q0;
    trunc_ln68_17_fu_1247_p1 <= trunc_ln68_17_fu_1247_p0(2 - 1 downto 0);
    trunc_ln68_18_fu_1323_p0 <= offset_buffer_1_1_s_q0;
    trunc_ln68_18_fu_1323_p1 <= trunc_ln68_18_fu_1323_p0(2 - 1 downto 0);
    trunc_ln68_19_fu_1399_p0 <= offset_buffer_2_1_s_q0;
    trunc_ln68_19_fu_1399_p1 <= trunc_ln68_19_fu_1399_p0(2 - 1 downto 0);
    trunc_ln68_1_fu_666_p0 <= offset_buffer_0_0_s_q0;
    trunc_ln68_1_fu_666_p1 <= trunc_ln68_1_fu_666_p0(2 - 1 downto 0);
    trunc_ln68_2_fu_751_p4 <= sub_ln68_fu_720_p2(5 downto 4);
    trunc_ln68_3_fu_747_p1 <= p_Val2_s_fu_214(2 - 1 downto 0);
    trunc_ln68_4_fu_913_p4 <= p_Val2_s_fu_214(11 downto 10);
    trunc_ln68_5_fu_923_p4 <= sub_ln68_2_fu_886_p2(5 downto 4);
    trunc_ln68_6_fu_874_p1 <= ap_phi_mux_q_err_2nd_V_1_0_1_i_phi_fu_467_p4(9 - 1 downto 0);
    trunc_ln68_7_fu_1085_p4 <= p_Val2_s_fu_214(21 downto 20);
    trunc_ln68_8_fu_1095_p4 <= sub_ln68_4_fu_1058_p2(5 downto 4);
    trunc_ln68_9_fu_670_p0 <= offset_buffer_1_0_s_q0;
    trunc_ln68_9_fu_670_p1 <= trunc_ln68_9_fu_670_p0(2 - 1 downto 0);
    trunc_ln68_fu_708_p1 <= ap_phi_mux_q_err_2nd_V_0_0_1_i_phi_fu_479_p4(9 - 1 downto 0);
    xor_ln1054_10_fu_2720_p2 <= (tmp_63_fu_2712_p3 xor ap_const_lv1_1);
    xor_ln1054_11_fu_2734_p2 <= (tmp_64_fu_2726_p3 xor ap_const_lv1_1);
    xor_ln1054_1_fu_1555_p2 <= (tmp_43_fu_1547_p3 xor ap_const_lv1_1);
    xor_ln1054_2_fu_1702_p2 <= (tmp_45_reg_3087 xor ap_const_lv1_1);
    xor_ln1054_3_fu_1715_p2 <= (tmp_46_fu_1707_p3 xor ap_const_lv1_1);
    xor_ln1054_4_fu_1862_p2 <= (tmp_48_reg_3121 xor ap_const_lv1_1);
    xor_ln1054_5_fu_1875_p2 <= (tmp_49_fu_1867_p3 xor ap_const_lv1_1);
    xor_ln1054_6_fu_2122_p2 <= (tmp_53_fu_2114_p3 xor ap_const_lv1_1);
    xor_ln1054_7_fu_2136_p2 <= (tmp_54_fu_2128_p3 xor ap_const_lv1_1);
    xor_ln1054_8_fu_2421_p2 <= (tmp_58_fu_2413_p3 xor ap_const_lv1_1);
    xor_ln1054_9_fu_2435_p2 <= (tmp_59_fu_2427_p3 xor ap_const_lv1_1);
    xor_ln1054_fu_1542_p2 <= (tmp_42_reg_3053 xor ap_const_lv1_1);
    xor_ln195_fu_1537_p2 <= (icmp_ln196_reg_2940_pp1_iter2_reg xor ap_const_lv1_1);
    zext_ln129_1_fu_624_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln129_fu_616_p3),16));
    zext_ln129_fu_596_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(col_index28_0_i_reg_523),16));
    zext_ln1353_10_fu_2587_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_61_fu_2575_p3),10));
    zext_ln1353_11_fu_2601_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_61_fu_2575_p3),9));
    zext_ln1353_1_fu_1431_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_41_reg_3030),9));
    zext_ln1353_2_fu_988_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_44_fu_980_p3),10));
    zext_ln1353_3_fu_1596_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_44_reg_3064),9));
    zext_ln1353_4_fu_1160_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_47_fu_1152_p3),10));
    zext_ln1353_5_fu_1756_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_47_reg_3098),9));
    zext_ln1353_6_fu_1989_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_51_fu_1977_p3),10));
    zext_ln1353_7_fu_2003_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_51_fu_1977_p3),9));
    zext_ln1353_8_fu_2288_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_56_fu_2276_p3),10));
    zext_ln1353_9_fu_2302_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_56_fu_2276_p3),9));
    zext_ln1353_fu_816_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_41_fu_808_p3),10));
    zext_ln136_fu_628_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln129_fu_616_p3),17));
    zext_ln157_fu_637_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln129_fu_616_p3),64));
    zext_ln647_1_fu_1593_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_44_reg_3064),8));
    zext_ln647_2_fu_1753_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_47_reg_3098),8));
    zext_ln647_3_fu_1985_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_51_fu_1977_p3),8));
    zext_ln647_4_fu_2284_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_56_fu_2276_p3),8));
    zext_ln647_5_fu_2583_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_61_fu_2575_p3),8));
    zext_ln647_fu_1428_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_41_reg_3030),8));
    zext_ln68_1_fu_905_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_0_1_i_fu_860_p4),12));
    zext_ln68_2_fu_1077_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_0_2_i_fu_1032_p4),12));
    zext_ln68_3_fu_1916_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_1_i_reg_3127),12));
    zext_ln68_4_fu_2215_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_1_1_i_reg_3159),12));
    zext_ln68_5_fu_2514_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_1_2_i_reg_3191),12));
    zext_ln68_fu_739_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln647_fu_700_p1),12));
    zext_ln78_fu_534_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(stream_in_cols_dout),17));
    zext_ln94_fu_571_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(col_index_0_i_reg_429),64));
end behav;
