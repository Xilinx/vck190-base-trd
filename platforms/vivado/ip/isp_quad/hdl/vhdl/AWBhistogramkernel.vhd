-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.2
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity AWBhistogramkernel is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    src1_rows_read : IN STD_LOGIC_VECTOR (15 downto 0);
    src1_cols_read : IN STD_LOGIC_VECTOR (15 downto 0);
    src1_data_V_V_dout : IN STD_LOGIC_VECTOR (59 downto 0);
    src1_data_V_V_empty_n : IN STD_LOGIC;
    src1_data_V_V_read : OUT STD_LOGIC;
    src2_data_V_V_din : OUT STD_LOGIC_VECTOR (59 downto 0);
    src2_data_V_V_full_n : IN STD_LOGIC;
    src2_data_V_V_write : OUT STD_LOGIC;
    hist_0_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    hist_0_ce0 : OUT STD_LOGIC;
    hist_0_we0 : OUT STD_LOGIC;
    hist_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    hist_1_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    hist_1_ce0 : OUT STD_LOGIC;
    hist_1_we0 : OUT STD_LOGIC;
    hist_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    hist_2_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    hist_2_ce0 : OUT STD_LOGIC;
    hist_2_we0 : OUT STD_LOGIC;
    hist_2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of AWBhistogramkernel is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (10 downto 0) := "00000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (10 downto 0) := "00000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (10 downto 0) := "00000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (10 downto 0) := "00000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (10 downto 0) := "00000100000";
    constant ap_ST_fsm_pp2_stage0 : STD_LOGIC_VECTOR (10 downto 0) := "00001000000";
    constant ap_ST_fsm_pp2_stage1 : STD_LOGIC_VECTOR (10 downto 0) := "00010000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (10 downto 0) := "00100000000";
    constant ap_ST_fsm_pp3_stage0 : STD_LOGIC_VECTOR (10 downto 0) := "01000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (10 downto 0) := "10000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv32_31 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110001";
    constant ap_const_lv32_32 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110010";
    constant ap_const_lv32_3B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111011";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv11_400 : STD_LOGIC_VECTOR (10 downto 0) := "10000000000";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv16_20 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000100000";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal src1_data_V_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp2_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp2_stage1 : signal is "none";
    signal ap_enable_reg_pp2_iter0 : STD_LOGIC := '0';
    signal ap_block_pp2_stage1 : BOOLEAN;
    signal icmp_ln503_reg_1360 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp2_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp2_stage0 : signal is "none";
    signal ap_enable_reg_pp2_iter1 : STD_LOGIC := '0';
    signal ap_block_pp2_stage0 : BOOLEAN;
    signal src2_data_V_V_blk_n : STD_LOGIC;
    signal col_0_reg_621 : STD_LOGIC_VECTOR (31 downto 0);
    signal t_V_1_reg_633 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln426_fu_704_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln426_reg_1325 : STD_LOGIC_VECTOR (15 downto 0);
    signal k_fu_714_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal i_V_fu_733_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal icmp_ln497_fu_755_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal row_fu_760_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal row_reg_1350 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln503_fu_789_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln503_reg_1355 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln503_fu_793_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state7_pp2_stage0_iter0 : BOOLEAN;
    signal ap_block_state9_pp2_stage0_iter1 : BOOLEAN;
    signal ap_block_pp2_stage0_11001 : BOOLEAN;
    signal icmp_ln503_reg_1360_pp2_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_hist_0_V_addr_2_reg_1364 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_block_state8_pp2_stage1_iter0 : BOOLEAN;
    signal ap_block_state10_pp2_stage1_iter1 : BOOLEAN;
    signal ap_block_pp2_stage1_11001 : BOOLEAN;
    signal tmp_hist_1_V_addr_2_reg_1369 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_hist_2_V_addr_2_reg_1374 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_hist_3_V_addr_2_reg_1379 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_hist_4_V_addr_2_reg_1384 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_hist_5_V_addr_2_reg_1389 : STD_LOGIC_VECTOR (9 downto 0);
    signal col_fu_976_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal col_reg_1394 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_hist1_0_V_addr_2_reg_1399 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_hist1_1_V_addr_2_reg_1404 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_hist1_2_V_addr_2_reg_1409 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_hist1_3_V_addr_2_reg_1414 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_hist1_4_V_addr_2_reg_1419 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_hist1_5_V_addr_2_reg_1424 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln887_6_fu_1244_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln887_6_reg_1429 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp3_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp3_stage0 : signal is "none";
    signal ap_block_state12_pp3_stage0_iter0 : BOOLEAN;
    signal ap_block_state13_pp3_stage0_iter1 : BOOLEAN;
    signal ap_block_state14_pp3_stage0_iter2 : BOOLEAN;
    signal ap_block_pp3_stage0_11001 : BOOLEAN;
    signal icmp_ln887_6_reg_1429_pp3_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal i_V_1_fu_1250_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_enable_reg_pp3_iter0 : STD_LOGIC := '0';
    signal zext_ln544_1_fu_1256_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln544_1_reg_1438 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln544_1_reg_1438_pp3_iter1_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln563_1_fu_1266_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln563_1_reg_1491 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln563_4_fu_1272_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln563_4_reg_1506 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln563_7_fu_1278_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln563_7_reg_1521 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp2_stage0_subdone : BOOLEAN;
    signal ap_condition_pp2_exit_iter0_state7 : STD_LOGIC;
    signal ap_block_pp2_stage1_subdone : BOOLEAN;
    signal ap_block_pp3_stage0_subdone : BOOLEAN;
    signal ap_condition_pp3_exit_iter0_state12 : STD_LOGIC;
    signal ap_enable_reg_pp3_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp3_iter2 : STD_LOGIC := '0';
    signal tmp_hist_0_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_hist_0_V_ce0 : STD_LOGIC;
    signal tmp_hist_0_V_we0 : STD_LOGIC;
    signal tmp_hist_0_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_hist_0_V_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_hist_1_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_hist_1_V_ce0 : STD_LOGIC;
    signal tmp_hist_1_V_we0 : STD_LOGIC;
    signal tmp_hist_1_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_hist_1_V_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_hist_2_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_hist_2_V_ce0 : STD_LOGIC;
    signal tmp_hist_2_V_we0 : STD_LOGIC;
    signal tmp_hist_2_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_hist_2_V_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_hist_3_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_hist_3_V_ce0 : STD_LOGIC;
    signal tmp_hist_3_V_we0 : STD_LOGIC;
    signal tmp_hist_3_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_hist_3_V_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_hist_4_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_hist_4_V_ce0 : STD_LOGIC;
    signal tmp_hist_4_V_we0 : STD_LOGIC;
    signal tmp_hist_4_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_hist_4_V_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_hist_5_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_hist_5_V_ce0 : STD_LOGIC;
    signal tmp_hist_5_V_we0 : STD_LOGIC;
    signal tmp_hist_5_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_hist_5_V_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_hist1_0_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_hist1_0_V_ce0 : STD_LOGIC;
    signal tmp_hist1_0_V_we0 : STD_LOGIC;
    signal tmp_hist1_0_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_hist1_0_V_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_hist1_1_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_hist1_1_V_ce0 : STD_LOGIC;
    signal tmp_hist1_1_V_we0 : STD_LOGIC;
    signal tmp_hist1_1_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_hist1_1_V_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_hist1_2_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_hist1_2_V_ce0 : STD_LOGIC;
    signal tmp_hist1_2_V_we0 : STD_LOGIC;
    signal tmp_hist1_2_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_hist1_2_V_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_hist1_3_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_hist1_3_V_ce0 : STD_LOGIC;
    signal tmp_hist1_3_V_we0 : STD_LOGIC;
    signal tmp_hist1_3_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_hist1_3_V_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_hist1_4_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_hist1_4_V_ce0 : STD_LOGIC;
    signal tmp_hist1_4_V_we0 : STD_LOGIC;
    signal tmp_hist1_4_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_hist1_4_V_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_hist1_5_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_hist1_5_V_ce0 : STD_LOGIC;
    signal tmp_hist1_5_V_we0 : STD_LOGIC;
    signal tmp_hist1_5_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_hist1_5_V_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal k_0_reg_588 : STD_LOGIC_VECTOR (10 downto 0);
    signal icmp_ln445_fu_708_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal t_V_reg_599 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal icmp_ln887_fu_727_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal row_0_reg_610 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_phi_mux_col_0_phi_fu_625_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln455_fu_720_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln544_fu_739_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln535_fu_826_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln535_1_fu_855_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln535_2_fu_884_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln535_3_fu_913_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln535_4_fu_942_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln535_5_fu_971_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln536_fu_1017_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln536_1_fu_1053_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln536_2_fu_1089_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln536_3_fu_1125_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln536_4_fu_1161_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln536_5_fu_1197_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp3_stage0 : BOOLEAN;
    signal ap_block_pp2_stage1_01001 : BOOLEAN;
    signal ap_block_pp2_stage0_01001 : BOOLEAN;
    signal add_ln563_2_fu_1290_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln563_5_fu_1302_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln563_8_fu_1314_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln700_fu_1010_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln700_8_fu_1202_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln700_9_fu_1046_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln700_10_fu_1209_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln700_2_fu_1082_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln700_11_fu_1216_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln700_3_fu_1118_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln700_12_fu_1223_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln700_4_fu_1154_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln700_13_fu_1230_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln700_5_fu_1190_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln700_14_fu_1237_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_83_fu_694_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln503_fu_766_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_84_fu_771_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_85_fu_781_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln728_fu_798_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal shl_ln_fu_802_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal or_ln1193_fu_810_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_61_fu_816_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_644_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal shl_ln728_2_fu_831_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal or_ln1193_2_fu_839_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_63_fu_845_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_654_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal shl_ln728_4_fu_860_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal or_ln1193_4_fu_868_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_65_fu_874_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_664_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal shl_ln728_6_fu_889_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal or_ln1193_6_fu_897_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_67_fu_903_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_674_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal shl_ln728_8_fu_918_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal or_ln1193_8_fu_926_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_69_fu_932_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_684_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal shl_ln728_s_fu_947_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal or_ln1193_10_fu_955_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_71_fu_961_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln728_1_fu_982_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal shl_ln728_1_fu_986_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal or_ln1193_1_fu_994_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_62_fu_1000_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal shl_ln728_3_fu_1022_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal or_ln1193_3_fu_1030_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_64_fu_1036_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal shl_ln728_5_fu_1058_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal or_ln1193_5_fu_1066_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_66_fu_1072_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal shl_ln728_7_fu_1094_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal or_ln1193_7_fu_1102_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_68_fu_1108_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal shl_ln728_9_fu_1130_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal or_ln1193_9_fu_1138_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_70_fu_1144_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal shl_ln728_10_fu_1166_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal or_ln1193_11_fu_1174_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_72_fu_1180_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln563_fu_1284_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln563_3_fu_1296_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln563_6_fu_1308_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_block_pp2 : BOOLEAN;
    signal ap_block_pp3 : BOOLEAN;
    signal ap_enable_operation_115 : BOOLEAN;
    signal ap_enable_state8_pp2_iter0_stage1 : BOOLEAN;
    signal ap_enable_operation_158 : BOOLEAN;
    signal ap_enable_state9_pp2_iter1_stage0 : BOOLEAN;
    signal ap_enable_operation_160 : BOOLEAN;
    signal ap_enable_operation_122 : BOOLEAN;
    signal ap_enable_operation_168 : BOOLEAN;
    signal ap_enable_operation_170 : BOOLEAN;
    signal ap_enable_operation_129 : BOOLEAN;
    signal ap_enable_operation_178 : BOOLEAN;
    signal ap_enable_operation_180 : BOOLEAN;
    signal ap_enable_operation_136 : BOOLEAN;
    signal ap_enable_operation_188 : BOOLEAN;
    signal ap_enable_operation_190 : BOOLEAN;
    signal ap_enable_operation_143 : BOOLEAN;
    signal ap_enable_operation_198 : BOOLEAN;
    signal ap_enable_operation_200 : BOOLEAN;
    signal ap_enable_operation_150 : BOOLEAN;
    signal ap_enable_operation_208 : BOOLEAN;
    signal ap_enable_operation_210 : BOOLEAN;
    signal ap_enable_operation_163 : BOOLEAN;
    signal ap_enable_operation_219 : BOOLEAN;
    signal ap_enable_state10_pp2_iter1_stage1 : BOOLEAN;
    signal ap_enable_operation_221 : BOOLEAN;
    signal ap_enable_operation_173 : BOOLEAN;
    signal ap_enable_operation_224 : BOOLEAN;
    signal ap_enable_operation_226 : BOOLEAN;
    signal ap_enable_operation_183 : BOOLEAN;
    signal ap_enable_operation_229 : BOOLEAN;
    signal ap_enable_operation_231 : BOOLEAN;
    signal ap_enable_operation_193 : BOOLEAN;
    signal ap_enable_operation_234 : BOOLEAN;
    signal ap_enable_operation_236 : BOOLEAN;
    signal ap_enable_operation_203 : BOOLEAN;
    signal ap_enable_operation_239 : BOOLEAN;
    signal ap_enable_operation_241 : BOOLEAN;
    signal ap_enable_operation_213 : BOOLEAN;
    signal ap_enable_operation_244 : BOOLEAN;
    signal ap_enable_operation_246 : BOOLEAN;
    signal ap_idle_pp2 : STD_LOGIC;
    signal ap_enable_pp2 : STD_LOGIC;
    signal ap_idle_pp3 : STD_LOGIC;
    signal ap_enable_pp3 : STD_LOGIC;

    component AWBhistogramkernercU IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    tmp_hist_0_V_U : component AWBhistogramkernercU
    generic map (
        DataWidth => 32,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => tmp_hist_0_V_address0,
        ce0 => tmp_hist_0_V_ce0,
        we0 => tmp_hist_0_V_we0,
        d0 => tmp_hist_0_V_d0,
        q0 => tmp_hist_0_V_q0);

    tmp_hist_1_V_U : component AWBhistogramkernercU
    generic map (
        DataWidth => 32,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => tmp_hist_1_V_address0,
        ce0 => tmp_hist_1_V_ce0,
        we0 => tmp_hist_1_V_we0,
        d0 => tmp_hist_1_V_d0,
        q0 => tmp_hist_1_V_q0);

    tmp_hist_2_V_U : component AWBhistogramkernercU
    generic map (
        DataWidth => 32,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => tmp_hist_2_V_address0,
        ce0 => tmp_hist_2_V_ce0,
        we0 => tmp_hist_2_V_we0,
        d0 => tmp_hist_2_V_d0,
        q0 => tmp_hist_2_V_q0);

    tmp_hist_3_V_U : component AWBhistogramkernercU
    generic map (
        DataWidth => 32,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => tmp_hist_3_V_address0,
        ce0 => tmp_hist_3_V_ce0,
        we0 => tmp_hist_3_V_we0,
        d0 => tmp_hist_3_V_d0,
        q0 => tmp_hist_3_V_q0);

    tmp_hist_4_V_U : component AWBhistogramkernercU
    generic map (
        DataWidth => 32,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => tmp_hist_4_V_address0,
        ce0 => tmp_hist_4_V_ce0,
        we0 => tmp_hist_4_V_we0,
        d0 => tmp_hist_4_V_d0,
        q0 => tmp_hist_4_V_q0);

    tmp_hist_5_V_U : component AWBhistogramkernercU
    generic map (
        DataWidth => 32,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => tmp_hist_5_V_address0,
        ce0 => tmp_hist_5_V_ce0,
        we0 => tmp_hist_5_V_we0,
        d0 => tmp_hist_5_V_d0,
        q0 => tmp_hist_5_V_q0);

    tmp_hist1_0_V_U : component AWBhistogramkernercU
    generic map (
        DataWidth => 32,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => tmp_hist1_0_V_address0,
        ce0 => tmp_hist1_0_V_ce0,
        we0 => tmp_hist1_0_V_we0,
        d0 => tmp_hist1_0_V_d0,
        q0 => tmp_hist1_0_V_q0);

    tmp_hist1_1_V_U : component AWBhistogramkernercU
    generic map (
        DataWidth => 32,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => tmp_hist1_1_V_address0,
        ce0 => tmp_hist1_1_V_ce0,
        we0 => tmp_hist1_1_V_we0,
        d0 => tmp_hist1_1_V_d0,
        q0 => tmp_hist1_1_V_q0);

    tmp_hist1_2_V_U : component AWBhistogramkernercU
    generic map (
        DataWidth => 32,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => tmp_hist1_2_V_address0,
        ce0 => tmp_hist1_2_V_ce0,
        we0 => tmp_hist1_2_V_we0,
        d0 => tmp_hist1_2_V_d0,
        q0 => tmp_hist1_2_V_q0);

    tmp_hist1_3_V_U : component AWBhistogramkernercU
    generic map (
        DataWidth => 32,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => tmp_hist1_3_V_address0,
        ce0 => tmp_hist1_3_V_ce0,
        we0 => tmp_hist1_3_V_we0,
        d0 => tmp_hist1_3_V_d0,
        q0 => tmp_hist1_3_V_q0);

    tmp_hist1_4_V_U : component AWBhistogramkernercU
    generic map (
        DataWidth => 32,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => tmp_hist1_4_V_address0,
        ce0 => tmp_hist1_4_V_ce0,
        we0 => tmp_hist1_4_V_we0,
        d0 => tmp_hist1_4_V_d0,
        q0 => tmp_hist1_4_V_q0);

    tmp_hist1_5_V_U : component AWBhistogramkernercU
    generic map (
        DataWidth => 32,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => tmp_hist1_5_V_address0,
        ce0 => tmp_hist1_5_V_ce0,
        we0 => tmp_hist1_5_V_we0,
        d0 => tmp_hist1_5_V_d0,
        q0 => tmp_hist1_5_V_q0);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_logic_1 = ap_condition_pp2_exit_iter0_state7))) then 
                    ap_enable_reg_pp2_iter0 <= ap_const_logic_0;
                elsif (((icmp_ln497_fu_755_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                    ap_enable_reg_pp2_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp2_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1))) then 
                    ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
                elsif (((icmp_ln497_fu_755_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                    ap_enable_reg_pp2_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp3_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp3_exit_iter0_state12) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
                    ap_enable_reg_pp3_iter0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln497_fu_755_p2 = ap_const_lv1_1))) then 
                    ap_enable_reg_pp3_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp3_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp3_exit_iter0_state12)) then 
                        ap_enable_reg_pp3_iter1 <= (ap_const_logic_1 xor ap_condition_pp3_exit_iter0_state12);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp3_stage0_subdone)) then 
                    ap_enable_reg_pp3_iter2 <= ap_enable_reg_pp3_iter1;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln497_fu_755_p2 = ap_const_lv1_1))) then 
                    ap_enable_reg_pp3_iter2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    col_0_reg_621_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln503_reg_1360 = ap_const_lv1_0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001))) then 
                col_0_reg_621 <= col_reg_1394;
            elsif (((icmp_ln497_fu_755_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                col_0_reg_621 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    k_0_reg_588_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln445_fu_708_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                k_0_reg_588 <= k_fu_714_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                k_0_reg_588 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;

    row_0_reg_610_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                row_0_reg_610 <= ap_const_lv16_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
                row_0_reg_610 <= row_reg_1350;
            end if; 
        end if;
    end process;

    t_V_1_reg_633_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln497_fu_755_p2 = ap_const_lv1_1))) then 
                t_V_1_reg_633 <= ap_const_lv11_0;
            elsif (((icmp_ln887_6_fu_1244_p2 = ap_const_lv1_0) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001))) then 
                t_V_1_reg_633 <= i_V_1_fu_1250_p2;
            end if; 
        end if;
    end process;

    t_V_reg_599_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln887_fu_727_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                t_V_reg_599 <= i_V_fu_733_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                t_V_reg_599 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln887_6_reg_1429 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001))) then
                add_ln563_1_reg_1491 <= add_ln563_1_fu_1266_p2;
                add_ln563_4_reg_1506 <= add_ln563_4_fu_1272_p2;
                add_ln563_7_reg_1521 <= add_ln563_7_fu_1278_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln503_reg_1360 = ap_const_lv1_0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_const_boolean_0 = ap_block_pp2_stage1_11001))) then
                col_reg_1394 <= col_fu_976_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001))) then
                icmp_ln503_reg_1360 <= icmp_ln503_fu_793_p2;
                icmp_ln503_reg_1360_pp2_iter1_reg <= icmp_ln503_reg_1360;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001))) then
                icmp_ln887_6_reg_1429 <= icmp_ln887_6_fu_1244_p2;
                icmp_ln887_6_reg_1429_pp3_iter1_reg <= icmp_ln887_6_reg_1429;
                    zext_ln544_1_reg_1438_pp3_iter1_reg(10 downto 0) <= zext_ln544_1_reg_1438(10 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                row_reg_1350 <= row_fu_760_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln503_reg_1360 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001))) then
                tmp_hist1_0_V_addr_2_reg_1399 <= zext_ln536_fu_1017_p1(10 - 1 downto 0);
                tmp_hist1_1_V_addr_2_reg_1404 <= zext_ln536_1_fu_1053_p1(10 - 1 downto 0);
                tmp_hist1_2_V_addr_2_reg_1409 <= zext_ln536_2_fu_1089_p1(10 - 1 downto 0);
                tmp_hist1_3_V_addr_2_reg_1414 <= zext_ln536_3_fu_1125_p1(10 - 1 downto 0);
                tmp_hist1_4_V_addr_2_reg_1419 <= zext_ln536_4_fu_1161_p1(10 - 1 downto 0);
                tmp_hist1_5_V_addr_2_reg_1424 <= zext_ln536_5_fu_1197_p1(10 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln503_reg_1360 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_const_boolean_0 = ap_block_pp2_stage1_11001))) then
                tmp_hist_0_V_addr_2_reg_1364 <= zext_ln535_fu_826_p1(10 - 1 downto 0);
                tmp_hist_1_V_addr_2_reg_1369 <= zext_ln535_1_fu_855_p1(10 - 1 downto 0);
                tmp_hist_2_V_addr_2_reg_1374 <= zext_ln535_2_fu_884_p1(10 - 1 downto 0);
                tmp_hist_3_V_addr_2_reg_1379 <= zext_ln535_3_fu_913_p1(10 - 1 downto 0);
                tmp_hist_4_V_addr_2_reg_1384 <= zext_ln535_4_fu_942_p1(10 - 1 downto 0);
                tmp_hist_5_V_addr_2_reg_1389 <= zext_ln535_5_fu_971_p1(10 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    zext_ln426_reg_1325(14 downto 0) <= zext_ln426_fu_704_p1(14 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln497_fu_755_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                    zext_ln503_reg_1355(15 downto 1) <= zext_ln503_fu_789_p1(15 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln887_6_fu_1244_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001))) then
                    zext_ln544_1_reg_1438(10 downto 0) <= zext_ln544_1_fu_1256_p1(10 downto 0);
            end if;
        end if;
    end process;
    zext_ln426_reg_1325(15) <= '0';
    zext_ln503_reg_1355(0) <= '0';
    zext_ln503_reg_1355(31 downto 16) <= "0000000000000000";
    zext_ln544_1_reg_1438(63 downto 11) <= "00000000000000000000000000000000000000000000000000000";
    zext_ln544_1_reg_1438_pp3_iter1_reg(63 downto 11) <= "00000000000000000000000000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_pp2_stage1, ap_enable_reg_pp2_iter0, ap_enable_reg_pp2_iter1, ap_CS_fsm_state2, ap_CS_fsm_state4, icmp_ln497_fu_755_p2, ap_CS_fsm_state6, icmp_ln503_fu_793_p2, icmp_ln887_6_fu_1244_p2, ap_enable_reg_pp3_iter0, ap_block_pp2_stage0_subdone, ap_block_pp2_stage1_subdone, ap_block_pp3_stage0_subdone, ap_enable_reg_pp3_iter1, ap_enable_reg_pp3_iter2, icmp_ln445_fu_708_p2, icmp_ln887_fu_727_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((icmp_ln445_fu_708_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                if (((icmp_ln887_fu_727_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln497_fu_755_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                end if;
            when ap_ST_fsm_pp2_stage0 => 
                if ((not(((ap_enable_reg_pp2_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (icmp_ln503_fu_793_p2 = ap_const_lv1_1))) and (ap_const_boolean_0 = ap_block_pp2_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage1;
                elsif (((ap_enable_reg_pp2_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (icmp_ln503_fu_793_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                end if;
            when ap_ST_fsm_pp2_stage1 => 
                if ((not(((ap_enable_reg_pp2_iter0 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp2_stage1_subdone) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1))) and (ap_const_boolean_0 = ap_block_pp2_stage1_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                elsif (((ap_enable_reg_pp2_iter0 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp2_stage1_subdone) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage1;
                end if;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_pp3_stage0 => 
                if ((not(((ap_enable_reg_pp3_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp3_stage0_subdone) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (icmp_ln887_6_fu_1244_p2 = ap_const_lv1_1))) and not(((ap_enable_reg_pp3_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp3_stage0_subdone) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage0;
                elsif ((((ap_enable_reg_pp3_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp3_stage0_subdone) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1)) or ((ap_enable_reg_pp3_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp3_stage0_subdone) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (icmp_ln887_6_fu_1244_p2 = ap_const_lv1_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state15;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage0;
                end if;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXX";
        end case;
    end process;
    add_ln503_fu_766_p2 <= std_logic_vector(unsigned(zext_ln426_reg_1325) + unsigned(ap_const_lv16_1));
    add_ln563_1_fu_1266_p2 <= std_logic_vector(unsigned(tmp_hist_3_V_q0) + unsigned(tmp_hist1_3_V_q0));
    add_ln563_2_fu_1290_p2 <= std_logic_vector(unsigned(add_ln563_1_reg_1491) + unsigned(add_ln563_fu_1284_p2));
    add_ln563_3_fu_1296_p2 <= std_logic_vector(unsigned(tmp_hist1_1_V_q0) + unsigned(tmp_hist_1_V_q0));
    add_ln563_4_fu_1272_p2 <= std_logic_vector(unsigned(tmp_hist_4_V_q0) + unsigned(tmp_hist1_4_V_q0));
    add_ln563_5_fu_1302_p2 <= std_logic_vector(unsigned(add_ln563_4_reg_1506) + unsigned(add_ln563_3_fu_1296_p2));
    add_ln563_6_fu_1308_p2 <= std_logic_vector(unsigned(tmp_hist1_2_V_q0) + unsigned(tmp_hist_2_V_q0));
    add_ln563_7_fu_1278_p2 <= std_logic_vector(unsigned(tmp_hist_5_V_q0) + unsigned(tmp_hist1_5_V_q0));
    add_ln563_8_fu_1314_p2 <= std_logic_vector(unsigned(add_ln563_7_reg_1521) + unsigned(add_ln563_6_fu_1308_p2));
    add_ln563_fu_1284_p2 <= std_logic_vector(unsigned(tmp_hist1_0_V_q0) + unsigned(tmp_hist_0_V_q0));
    add_ln700_10_fu_1209_p2 <= std_logic_vector(unsigned(ap_const_lv32_1) + unsigned(tmp_hist1_1_V_q0));
    add_ln700_11_fu_1216_p2 <= std_logic_vector(unsigned(ap_const_lv32_1) + unsigned(tmp_hist1_2_V_q0));
    add_ln700_12_fu_1223_p2 <= std_logic_vector(unsigned(ap_const_lv32_1) + unsigned(tmp_hist1_3_V_q0));
    add_ln700_13_fu_1230_p2 <= std_logic_vector(unsigned(ap_const_lv32_1) + unsigned(tmp_hist1_4_V_q0));
    add_ln700_14_fu_1237_p2 <= std_logic_vector(unsigned(ap_const_lv32_1) + unsigned(tmp_hist1_5_V_q0));
    add_ln700_2_fu_1082_p2 <= std_logic_vector(unsigned(ap_const_lv32_1) + unsigned(tmp_hist_2_V_q0));
    add_ln700_3_fu_1118_p2 <= std_logic_vector(unsigned(ap_const_lv32_1) + unsigned(tmp_hist_3_V_q0));
    add_ln700_4_fu_1154_p2 <= std_logic_vector(unsigned(ap_const_lv32_1) + unsigned(tmp_hist_4_V_q0));
    add_ln700_5_fu_1190_p2 <= std_logic_vector(unsigned(ap_const_lv32_1) + unsigned(tmp_hist_5_V_q0));
    add_ln700_8_fu_1202_p2 <= std_logic_vector(unsigned(ap_const_lv32_1) + unsigned(tmp_hist1_0_V_q0));
    add_ln700_9_fu_1046_p2 <= std_logic_vector(unsigned(ap_const_lv32_1) + unsigned(tmp_hist_1_V_q0));
    add_ln700_fu_1010_p2 <= std_logic_vector(unsigned(ap_const_lv32_1) + unsigned(tmp_hist_0_V_q0));
    ap_CS_fsm_pp2_stage0 <= ap_CS_fsm(6);
    ap_CS_fsm_pp2_stage1 <= ap_CS_fsm(7);
    ap_CS_fsm_pp3_stage0 <= ap_CS_fsm(9);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state11 <= ap_CS_fsm(8);
    ap_CS_fsm_state15 <= ap_CS_fsm(10);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);

    ap_block_pp2_assign_proc : process(ap_CS_fsm, ap_block_pp2_stage0_subdone, ap_block_pp2_stage1_subdone)
    begin
                ap_block_pp2 <= (((ap_ST_fsm_pp2_stage0 = ap_CS_fsm) and (ap_const_boolean_1 = ap_block_pp2_stage0_subdone)) or ((ap_const_boolean_1 = ap_block_pp2_stage1_subdone) and (ap_ST_fsm_pp2_stage1 = ap_CS_fsm)));
    end process;

        ap_block_pp2_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp2_stage0_01001_assign_proc : process(src1_data_V_V_empty_n, src2_data_V_V_full_n, icmp_ln503_reg_1360, ap_enable_reg_pp2_iter1)
    begin
                ap_block_pp2_stage0_01001 <= ((ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (((icmp_ln503_reg_1360 = ap_const_lv1_0) and (src2_data_V_V_full_n = ap_const_logic_0)) or ((icmp_ln503_reg_1360 = ap_const_lv1_0) and (src1_data_V_V_empty_n = ap_const_logic_0))));
    end process;


    ap_block_pp2_stage0_11001_assign_proc : process(src1_data_V_V_empty_n, src2_data_V_V_full_n, icmp_ln503_reg_1360, ap_enable_reg_pp2_iter1)
    begin
                ap_block_pp2_stage0_11001 <= ((ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (((icmp_ln503_reg_1360 = ap_const_lv1_0) and (src2_data_V_V_full_n = ap_const_logic_0)) or ((icmp_ln503_reg_1360 = ap_const_lv1_0) and (src1_data_V_V_empty_n = ap_const_logic_0))));
    end process;


    ap_block_pp2_stage0_subdone_assign_proc : process(src1_data_V_V_empty_n, src2_data_V_V_full_n, icmp_ln503_reg_1360, ap_enable_reg_pp2_iter1)
    begin
                ap_block_pp2_stage0_subdone <= ((ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (((icmp_ln503_reg_1360 = ap_const_lv1_0) and (src2_data_V_V_full_n = ap_const_logic_0)) or ((icmp_ln503_reg_1360 = ap_const_lv1_0) and (src1_data_V_V_empty_n = ap_const_logic_0))));
    end process;

        ap_block_pp2_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp2_stage1_01001_assign_proc : process(src1_data_V_V_empty_n, src2_data_V_V_full_n, ap_enable_reg_pp2_iter0, icmp_ln503_reg_1360)
    begin
                ap_block_pp2_stage1_01001 <= ((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (((icmp_ln503_reg_1360 = ap_const_lv1_0) and (src2_data_V_V_full_n = ap_const_logic_0)) or ((icmp_ln503_reg_1360 = ap_const_lv1_0) and (src1_data_V_V_empty_n = ap_const_logic_0))));
    end process;


    ap_block_pp2_stage1_11001_assign_proc : process(src1_data_V_V_empty_n, src2_data_V_V_full_n, ap_enable_reg_pp2_iter0, icmp_ln503_reg_1360)
    begin
                ap_block_pp2_stage1_11001 <= ((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (((icmp_ln503_reg_1360 = ap_const_lv1_0) and (src2_data_V_V_full_n = ap_const_logic_0)) or ((icmp_ln503_reg_1360 = ap_const_lv1_0) and (src1_data_V_V_empty_n = ap_const_logic_0))));
    end process;


    ap_block_pp2_stage1_subdone_assign_proc : process(src1_data_V_V_empty_n, src2_data_V_V_full_n, ap_enable_reg_pp2_iter0, icmp_ln503_reg_1360)
    begin
                ap_block_pp2_stage1_subdone <= ((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (((icmp_ln503_reg_1360 = ap_const_lv1_0) and (src2_data_V_V_full_n = ap_const_logic_0)) or ((icmp_ln503_reg_1360 = ap_const_lv1_0) and (src1_data_V_V_empty_n = ap_const_logic_0))));
    end process;


    ap_block_pp3_assign_proc : process(ap_CS_fsm, ap_block_pp3_stage0_subdone)
    begin
                ap_block_pp3 <= ((ap_const_boolean_1 = ap_block_pp3_stage0_subdone) and (ap_ST_fsm_pp3_stage0 = ap_CS_fsm));
    end process;

        ap_block_pp3_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp2_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp3_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp3_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp3_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp2_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state8_pp2_stage1_iter0_assign_proc : process(src1_data_V_V_empty_n, src2_data_V_V_full_n, icmp_ln503_reg_1360)
    begin
                ap_block_state8_pp2_stage1_iter0 <= (((icmp_ln503_reg_1360 = ap_const_lv1_0) and (src2_data_V_V_full_n = ap_const_logic_0)) or ((icmp_ln503_reg_1360 = ap_const_lv1_0) and (src1_data_V_V_empty_n = ap_const_logic_0)));
    end process;


    ap_block_state9_pp2_stage0_iter1_assign_proc : process(src1_data_V_V_empty_n, src2_data_V_V_full_n, icmp_ln503_reg_1360)
    begin
                ap_block_state9_pp2_stage0_iter1 <= (((icmp_ln503_reg_1360 = ap_const_lv1_0) and (src2_data_V_V_full_n = ap_const_logic_0)) or ((icmp_ln503_reg_1360 = ap_const_lv1_0) and (src1_data_V_V_empty_n = ap_const_logic_0)));
    end process;


    ap_condition_pp2_exit_iter0_state7_assign_proc : process(icmp_ln503_fu_793_p2)
    begin
        if ((icmp_ln503_fu_793_p2 = ap_const_lv1_1)) then 
            ap_condition_pp2_exit_iter0_state7 <= ap_const_logic_1;
        else 
            ap_condition_pp2_exit_iter0_state7 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp3_exit_iter0_state12_assign_proc : process(icmp_ln887_6_fu_1244_p2)
    begin
        if ((icmp_ln887_6_fu_1244_p2 = ap_const_lv1_1)) then 
            ap_condition_pp3_exit_iter0_state12 <= ap_const_logic_1;
        else 
            ap_condition_pp3_exit_iter0_state12 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state15)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state15) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_enable_operation_115_assign_proc : process(icmp_ln503_reg_1360)
    begin
                ap_enable_operation_115 <= (icmp_ln503_reg_1360 = ap_const_lv1_0);
    end process;


    ap_enable_operation_122_assign_proc : process(icmp_ln503_reg_1360)
    begin
                ap_enable_operation_122 <= (icmp_ln503_reg_1360 = ap_const_lv1_0);
    end process;


    ap_enable_operation_129_assign_proc : process(icmp_ln503_reg_1360)
    begin
                ap_enable_operation_129 <= (icmp_ln503_reg_1360 = ap_const_lv1_0);
    end process;


    ap_enable_operation_136_assign_proc : process(icmp_ln503_reg_1360)
    begin
                ap_enable_operation_136 <= (icmp_ln503_reg_1360 = ap_const_lv1_0);
    end process;


    ap_enable_operation_143_assign_proc : process(icmp_ln503_reg_1360)
    begin
                ap_enable_operation_143 <= (icmp_ln503_reg_1360 = ap_const_lv1_0);
    end process;


    ap_enable_operation_150_assign_proc : process(icmp_ln503_reg_1360)
    begin
                ap_enable_operation_150 <= (icmp_ln503_reg_1360 = ap_const_lv1_0);
    end process;


    ap_enable_operation_158_assign_proc : process(icmp_ln503_reg_1360)
    begin
                ap_enable_operation_158 <= (icmp_ln503_reg_1360 = ap_const_lv1_0);
    end process;


    ap_enable_operation_160_assign_proc : process(icmp_ln503_reg_1360)
    begin
                ap_enable_operation_160 <= (icmp_ln503_reg_1360 = ap_const_lv1_0);
    end process;


    ap_enable_operation_163_assign_proc : process(icmp_ln503_reg_1360)
    begin
                ap_enable_operation_163 <= (icmp_ln503_reg_1360 = ap_const_lv1_0);
    end process;


    ap_enable_operation_168_assign_proc : process(icmp_ln503_reg_1360)
    begin
                ap_enable_operation_168 <= (icmp_ln503_reg_1360 = ap_const_lv1_0);
    end process;


    ap_enable_operation_170_assign_proc : process(icmp_ln503_reg_1360)
    begin
                ap_enable_operation_170 <= (icmp_ln503_reg_1360 = ap_const_lv1_0);
    end process;


    ap_enable_operation_173_assign_proc : process(icmp_ln503_reg_1360)
    begin
                ap_enable_operation_173 <= (icmp_ln503_reg_1360 = ap_const_lv1_0);
    end process;


    ap_enable_operation_178_assign_proc : process(icmp_ln503_reg_1360)
    begin
                ap_enable_operation_178 <= (icmp_ln503_reg_1360 = ap_const_lv1_0);
    end process;


    ap_enable_operation_180_assign_proc : process(icmp_ln503_reg_1360)
    begin
                ap_enable_operation_180 <= (icmp_ln503_reg_1360 = ap_const_lv1_0);
    end process;


    ap_enable_operation_183_assign_proc : process(icmp_ln503_reg_1360)
    begin
                ap_enable_operation_183 <= (icmp_ln503_reg_1360 = ap_const_lv1_0);
    end process;


    ap_enable_operation_188_assign_proc : process(icmp_ln503_reg_1360)
    begin
                ap_enable_operation_188 <= (icmp_ln503_reg_1360 = ap_const_lv1_0);
    end process;


    ap_enable_operation_190_assign_proc : process(icmp_ln503_reg_1360)
    begin
                ap_enable_operation_190 <= (icmp_ln503_reg_1360 = ap_const_lv1_0);
    end process;


    ap_enable_operation_193_assign_proc : process(icmp_ln503_reg_1360)
    begin
                ap_enable_operation_193 <= (icmp_ln503_reg_1360 = ap_const_lv1_0);
    end process;


    ap_enable_operation_198_assign_proc : process(icmp_ln503_reg_1360)
    begin
                ap_enable_operation_198 <= (icmp_ln503_reg_1360 = ap_const_lv1_0);
    end process;


    ap_enable_operation_200_assign_proc : process(icmp_ln503_reg_1360)
    begin
                ap_enable_operation_200 <= (icmp_ln503_reg_1360 = ap_const_lv1_0);
    end process;


    ap_enable_operation_203_assign_proc : process(icmp_ln503_reg_1360)
    begin
                ap_enable_operation_203 <= (icmp_ln503_reg_1360 = ap_const_lv1_0);
    end process;


    ap_enable_operation_208_assign_proc : process(icmp_ln503_reg_1360)
    begin
                ap_enable_operation_208 <= (icmp_ln503_reg_1360 = ap_const_lv1_0);
    end process;


    ap_enable_operation_210_assign_proc : process(icmp_ln503_reg_1360)
    begin
                ap_enable_operation_210 <= (icmp_ln503_reg_1360 = ap_const_lv1_0);
    end process;


    ap_enable_operation_213_assign_proc : process(icmp_ln503_reg_1360)
    begin
                ap_enable_operation_213 <= (icmp_ln503_reg_1360 = ap_const_lv1_0);
    end process;


    ap_enable_operation_219_assign_proc : process(icmp_ln503_reg_1360_pp2_iter1_reg)
    begin
                ap_enable_operation_219 <= (icmp_ln503_reg_1360_pp2_iter1_reg = ap_const_lv1_0);
    end process;


    ap_enable_operation_221_assign_proc : process(icmp_ln503_reg_1360_pp2_iter1_reg)
    begin
                ap_enable_operation_221 <= (icmp_ln503_reg_1360_pp2_iter1_reg = ap_const_lv1_0);
    end process;


    ap_enable_operation_224_assign_proc : process(icmp_ln503_reg_1360_pp2_iter1_reg)
    begin
                ap_enable_operation_224 <= (icmp_ln503_reg_1360_pp2_iter1_reg = ap_const_lv1_0);
    end process;


    ap_enable_operation_226_assign_proc : process(icmp_ln503_reg_1360_pp2_iter1_reg)
    begin
                ap_enable_operation_226 <= (icmp_ln503_reg_1360_pp2_iter1_reg = ap_const_lv1_0);
    end process;


    ap_enable_operation_229_assign_proc : process(icmp_ln503_reg_1360_pp2_iter1_reg)
    begin
                ap_enable_operation_229 <= (icmp_ln503_reg_1360_pp2_iter1_reg = ap_const_lv1_0);
    end process;


    ap_enable_operation_231_assign_proc : process(icmp_ln503_reg_1360_pp2_iter1_reg)
    begin
                ap_enable_operation_231 <= (icmp_ln503_reg_1360_pp2_iter1_reg = ap_const_lv1_0);
    end process;


    ap_enable_operation_234_assign_proc : process(icmp_ln503_reg_1360_pp2_iter1_reg)
    begin
                ap_enable_operation_234 <= (icmp_ln503_reg_1360_pp2_iter1_reg = ap_const_lv1_0);
    end process;


    ap_enable_operation_236_assign_proc : process(icmp_ln503_reg_1360_pp2_iter1_reg)
    begin
                ap_enable_operation_236 <= (icmp_ln503_reg_1360_pp2_iter1_reg = ap_const_lv1_0);
    end process;


    ap_enable_operation_239_assign_proc : process(icmp_ln503_reg_1360_pp2_iter1_reg)
    begin
                ap_enable_operation_239 <= (icmp_ln503_reg_1360_pp2_iter1_reg = ap_const_lv1_0);
    end process;


    ap_enable_operation_241_assign_proc : process(icmp_ln503_reg_1360_pp2_iter1_reg)
    begin
                ap_enable_operation_241 <= (icmp_ln503_reg_1360_pp2_iter1_reg = ap_const_lv1_0);
    end process;


    ap_enable_operation_244_assign_proc : process(icmp_ln503_reg_1360_pp2_iter1_reg)
    begin
                ap_enable_operation_244 <= (icmp_ln503_reg_1360_pp2_iter1_reg = ap_const_lv1_0);
    end process;


    ap_enable_operation_246_assign_proc : process(icmp_ln503_reg_1360_pp2_iter1_reg)
    begin
                ap_enable_operation_246 <= (icmp_ln503_reg_1360_pp2_iter1_reg = ap_const_lv1_0);
    end process;

    ap_enable_pp2 <= (ap_idle_pp2 xor ap_const_logic_1);
    ap_enable_pp3 <= (ap_idle_pp3 xor ap_const_logic_1);

    ap_enable_state10_pp2_iter1_stage1_assign_proc : process(ap_CS_fsm_pp2_stage1, ap_enable_reg_pp2_iter1)
    begin
                ap_enable_state10_pp2_iter1_stage1 <= ((ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1));
    end process;


    ap_enable_state8_pp2_iter0_stage1_assign_proc : process(ap_CS_fsm_pp2_stage1, ap_enable_reg_pp2_iter0)
    begin
                ap_enable_state8_pp2_iter0_stage1 <= ((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1));
    end process;


    ap_enable_state9_pp2_iter1_stage0_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter1)
    begin
                ap_enable_state9_pp2_iter1_stage0 <= ((ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0));
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp2_assign_proc : process(ap_enable_reg_pp2_iter0, ap_enable_reg_pp2_iter1)
    begin
        if (((ap_enable_reg_pp2_iter1 = ap_const_logic_0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_0))) then 
            ap_idle_pp2 <= ap_const_logic_1;
        else 
            ap_idle_pp2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp3_assign_proc : process(ap_enable_reg_pp3_iter0, ap_enable_reg_pp3_iter1, ap_enable_reg_pp3_iter2)
    begin
        if (((ap_enable_reg_pp3_iter2 = ap_const_logic_0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_0) and (ap_enable_reg_pp3_iter0 = ap_const_logic_0))) then 
            ap_idle_pp3 <= ap_const_logic_1;
        else 
            ap_idle_pp3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_col_0_phi_fu_625_p4_assign_proc : process(icmp_ln503_reg_1360, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter1, ap_block_pp2_stage0, col_0_reg_621, col_reg_1394)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0) and (icmp_ln503_reg_1360 = ap_const_lv1_0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            ap_phi_mux_col_0_phi_fu_625_p4 <= col_reg_1394;
        else 
            ap_phi_mux_col_0_phi_fu_625_p4 <= col_0_reg_621;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state15)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    col_fu_976_p2 <= std_logic_vector(unsigned(ap_const_lv32_2) + unsigned(col_0_reg_621));
    grp_fu_644_p4 <= src1_data_V_V_dout(19 downto 10);
    grp_fu_654_p4 <= src1_data_V_V_dout(29 downto 20);
    grp_fu_664_p4 <= src1_data_V_V_dout(39 downto 30);
    grp_fu_674_p4 <= src1_data_V_V_dout(49 downto 40);
    grp_fu_684_p4 <= src1_data_V_V_dout(59 downto 50);

    hist_0_address0_assign_proc : process(ap_CS_fsm_state2, zext_ln544_1_reg_1438_pp3_iter1_reg, ap_enable_reg_pp3_iter2, zext_ln455_fu_720_p1, ap_block_pp3_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1))) then 
            hist_0_address0 <= zext_ln544_1_reg_1438_pp3_iter1_reg(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            hist_0_address0 <= zext_ln455_fu_720_p1(10 - 1 downto 0);
        else 
            hist_0_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    hist_0_ce0_assign_proc : process(ap_CS_fsm_state2, ap_block_pp3_stage0_11001, ap_enable_reg_pp3_iter2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or ((ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001)))) then 
            hist_0_ce0 <= ap_const_logic_1;
        else 
            hist_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    hist_0_d0_assign_proc : process(ap_CS_fsm_state2, ap_enable_reg_pp3_iter2, ap_block_pp3_stage0, add_ln563_2_fu_1290_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1))) then 
            hist_0_d0 <= add_ln563_2_fu_1290_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            hist_0_d0 <= ap_const_lv32_0;
        else 
            hist_0_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    hist_0_we0_assign_proc : process(ap_CS_fsm_state2, ap_block_pp3_stage0_11001, icmp_ln887_6_reg_1429_pp3_iter1_reg, ap_enable_reg_pp3_iter2, icmp_ln445_fu_708_p2)
    begin
        if ((((icmp_ln887_6_reg_1429_pp3_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001)) or ((icmp_ln445_fu_708_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            hist_0_we0 <= ap_const_logic_1;
        else 
            hist_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    hist_1_address0_assign_proc : process(ap_CS_fsm_state2, zext_ln544_1_reg_1438_pp3_iter1_reg, ap_enable_reg_pp3_iter2, zext_ln455_fu_720_p1, ap_block_pp3_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1))) then 
            hist_1_address0 <= zext_ln544_1_reg_1438_pp3_iter1_reg(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            hist_1_address0 <= zext_ln455_fu_720_p1(10 - 1 downto 0);
        else 
            hist_1_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    hist_1_ce0_assign_proc : process(ap_CS_fsm_state2, ap_block_pp3_stage0_11001, ap_enable_reg_pp3_iter2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or ((ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001)))) then 
            hist_1_ce0 <= ap_const_logic_1;
        else 
            hist_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    hist_1_d0_assign_proc : process(ap_CS_fsm_state2, ap_enable_reg_pp3_iter2, ap_block_pp3_stage0, add_ln563_5_fu_1302_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1))) then 
            hist_1_d0 <= add_ln563_5_fu_1302_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            hist_1_d0 <= ap_const_lv32_0;
        else 
            hist_1_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    hist_1_we0_assign_proc : process(ap_CS_fsm_state2, ap_block_pp3_stage0_11001, icmp_ln887_6_reg_1429_pp3_iter1_reg, ap_enable_reg_pp3_iter2, icmp_ln445_fu_708_p2)
    begin
        if ((((icmp_ln887_6_reg_1429_pp3_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001)) or ((icmp_ln445_fu_708_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            hist_1_we0 <= ap_const_logic_1;
        else 
            hist_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    hist_2_address0_assign_proc : process(ap_CS_fsm_state2, zext_ln544_1_reg_1438_pp3_iter1_reg, ap_enable_reg_pp3_iter2, zext_ln455_fu_720_p1, ap_block_pp3_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1))) then 
            hist_2_address0 <= zext_ln544_1_reg_1438_pp3_iter1_reg(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            hist_2_address0 <= zext_ln455_fu_720_p1(10 - 1 downto 0);
        else 
            hist_2_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    hist_2_ce0_assign_proc : process(ap_CS_fsm_state2, ap_block_pp3_stage0_11001, ap_enable_reg_pp3_iter2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or ((ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001)))) then 
            hist_2_ce0 <= ap_const_logic_1;
        else 
            hist_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    hist_2_d0_assign_proc : process(ap_CS_fsm_state2, ap_enable_reg_pp3_iter2, ap_block_pp3_stage0, add_ln563_8_fu_1314_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1))) then 
            hist_2_d0 <= add_ln563_8_fu_1314_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            hist_2_d0 <= ap_const_lv32_0;
        else 
            hist_2_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    hist_2_we0_assign_proc : process(ap_CS_fsm_state2, ap_block_pp3_stage0_11001, icmp_ln887_6_reg_1429_pp3_iter1_reg, ap_enable_reg_pp3_iter2, icmp_ln445_fu_708_p2)
    begin
        if ((((icmp_ln887_6_reg_1429_pp3_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001)) or ((icmp_ln445_fu_708_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            hist_2_we0 <= ap_const_logic_1;
        else 
            hist_2_we0 <= ap_const_logic_0;
        end if; 
    end process;

    i_V_1_fu_1250_p2 <= std_logic_vector(unsigned(t_V_1_reg_633) + unsigned(ap_const_lv11_1));
    i_V_fu_733_p2 <= std_logic_vector(unsigned(t_V_reg_599) + unsigned(ap_const_lv11_1));
    icmp_ln445_fu_708_p2 <= "1" when (k_0_reg_588 = ap_const_lv11_400) else "0";
    icmp_ln497_fu_755_p2 <= "1" when (row_0_reg_610 = src1_rows_read) else "0";
    icmp_ln503_fu_793_p2 <= "1" when (ap_phi_mux_col_0_phi_fu_625_p4 = zext_ln503_reg_1355) else "0";
    icmp_ln887_6_fu_1244_p2 <= "1" when (t_V_1_reg_633 = ap_const_lv11_400) else "0";
    icmp_ln887_fu_727_p2 <= "1" when (t_V_reg_599 = ap_const_lv11_400) else "0";
    k_fu_714_p2 <= std_logic_vector(unsigned(k_0_reg_588) + unsigned(ap_const_lv11_1));
    or_ln1193_10_fu_955_p2 <= (shl_ln728_s_fu_947_p3 or ap_const_lv16_20);
    or_ln1193_11_fu_1174_p2 <= (shl_ln728_10_fu_1166_p3 or ap_const_lv16_20);
    or_ln1193_1_fu_994_p2 <= (shl_ln728_1_fu_986_p3 or ap_const_lv16_20);
    or_ln1193_2_fu_839_p2 <= (shl_ln728_2_fu_831_p3 or ap_const_lv16_20);
    or_ln1193_3_fu_1030_p2 <= (shl_ln728_3_fu_1022_p3 or ap_const_lv16_20);
    or_ln1193_4_fu_868_p2 <= (shl_ln728_4_fu_860_p3 or ap_const_lv16_20);
    or_ln1193_5_fu_1066_p2 <= (shl_ln728_5_fu_1058_p3 or ap_const_lv16_20);
    or_ln1193_6_fu_897_p2 <= (shl_ln728_6_fu_889_p3 or ap_const_lv16_20);
    or_ln1193_7_fu_1102_p2 <= (shl_ln728_7_fu_1094_p3 or ap_const_lv16_20);
    or_ln1193_8_fu_926_p2 <= (shl_ln728_8_fu_918_p3 or ap_const_lv16_20);
    or_ln1193_9_fu_1138_p2 <= (shl_ln728_9_fu_1130_p3 or ap_const_lv16_20);
    or_ln1193_fu_810_p2 <= (shl_ln_fu_802_p3 or ap_const_lv16_20);
    row_fu_760_p2 <= std_logic_vector(unsigned(row_0_reg_610) + unsigned(ap_const_lv16_1));
    shl_ln728_10_fu_1166_p3 <= (grp_fu_684_p4 & ap_const_lv6_0);
    shl_ln728_1_fu_986_p3 <= (trunc_ln728_1_fu_982_p1 & ap_const_lv6_0);
    shl_ln728_2_fu_831_p3 <= (grp_fu_644_p4 & ap_const_lv6_0);
    shl_ln728_3_fu_1022_p3 <= (grp_fu_644_p4 & ap_const_lv6_0);
    shl_ln728_4_fu_860_p3 <= (grp_fu_654_p4 & ap_const_lv6_0);
    shl_ln728_5_fu_1058_p3 <= (grp_fu_654_p4 & ap_const_lv6_0);
    shl_ln728_6_fu_889_p3 <= (grp_fu_664_p4 & ap_const_lv6_0);
    shl_ln728_7_fu_1094_p3 <= (grp_fu_664_p4 & ap_const_lv6_0);
    shl_ln728_8_fu_918_p3 <= (grp_fu_674_p4 & ap_const_lv6_0);
    shl_ln728_9_fu_1130_p3 <= (grp_fu_674_p4 & ap_const_lv6_0);
    shl_ln728_s_fu_947_p3 <= (grp_fu_684_p4 & ap_const_lv6_0);
    shl_ln_fu_802_p3 <= (trunc_ln728_fu_798_p1 & ap_const_lv6_0);

    src1_data_V_V_blk_n_assign_proc : process(src1_data_V_V_empty_n, ap_CS_fsm_pp2_stage1, ap_enable_reg_pp2_iter0, ap_block_pp2_stage1, icmp_ln503_reg_1360, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter1, ap_block_pp2_stage0)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp2_stage0) and (icmp_ln503_reg_1360 = ap_const_lv1_0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0)) or ((icmp_ln503_reg_1360 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage1) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1)))) then 
            src1_data_V_V_blk_n <= src1_data_V_V_empty_n;
        else 
            src1_data_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    src1_data_V_V_read_assign_proc : process(ap_CS_fsm_pp2_stage1, ap_enable_reg_pp2_iter0, icmp_ln503_reg_1360, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter1, ap_block_pp2_stage0_11001, ap_block_pp2_stage1_11001)
    begin
        if ((((icmp_ln503_reg_1360 = ap_const_lv1_0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001)) or ((icmp_ln503_reg_1360 = ap_const_lv1_0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_const_boolean_0 = ap_block_pp2_stage1_11001)))) then 
            src1_data_V_V_read <= ap_const_logic_1;
        else 
            src1_data_V_V_read <= ap_const_logic_0;
        end if; 
    end process;


    src2_data_V_V_blk_n_assign_proc : process(src2_data_V_V_full_n, ap_CS_fsm_pp2_stage1, ap_enable_reg_pp2_iter0, ap_block_pp2_stage1, icmp_ln503_reg_1360, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter1, ap_block_pp2_stage0)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp2_stage0) and (icmp_ln503_reg_1360 = ap_const_lv1_0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0)) or ((icmp_ln503_reg_1360 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage1) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1)))) then 
            src2_data_V_V_blk_n <= src2_data_V_V_full_n;
        else 
            src2_data_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    src2_data_V_V_din <= src1_data_V_V_dout;

    src2_data_V_V_write_assign_proc : process(ap_CS_fsm_pp2_stage1, ap_enable_reg_pp2_iter0, icmp_ln503_reg_1360, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter1, ap_block_pp2_stage0_11001, ap_block_pp2_stage1_11001)
    begin
        if ((((icmp_ln503_reg_1360 = ap_const_lv1_0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001)) or ((icmp_ln503_reg_1360 = ap_const_lv1_0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_const_boolean_0 = ap_block_pp2_stage1_11001)))) then 
            src2_data_V_V_write <= ap_const_logic_1;
        else 
            src2_data_V_V_write <= ap_const_logic_0;
        end if; 
    end process;

    tmp_61_fu_816_p4 <= or_ln1193_fu_810_p2(15 downto 6);
    tmp_62_fu_1000_p4 <= or_ln1193_1_fu_994_p2(15 downto 6);
    tmp_63_fu_845_p4 <= or_ln1193_2_fu_839_p2(15 downto 6);
    tmp_64_fu_1036_p4 <= or_ln1193_3_fu_1030_p2(15 downto 6);
    tmp_65_fu_874_p4 <= or_ln1193_4_fu_868_p2(15 downto 6);
    tmp_66_fu_1072_p4 <= or_ln1193_5_fu_1066_p2(15 downto 6);
    tmp_67_fu_903_p4 <= or_ln1193_6_fu_897_p2(15 downto 6);
    tmp_68_fu_1108_p4 <= or_ln1193_7_fu_1102_p2(15 downto 6);
    tmp_69_fu_932_p4 <= or_ln1193_8_fu_926_p2(15 downto 6);
    tmp_70_fu_1144_p4 <= or_ln1193_9_fu_1138_p2(15 downto 6);
    tmp_71_fu_961_p4 <= or_ln1193_10_fu_955_p2(15 downto 6);
    tmp_72_fu_1180_p4 <= or_ln1193_11_fu_1174_p2(15 downto 6);
    tmp_83_fu_694_p4 <= src1_cols_read(15 downto 1);
    tmp_84_fu_771_p4 <= add_ln503_fu_766_p2(15 downto 1);
    tmp_85_fu_781_p3 <= (tmp_84_fu_771_p4 & ap_const_lv1_0);

    tmp_hist1_0_V_address0_assign_proc : process(ap_CS_fsm_pp2_stage1, ap_block_pp2_stage1, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter1, ap_block_pp2_stage0, ap_CS_fsm_state4, tmp_hist1_0_V_addr_2_reg_1399, ap_CS_fsm_pp3_stage0, zext_ln544_1_reg_1438, ap_enable_reg_pp3_iter1, zext_ln544_fu_739_p1, zext_ln536_fu_1017_p1, ap_block_pp3_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
            tmp_hist1_0_V_address0 <= zext_ln544_1_reg_1438(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp2_stage1) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1))) then 
            tmp_hist1_0_V_address0 <= tmp_hist1_0_V_addr_2_reg_1399;
        elsif (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            tmp_hist1_0_V_address0 <= zext_ln536_fu_1017_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            tmp_hist1_0_V_address0 <= zext_ln544_fu_739_p1(10 - 1 downto 0);
        else 
            tmp_hist1_0_V_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    tmp_hist1_0_V_ce0_assign_proc : process(ap_CS_fsm_pp2_stage1, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter1, ap_CS_fsm_state4, ap_block_pp2_stage0_11001, ap_block_pp2_stage1_11001, ap_CS_fsm_pp3_stage0, ap_block_pp3_stage0_11001, ap_enable_reg_pp3_iter1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or ((ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001)) or ((ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_const_boolean_0 = ap_block_pp2_stage1_11001)) or ((ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001)))) then 
            tmp_hist1_0_V_ce0 <= ap_const_logic_1;
        else 
            tmp_hist1_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    tmp_hist1_0_V_d0_assign_proc : process(ap_CS_fsm_pp2_stage1, ap_block_pp2_stage1, ap_enable_reg_pp2_iter1, ap_CS_fsm_state4, add_ln700_8_fu_1202_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage1) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1))) then 
            tmp_hist1_0_V_d0 <= add_ln700_8_fu_1202_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            tmp_hist1_0_V_d0 <= ap_const_lv32_0;
        else 
            tmp_hist1_0_V_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    tmp_hist1_0_V_we0_assign_proc : process(ap_CS_fsm_pp2_stage1, ap_enable_reg_pp2_iter1, ap_CS_fsm_state4, icmp_ln503_reg_1360_pp2_iter1_reg, ap_block_pp2_stage1_11001, icmp_ln887_fu_727_p2)
    begin
        if ((((icmp_ln503_reg_1360_pp2_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_const_boolean_0 = ap_block_pp2_stage1_11001)) or ((icmp_ln887_fu_727_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4)))) then 
            tmp_hist1_0_V_we0 <= ap_const_logic_1;
        else 
            tmp_hist1_0_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    tmp_hist1_1_V_address0_assign_proc : process(ap_CS_fsm_pp2_stage1, ap_block_pp2_stage1, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter1, ap_block_pp2_stage0, ap_CS_fsm_state4, tmp_hist1_1_V_addr_2_reg_1404, ap_CS_fsm_pp3_stage0, zext_ln544_1_reg_1438, ap_enable_reg_pp3_iter1, zext_ln544_fu_739_p1, zext_ln536_1_fu_1053_p1, ap_block_pp3_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
            tmp_hist1_1_V_address0 <= zext_ln544_1_reg_1438(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp2_stage1) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1))) then 
            tmp_hist1_1_V_address0 <= tmp_hist1_1_V_addr_2_reg_1404;
        elsif (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            tmp_hist1_1_V_address0 <= zext_ln536_1_fu_1053_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            tmp_hist1_1_V_address0 <= zext_ln544_fu_739_p1(10 - 1 downto 0);
        else 
            tmp_hist1_1_V_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    tmp_hist1_1_V_ce0_assign_proc : process(ap_CS_fsm_pp2_stage1, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter1, ap_CS_fsm_state4, ap_block_pp2_stage0_11001, ap_block_pp2_stage1_11001, ap_CS_fsm_pp3_stage0, ap_block_pp3_stage0_11001, ap_enable_reg_pp3_iter1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or ((ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001)) or ((ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_const_boolean_0 = ap_block_pp2_stage1_11001)) or ((ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001)))) then 
            tmp_hist1_1_V_ce0 <= ap_const_logic_1;
        else 
            tmp_hist1_1_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    tmp_hist1_1_V_d0_assign_proc : process(ap_CS_fsm_pp2_stage1, ap_block_pp2_stage1, ap_enable_reg_pp2_iter1, ap_CS_fsm_state4, add_ln700_10_fu_1209_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage1) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1))) then 
            tmp_hist1_1_V_d0 <= add_ln700_10_fu_1209_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            tmp_hist1_1_V_d0 <= ap_const_lv32_0;
        else 
            tmp_hist1_1_V_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    tmp_hist1_1_V_we0_assign_proc : process(ap_CS_fsm_pp2_stage1, ap_enable_reg_pp2_iter1, ap_CS_fsm_state4, icmp_ln503_reg_1360_pp2_iter1_reg, ap_block_pp2_stage1_11001, icmp_ln887_fu_727_p2)
    begin
        if ((((icmp_ln503_reg_1360_pp2_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_const_boolean_0 = ap_block_pp2_stage1_11001)) or ((icmp_ln887_fu_727_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4)))) then 
            tmp_hist1_1_V_we0 <= ap_const_logic_1;
        else 
            tmp_hist1_1_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    tmp_hist1_2_V_address0_assign_proc : process(ap_CS_fsm_pp2_stage1, ap_block_pp2_stage1, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter1, ap_block_pp2_stage0, ap_CS_fsm_state4, tmp_hist1_2_V_addr_2_reg_1409, ap_CS_fsm_pp3_stage0, zext_ln544_1_reg_1438, ap_enable_reg_pp3_iter1, zext_ln544_fu_739_p1, zext_ln536_2_fu_1089_p1, ap_block_pp3_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
            tmp_hist1_2_V_address0 <= zext_ln544_1_reg_1438(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp2_stage1) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1))) then 
            tmp_hist1_2_V_address0 <= tmp_hist1_2_V_addr_2_reg_1409;
        elsif (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            tmp_hist1_2_V_address0 <= zext_ln536_2_fu_1089_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            tmp_hist1_2_V_address0 <= zext_ln544_fu_739_p1(10 - 1 downto 0);
        else 
            tmp_hist1_2_V_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    tmp_hist1_2_V_ce0_assign_proc : process(ap_CS_fsm_pp2_stage1, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter1, ap_CS_fsm_state4, ap_block_pp2_stage0_11001, ap_block_pp2_stage1_11001, ap_CS_fsm_pp3_stage0, ap_block_pp3_stage0_11001, ap_enable_reg_pp3_iter1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or ((ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001)) or ((ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_const_boolean_0 = ap_block_pp2_stage1_11001)) or ((ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001)))) then 
            tmp_hist1_2_V_ce0 <= ap_const_logic_1;
        else 
            tmp_hist1_2_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    tmp_hist1_2_V_d0_assign_proc : process(ap_CS_fsm_pp2_stage1, ap_block_pp2_stage1, ap_enable_reg_pp2_iter1, ap_CS_fsm_state4, add_ln700_11_fu_1216_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage1) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1))) then 
            tmp_hist1_2_V_d0 <= add_ln700_11_fu_1216_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            tmp_hist1_2_V_d0 <= ap_const_lv32_0;
        else 
            tmp_hist1_2_V_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    tmp_hist1_2_V_we0_assign_proc : process(ap_CS_fsm_pp2_stage1, ap_enable_reg_pp2_iter1, ap_CS_fsm_state4, icmp_ln503_reg_1360_pp2_iter1_reg, ap_block_pp2_stage1_11001, icmp_ln887_fu_727_p2)
    begin
        if ((((icmp_ln503_reg_1360_pp2_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_const_boolean_0 = ap_block_pp2_stage1_11001)) or ((icmp_ln887_fu_727_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4)))) then 
            tmp_hist1_2_V_we0 <= ap_const_logic_1;
        else 
            tmp_hist1_2_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    tmp_hist1_3_V_address0_assign_proc : process(ap_CS_fsm_pp2_stage1, ap_block_pp2_stage1, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter1, ap_block_pp2_stage0, ap_CS_fsm_state4, tmp_hist1_3_V_addr_2_reg_1414, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter0, zext_ln544_1_fu_1256_p1, zext_ln544_fu_739_p1, zext_ln536_3_fu_1125_p1, ap_block_pp3_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
            tmp_hist1_3_V_address0 <= zext_ln544_1_fu_1256_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp2_stage1) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1))) then 
            tmp_hist1_3_V_address0 <= tmp_hist1_3_V_addr_2_reg_1414;
        elsif (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            tmp_hist1_3_V_address0 <= zext_ln536_3_fu_1125_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            tmp_hist1_3_V_address0 <= zext_ln544_fu_739_p1(10 - 1 downto 0);
        else 
            tmp_hist1_3_V_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    tmp_hist1_3_V_ce0_assign_proc : process(ap_CS_fsm_pp2_stage1, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter1, ap_CS_fsm_state4, ap_block_pp2_stage0_11001, ap_block_pp2_stage1_11001, ap_CS_fsm_pp3_stage0, ap_block_pp3_stage0_11001, ap_enable_reg_pp3_iter0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or ((ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001)) or ((ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_const_boolean_0 = ap_block_pp2_stage1_11001)) or ((ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001)))) then 
            tmp_hist1_3_V_ce0 <= ap_const_logic_1;
        else 
            tmp_hist1_3_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    tmp_hist1_3_V_d0_assign_proc : process(ap_CS_fsm_pp2_stage1, ap_block_pp2_stage1, ap_enable_reg_pp2_iter1, ap_CS_fsm_state4, add_ln700_12_fu_1223_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage1) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1))) then 
            tmp_hist1_3_V_d0 <= add_ln700_12_fu_1223_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            tmp_hist1_3_V_d0 <= ap_const_lv32_0;
        else 
            tmp_hist1_3_V_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    tmp_hist1_3_V_we0_assign_proc : process(ap_CS_fsm_pp2_stage1, ap_enable_reg_pp2_iter1, ap_CS_fsm_state4, icmp_ln503_reg_1360_pp2_iter1_reg, ap_block_pp2_stage1_11001, icmp_ln887_fu_727_p2)
    begin
        if ((((icmp_ln503_reg_1360_pp2_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_const_boolean_0 = ap_block_pp2_stage1_11001)) or ((icmp_ln887_fu_727_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4)))) then 
            tmp_hist1_3_V_we0 <= ap_const_logic_1;
        else 
            tmp_hist1_3_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    tmp_hist1_4_V_address0_assign_proc : process(ap_CS_fsm_pp2_stage1, ap_block_pp2_stage1, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter1, ap_block_pp2_stage0, ap_CS_fsm_state4, tmp_hist1_4_V_addr_2_reg_1419, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter0, zext_ln544_1_fu_1256_p1, zext_ln544_fu_739_p1, zext_ln536_4_fu_1161_p1, ap_block_pp3_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
            tmp_hist1_4_V_address0 <= zext_ln544_1_fu_1256_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp2_stage1) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1))) then 
            tmp_hist1_4_V_address0 <= tmp_hist1_4_V_addr_2_reg_1419;
        elsif (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            tmp_hist1_4_V_address0 <= zext_ln536_4_fu_1161_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            tmp_hist1_4_V_address0 <= zext_ln544_fu_739_p1(10 - 1 downto 0);
        else 
            tmp_hist1_4_V_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    tmp_hist1_4_V_ce0_assign_proc : process(ap_CS_fsm_pp2_stage1, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter1, ap_CS_fsm_state4, ap_block_pp2_stage0_11001, ap_block_pp2_stage1_11001, ap_CS_fsm_pp3_stage0, ap_block_pp3_stage0_11001, ap_enable_reg_pp3_iter0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or ((ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001)) or ((ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_const_boolean_0 = ap_block_pp2_stage1_11001)) or ((ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001)))) then 
            tmp_hist1_4_V_ce0 <= ap_const_logic_1;
        else 
            tmp_hist1_4_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    tmp_hist1_4_V_d0_assign_proc : process(ap_CS_fsm_pp2_stage1, ap_block_pp2_stage1, ap_enable_reg_pp2_iter1, ap_CS_fsm_state4, add_ln700_13_fu_1230_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage1) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1))) then 
            tmp_hist1_4_V_d0 <= add_ln700_13_fu_1230_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            tmp_hist1_4_V_d0 <= ap_const_lv32_0;
        else 
            tmp_hist1_4_V_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    tmp_hist1_4_V_we0_assign_proc : process(ap_CS_fsm_pp2_stage1, ap_enable_reg_pp2_iter1, ap_CS_fsm_state4, icmp_ln503_reg_1360_pp2_iter1_reg, ap_block_pp2_stage1_11001, icmp_ln887_fu_727_p2)
    begin
        if ((((icmp_ln503_reg_1360_pp2_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_const_boolean_0 = ap_block_pp2_stage1_11001)) or ((icmp_ln887_fu_727_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4)))) then 
            tmp_hist1_4_V_we0 <= ap_const_logic_1;
        else 
            tmp_hist1_4_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    tmp_hist1_5_V_address0_assign_proc : process(ap_CS_fsm_pp2_stage1, ap_block_pp2_stage1, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter1, ap_block_pp2_stage0, ap_CS_fsm_state4, tmp_hist1_5_V_addr_2_reg_1424, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter0, zext_ln544_1_fu_1256_p1, zext_ln544_fu_739_p1, zext_ln536_5_fu_1197_p1, ap_block_pp3_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
            tmp_hist1_5_V_address0 <= zext_ln544_1_fu_1256_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp2_stage1) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1))) then 
            tmp_hist1_5_V_address0 <= tmp_hist1_5_V_addr_2_reg_1424;
        elsif (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            tmp_hist1_5_V_address0 <= zext_ln536_5_fu_1197_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            tmp_hist1_5_V_address0 <= zext_ln544_fu_739_p1(10 - 1 downto 0);
        else 
            tmp_hist1_5_V_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    tmp_hist1_5_V_ce0_assign_proc : process(ap_CS_fsm_pp2_stage1, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter1, ap_CS_fsm_state4, ap_block_pp2_stage0_11001, ap_block_pp2_stage1_11001, ap_CS_fsm_pp3_stage0, ap_block_pp3_stage0_11001, ap_enable_reg_pp3_iter0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or ((ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001)) or ((ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_const_boolean_0 = ap_block_pp2_stage1_11001)) or ((ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001)))) then 
            tmp_hist1_5_V_ce0 <= ap_const_logic_1;
        else 
            tmp_hist1_5_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    tmp_hist1_5_V_d0_assign_proc : process(ap_CS_fsm_pp2_stage1, ap_block_pp2_stage1, ap_enable_reg_pp2_iter1, ap_CS_fsm_state4, add_ln700_14_fu_1237_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage1) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1))) then 
            tmp_hist1_5_V_d0 <= add_ln700_14_fu_1237_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            tmp_hist1_5_V_d0 <= ap_const_lv32_0;
        else 
            tmp_hist1_5_V_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    tmp_hist1_5_V_we0_assign_proc : process(ap_CS_fsm_pp2_stage1, ap_enable_reg_pp2_iter1, ap_CS_fsm_state4, icmp_ln503_reg_1360_pp2_iter1_reg, ap_block_pp2_stage1_11001, icmp_ln887_fu_727_p2)
    begin
        if ((((icmp_ln503_reg_1360_pp2_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_const_boolean_0 = ap_block_pp2_stage1_11001)) or ((icmp_ln887_fu_727_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4)))) then 
            tmp_hist1_5_V_we0 <= ap_const_logic_1;
        else 
            tmp_hist1_5_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    tmp_hist_0_V_address0_assign_proc : process(ap_CS_fsm_pp2_stage1, ap_enable_reg_pp2_iter0, ap_block_pp2_stage1, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter1, ap_block_pp2_stage0, ap_CS_fsm_state4, tmp_hist_0_V_addr_2_reg_1364, ap_CS_fsm_pp3_stage0, zext_ln544_1_reg_1438, ap_enable_reg_pp3_iter1, zext_ln544_fu_739_p1, zext_ln535_fu_826_p1, ap_block_pp3_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
            tmp_hist_0_V_address0 <= zext_ln544_1_reg_1438(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            tmp_hist_0_V_address0 <= tmp_hist_0_V_addr_2_reg_1364;
        elsif (((ap_const_boolean_0 = ap_block_pp2_stage1) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1))) then 
            tmp_hist_0_V_address0 <= zext_ln535_fu_826_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            tmp_hist_0_V_address0 <= zext_ln544_fu_739_p1(10 - 1 downto 0);
        else 
            tmp_hist_0_V_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    tmp_hist_0_V_ce0_assign_proc : process(ap_CS_fsm_pp2_stage1, ap_enable_reg_pp2_iter0, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter1, ap_CS_fsm_state4, ap_block_pp2_stage0_11001, ap_block_pp2_stage1_11001, ap_CS_fsm_pp3_stage0, ap_block_pp3_stage0_11001, ap_enable_reg_pp3_iter1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or ((ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001)) or ((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_const_boolean_0 = ap_block_pp2_stage1_11001)) or ((ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001)))) then 
            tmp_hist_0_V_ce0 <= ap_const_logic_1;
        else 
            tmp_hist_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    tmp_hist_0_V_d0_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter1, ap_block_pp2_stage0, ap_CS_fsm_state4, add_ln700_fu_1010_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            tmp_hist_0_V_d0 <= add_ln700_fu_1010_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            tmp_hist_0_V_d0 <= ap_const_lv32_0;
        else 
            tmp_hist_0_V_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    tmp_hist_0_V_we0_assign_proc : process(icmp_ln503_reg_1360, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter1, ap_CS_fsm_state4, ap_block_pp2_stage0_11001, icmp_ln887_fu_727_p2)
    begin
        if ((((icmp_ln503_reg_1360 = ap_const_lv1_0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001)) or ((icmp_ln887_fu_727_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4)))) then 
            tmp_hist_0_V_we0 <= ap_const_logic_1;
        else 
            tmp_hist_0_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    tmp_hist_1_V_address0_assign_proc : process(ap_CS_fsm_pp2_stage1, ap_enable_reg_pp2_iter0, ap_block_pp2_stage1, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter1, ap_block_pp2_stage0, ap_CS_fsm_state4, tmp_hist_1_V_addr_2_reg_1369, ap_CS_fsm_pp3_stage0, zext_ln544_1_reg_1438, ap_enable_reg_pp3_iter1, zext_ln544_fu_739_p1, zext_ln535_1_fu_855_p1, ap_block_pp3_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
            tmp_hist_1_V_address0 <= zext_ln544_1_reg_1438(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            tmp_hist_1_V_address0 <= tmp_hist_1_V_addr_2_reg_1369;
        elsif (((ap_const_boolean_0 = ap_block_pp2_stage1) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1))) then 
            tmp_hist_1_V_address0 <= zext_ln535_1_fu_855_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            tmp_hist_1_V_address0 <= zext_ln544_fu_739_p1(10 - 1 downto 0);
        else 
            tmp_hist_1_V_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    tmp_hist_1_V_ce0_assign_proc : process(ap_CS_fsm_pp2_stage1, ap_enable_reg_pp2_iter0, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter1, ap_CS_fsm_state4, ap_block_pp2_stage0_11001, ap_block_pp2_stage1_11001, ap_CS_fsm_pp3_stage0, ap_block_pp3_stage0_11001, ap_enable_reg_pp3_iter1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or ((ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001)) or ((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_const_boolean_0 = ap_block_pp2_stage1_11001)) or ((ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001)))) then 
            tmp_hist_1_V_ce0 <= ap_const_logic_1;
        else 
            tmp_hist_1_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    tmp_hist_1_V_d0_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter1, ap_block_pp2_stage0, ap_CS_fsm_state4, add_ln700_9_fu_1046_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            tmp_hist_1_V_d0 <= add_ln700_9_fu_1046_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            tmp_hist_1_V_d0 <= ap_const_lv32_0;
        else 
            tmp_hist_1_V_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    tmp_hist_1_V_we0_assign_proc : process(icmp_ln503_reg_1360, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter1, ap_CS_fsm_state4, ap_block_pp2_stage0_11001, icmp_ln887_fu_727_p2)
    begin
        if ((((icmp_ln503_reg_1360 = ap_const_lv1_0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001)) or ((icmp_ln887_fu_727_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4)))) then 
            tmp_hist_1_V_we0 <= ap_const_logic_1;
        else 
            tmp_hist_1_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    tmp_hist_2_V_address0_assign_proc : process(ap_CS_fsm_pp2_stage1, ap_enable_reg_pp2_iter0, ap_block_pp2_stage1, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter1, ap_block_pp2_stage0, ap_CS_fsm_state4, tmp_hist_2_V_addr_2_reg_1374, ap_CS_fsm_pp3_stage0, zext_ln544_1_reg_1438, ap_enable_reg_pp3_iter1, zext_ln544_fu_739_p1, zext_ln535_2_fu_884_p1, ap_block_pp3_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
            tmp_hist_2_V_address0 <= zext_ln544_1_reg_1438(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            tmp_hist_2_V_address0 <= tmp_hist_2_V_addr_2_reg_1374;
        elsif (((ap_const_boolean_0 = ap_block_pp2_stage1) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1))) then 
            tmp_hist_2_V_address0 <= zext_ln535_2_fu_884_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            tmp_hist_2_V_address0 <= zext_ln544_fu_739_p1(10 - 1 downto 0);
        else 
            tmp_hist_2_V_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    tmp_hist_2_V_ce0_assign_proc : process(ap_CS_fsm_pp2_stage1, ap_enable_reg_pp2_iter0, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter1, ap_CS_fsm_state4, ap_block_pp2_stage0_11001, ap_block_pp2_stage1_11001, ap_CS_fsm_pp3_stage0, ap_block_pp3_stage0_11001, ap_enable_reg_pp3_iter1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or ((ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001)) or ((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_const_boolean_0 = ap_block_pp2_stage1_11001)) or ((ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001)))) then 
            tmp_hist_2_V_ce0 <= ap_const_logic_1;
        else 
            tmp_hist_2_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    tmp_hist_2_V_d0_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter1, ap_block_pp2_stage0, ap_CS_fsm_state4, add_ln700_2_fu_1082_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            tmp_hist_2_V_d0 <= add_ln700_2_fu_1082_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            tmp_hist_2_V_d0 <= ap_const_lv32_0;
        else 
            tmp_hist_2_V_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    tmp_hist_2_V_we0_assign_proc : process(icmp_ln503_reg_1360, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter1, ap_CS_fsm_state4, ap_block_pp2_stage0_11001, icmp_ln887_fu_727_p2)
    begin
        if ((((icmp_ln503_reg_1360 = ap_const_lv1_0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001)) or ((icmp_ln887_fu_727_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4)))) then 
            tmp_hist_2_V_we0 <= ap_const_logic_1;
        else 
            tmp_hist_2_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    tmp_hist_3_V_address0_assign_proc : process(ap_CS_fsm_pp2_stage1, ap_enable_reg_pp2_iter0, ap_block_pp2_stage1, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter1, ap_block_pp2_stage0, ap_CS_fsm_state4, tmp_hist_3_V_addr_2_reg_1379, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter0, zext_ln544_1_fu_1256_p1, zext_ln544_fu_739_p1, zext_ln535_3_fu_913_p1, ap_block_pp3_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
            tmp_hist_3_V_address0 <= zext_ln544_1_fu_1256_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            tmp_hist_3_V_address0 <= tmp_hist_3_V_addr_2_reg_1379;
        elsif (((ap_const_boolean_0 = ap_block_pp2_stage1) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1))) then 
            tmp_hist_3_V_address0 <= zext_ln535_3_fu_913_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            tmp_hist_3_V_address0 <= zext_ln544_fu_739_p1(10 - 1 downto 0);
        else 
            tmp_hist_3_V_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    tmp_hist_3_V_ce0_assign_proc : process(ap_CS_fsm_pp2_stage1, ap_enable_reg_pp2_iter0, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter1, ap_CS_fsm_state4, ap_block_pp2_stage0_11001, ap_block_pp2_stage1_11001, ap_CS_fsm_pp3_stage0, ap_block_pp3_stage0_11001, ap_enable_reg_pp3_iter0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or ((ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001)) or ((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_const_boolean_0 = ap_block_pp2_stage1_11001)) or ((ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001)))) then 
            tmp_hist_3_V_ce0 <= ap_const_logic_1;
        else 
            tmp_hist_3_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    tmp_hist_3_V_d0_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter1, ap_block_pp2_stage0, ap_CS_fsm_state4, add_ln700_3_fu_1118_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            tmp_hist_3_V_d0 <= add_ln700_3_fu_1118_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            tmp_hist_3_V_d0 <= ap_const_lv32_0;
        else 
            tmp_hist_3_V_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    tmp_hist_3_V_we0_assign_proc : process(icmp_ln503_reg_1360, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter1, ap_CS_fsm_state4, ap_block_pp2_stage0_11001, icmp_ln887_fu_727_p2)
    begin
        if ((((icmp_ln503_reg_1360 = ap_const_lv1_0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001)) or ((icmp_ln887_fu_727_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4)))) then 
            tmp_hist_3_V_we0 <= ap_const_logic_1;
        else 
            tmp_hist_3_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    tmp_hist_4_V_address0_assign_proc : process(ap_CS_fsm_pp2_stage1, ap_enable_reg_pp2_iter0, ap_block_pp2_stage1, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter1, ap_block_pp2_stage0, ap_CS_fsm_state4, tmp_hist_4_V_addr_2_reg_1384, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter0, zext_ln544_1_fu_1256_p1, zext_ln544_fu_739_p1, zext_ln535_4_fu_942_p1, ap_block_pp3_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
            tmp_hist_4_V_address0 <= zext_ln544_1_fu_1256_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            tmp_hist_4_V_address0 <= tmp_hist_4_V_addr_2_reg_1384;
        elsif (((ap_const_boolean_0 = ap_block_pp2_stage1) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1))) then 
            tmp_hist_4_V_address0 <= zext_ln535_4_fu_942_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            tmp_hist_4_V_address0 <= zext_ln544_fu_739_p1(10 - 1 downto 0);
        else 
            tmp_hist_4_V_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    tmp_hist_4_V_ce0_assign_proc : process(ap_CS_fsm_pp2_stage1, ap_enable_reg_pp2_iter0, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter1, ap_CS_fsm_state4, ap_block_pp2_stage0_11001, ap_block_pp2_stage1_11001, ap_CS_fsm_pp3_stage0, ap_block_pp3_stage0_11001, ap_enable_reg_pp3_iter0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or ((ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001)) or ((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_const_boolean_0 = ap_block_pp2_stage1_11001)) or ((ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001)))) then 
            tmp_hist_4_V_ce0 <= ap_const_logic_1;
        else 
            tmp_hist_4_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    tmp_hist_4_V_d0_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter1, ap_block_pp2_stage0, ap_CS_fsm_state4, add_ln700_4_fu_1154_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            tmp_hist_4_V_d0 <= add_ln700_4_fu_1154_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            tmp_hist_4_V_d0 <= ap_const_lv32_0;
        else 
            tmp_hist_4_V_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    tmp_hist_4_V_we0_assign_proc : process(icmp_ln503_reg_1360, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter1, ap_CS_fsm_state4, ap_block_pp2_stage0_11001, icmp_ln887_fu_727_p2)
    begin
        if ((((icmp_ln503_reg_1360 = ap_const_lv1_0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001)) or ((icmp_ln887_fu_727_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4)))) then 
            tmp_hist_4_V_we0 <= ap_const_logic_1;
        else 
            tmp_hist_4_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    tmp_hist_5_V_address0_assign_proc : process(ap_CS_fsm_pp2_stage1, ap_enable_reg_pp2_iter0, ap_block_pp2_stage1, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter1, ap_block_pp2_stage0, ap_CS_fsm_state4, tmp_hist_5_V_addr_2_reg_1389, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter0, zext_ln544_1_fu_1256_p1, zext_ln544_fu_739_p1, zext_ln535_5_fu_971_p1, ap_block_pp3_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
            tmp_hist_5_V_address0 <= zext_ln544_1_fu_1256_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            tmp_hist_5_V_address0 <= tmp_hist_5_V_addr_2_reg_1389;
        elsif (((ap_const_boolean_0 = ap_block_pp2_stage1) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1))) then 
            tmp_hist_5_V_address0 <= zext_ln535_5_fu_971_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            tmp_hist_5_V_address0 <= zext_ln544_fu_739_p1(10 - 1 downto 0);
        else 
            tmp_hist_5_V_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    tmp_hist_5_V_ce0_assign_proc : process(ap_CS_fsm_pp2_stage1, ap_enable_reg_pp2_iter0, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter1, ap_CS_fsm_state4, ap_block_pp2_stage0_11001, ap_block_pp2_stage1_11001, ap_CS_fsm_pp3_stage0, ap_block_pp3_stage0_11001, ap_enable_reg_pp3_iter0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or ((ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001)) or ((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_const_boolean_0 = ap_block_pp2_stage1_11001)) or ((ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001)))) then 
            tmp_hist_5_V_ce0 <= ap_const_logic_1;
        else 
            tmp_hist_5_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    tmp_hist_5_V_d0_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter1, ap_block_pp2_stage0, ap_CS_fsm_state4, add_ln700_5_fu_1190_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            tmp_hist_5_V_d0 <= add_ln700_5_fu_1190_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            tmp_hist_5_V_d0 <= ap_const_lv32_0;
        else 
            tmp_hist_5_V_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    tmp_hist_5_V_we0_assign_proc : process(icmp_ln503_reg_1360, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter1, ap_CS_fsm_state4, ap_block_pp2_stage0_11001, icmp_ln887_fu_727_p2)
    begin
        if ((((icmp_ln503_reg_1360 = ap_const_lv1_0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001)) or ((icmp_ln887_fu_727_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4)))) then 
            tmp_hist_5_V_we0 <= ap_const_logic_1;
        else 
            tmp_hist_5_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    trunc_ln728_1_fu_982_p1 <= src1_data_V_V_dout(10 - 1 downto 0);
    trunc_ln728_fu_798_p1 <= src1_data_V_V_dout(10 - 1 downto 0);
    zext_ln426_fu_704_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_83_fu_694_p4),16));
    zext_ln455_fu_720_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(k_0_reg_588),64));
    zext_ln503_fu_789_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_85_fu_781_p3),32));
    zext_ln535_1_fu_855_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_63_fu_845_p4),64));
    zext_ln535_2_fu_884_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_65_fu_874_p4),64));
    zext_ln535_3_fu_913_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_67_fu_903_p4),64));
    zext_ln535_4_fu_942_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_69_fu_932_p4),64));
    zext_ln535_5_fu_971_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_71_fu_961_p4),64));
    zext_ln535_fu_826_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_61_fu_816_p4),64));
    zext_ln536_1_fu_1053_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_64_fu_1036_p4),64));
    zext_ln536_2_fu_1089_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_66_fu_1072_p4),64));
    zext_ln536_3_fu_1125_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_68_fu_1108_p4),64));
    zext_ln536_4_fu_1161_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_70_fu_1144_p4),64));
    zext_ln536_5_fu_1197_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_72_fu_1180_p4),64));
    zext_ln536_fu_1017_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_62_fu_1000_p4),64));
    zext_ln544_1_fu_1256_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(t_V_1_reg_633),64));
    zext_ln544_fu_739_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(t_V_reg_599),64));
end behav;
