-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
-- Version: 2021.1
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity ISPPipeline_accel_ISPpipeline is
port (
    s_axis_video_TDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    s_axis_video_TKEEP : IN STD_LOGIC_VECTOR (3 downto 0);
    s_axis_video_TSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
    s_axis_video_TUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    s_axis_video_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    s_axis_video_TID : IN STD_LOGIC_VECTOR (0 downto 0);
    s_axis_video_TDEST : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axis_video_TDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axis_video_TKEEP : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axis_video_TSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axis_video_TUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axis_video_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axis_video_TID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axis_video_TDEST : OUT STD_LOGIC_VECTOR (0 downto 0);
    height : IN STD_LOGIC_VECTOR (11 downto 0);
    width : IN STD_LOGIC_VECTOR (11 downto 0);
    hist0_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    hist0_ce0 : OUT STD_LOGIC;
    hist0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    hist0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    hist0_we0 : OUT STD_LOGIC;
    hist0_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    hist0_ce1 : OUT STD_LOGIC;
    hist0_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    hist0_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    hist0_we1 : OUT STD_LOGIC;
    hist01_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    hist01_ce0 : OUT STD_LOGIC;
    hist01_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    hist01_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    hist01_we0 : OUT STD_LOGIC;
    hist01_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    hist01_ce1 : OUT STD_LOGIC;
    hist01_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    hist01_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    hist01_we1 : OUT STD_LOGIC;
    hist02_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    hist02_ce0 : OUT STD_LOGIC;
    hist02_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    hist02_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    hist02_we0 : OUT STD_LOGIC;
    hist02_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    hist02_ce1 : OUT STD_LOGIC;
    hist02_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    hist02_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    hist02_we1 : OUT STD_LOGIC;
    hist1_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    hist1_ce0 : OUT STD_LOGIC;
    hist1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    hist1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    hist1_we0 : OUT STD_LOGIC;
    hist1_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    hist1_ce1 : OUT STD_LOGIC;
    hist1_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    hist1_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    hist1_we1 : OUT STD_LOGIC;
    hist13_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    hist13_ce0 : OUT STD_LOGIC;
    hist13_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    hist13_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    hist13_we0 : OUT STD_LOGIC;
    hist13_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    hist13_ce1 : OUT STD_LOGIC;
    hist13_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    hist13_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    hist13_we1 : OUT STD_LOGIC;
    hist14_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    hist14_ce0 : OUT STD_LOGIC;
    hist14_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    hist14_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    hist14_we0 : OUT STD_LOGIC;
    hist14_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    hist14_ce1 : OUT STD_LOGIC;
    hist14_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    hist14_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    hist14_we1 : OUT STD_LOGIC;
    rgain : IN STD_LOGIC_VECTOR (15 downto 0);
    bgain : IN STD_LOGIC_VECTOR (15 downto 0);
    gamma_lut_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    gamma_lut_ce0 : OUT STD_LOGIC;
    gamma_lut_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    gamma_lut_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    gamma_lut_we0 : OUT STD_LOGIC;
    mode_reg : IN STD_LOGIC_VECTOR (0 downto 0);
    pawb : IN STD_LOGIC_VECTOR (15 downto 0);
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    rgain_ap_vld : IN STD_LOGIC;
    bgain_ap_vld : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    height_ap_vld : IN STD_LOGIC;
    width_ap_vld : IN STD_LOGIC;
    pawb_ap_vld : IN STD_LOGIC;
    s_axis_video_TVALID : IN STD_LOGIC;
    s_axis_video_TREADY : OUT STD_LOGIC;
    mode_reg_ap_vld : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    m_axis_video_TVALID : OUT STD_LOGIC;
    m_axis_video_TREADY : IN STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC );
end;


architecture behav of ISPPipeline_accel_ISPpipeline is 
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_boolean_1 : BOOLEAN := true;

attribute shreg_extract : string;
    signal entry_proc_U0_ap_start : STD_LOGIC;
    signal entry_proc_U0_ap_done : STD_LOGIC;
    signal entry_proc_U0_ap_continue : STD_LOGIC;
    signal entry_proc_U0_ap_idle : STD_LOGIC;
    signal entry_proc_U0_ap_ready : STD_LOGIC;
    signal entry_proc_U0_ap_return_0 : STD_LOGIC_VECTOR (15 downto 0);
    signal entry_proc_U0_ap_return_1 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_channel_done_bgain_c_channel : STD_LOGIC;
    signal bgain_c_channel_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_bgain_c_channel : STD_LOGIC := '0';
    signal ap_sync_channel_write_bgain_c_channel : STD_LOGIC;
    signal ap_channel_done_rgain_c_channel : STD_LOGIC;
    signal rgain_c_channel_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_rgain_c_channel : STD_LOGIC := '0';
    signal ap_sync_channel_write_rgain_c_channel : STD_LOGIC;
    signal ISPpipeline_Block_ZN2xf2cv3MatILi1ELi2160ELi3840ELi2ELi2EEC2Eii_exit1_proc_U0_ap_start : STD_LOGIC;
    signal ISPpipeline_Block_ZN2xf2cv3MatILi1ELi2160ELi3840ELi2ELi2EEC2Eii_exit1_proc_U0_ap_done : STD_LOGIC;
    signal ISPpipeline_Block_ZN2xf2cv3MatILi1ELi2160ELi3840ELi2ELi2EEC2Eii_exit1_proc_U0_ap_continue : STD_LOGIC;
    signal ISPpipeline_Block_ZN2xf2cv3MatILi1ELi2160ELi3840ELi2ELi2EEC2Eii_exit1_proc_U0_ap_idle : STD_LOGIC;
    signal ISPpipeline_Block_ZN2xf2cv3MatILi1ELi2160ELi3840ELi2ELi2EEC2Eii_exit1_proc_U0_ap_ready : STD_LOGIC;
    signal ISPpipeline_Block_ZN2xf2cv3MatILi1ELi2160ELi3840ELi2ELi2EEC2Eii_exit1_proc_U0_ap_return_0 : STD_LOGIC_VECTOR (11 downto 0);
    signal ISPpipeline_Block_ZN2xf2cv3MatILi1ELi2160ELi3840ELi2ELi2EEC2Eii_exit1_proc_U0_ap_return_1 : STD_LOGIC_VECTOR (11 downto 0);
    signal ISPpipeline_Block_ZN2xf2cv3MatILi1ELi2160ELi3840ELi2ELi2EEC2Eii_exit1_proc_U0_ap_return_2 : STD_LOGIC_VECTOR (11 downto 0);
    signal ISPpipeline_Block_ZN2xf2cv3MatILi1ELi2160ELi3840ELi2ELi2EEC2Eii_exit1_proc_U0_ap_return_3 : STD_LOGIC_VECTOR (11 downto 0);
    signal ISPpipeline_Block_ZN2xf2cv3MatILi1ELi2160ELi3840ELi2ELi2EEC2Eii_exit1_proc_U0_ap_return_4 : STD_LOGIC_VECTOR (11 downto 0);
    signal ISPpipeline_Block_ZN2xf2cv3MatILi1ELi2160ELi3840ELi2ELi2EEC2Eii_exit1_proc_U0_ap_return_5 : STD_LOGIC_VECTOR (11 downto 0);
    signal ISPpipeline_Block_ZN2xf2cv3MatILi1ELi2160ELi3840ELi2ELi2EEC2Eii_exit1_proc_U0_ap_return_6 : STD_LOGIC_VECTOR (11 downto 0);
    signal ISPpipeline_Block_ZN2xf2cv3MatILi1ELi2160ELi3840ELi2ELi2EEC2Eii_exit1_proc_U0_ap_return_7 : STD_LOGIC_VECTOR (11 downto 0);
    signal ISPpipeline_Block_ZN2xf2cv3MatILi1ELi2160ELi3840ELi2ELi2EEC2Eii_exit1_proc_U0_ap_return_8 : STD_LOGIC_VECTOR (11 downto 0);
    signal ISPpipeline_Block_ZN2xf2cv3MatILi1ELi2160ELi3840ELi2ELi2EEC2Eii_exit1_proc_U0_ap_return_9 : STD_LOGIC_VECTOR (11 downto 0);
    signal ISPpipeline_Block_ZN2xf2cv3MatILi1ELi2160ELi3840ELi2ELi2EEC2Eii_exit1_proc_U0_ap_return_10 : STD_LOGIC_VECTOR (11 downto 0);
    signal ISPpipeline_Block_ZN2xf2cv3MatILi1ELi2160ELi3840ELi2ELi2EEC2Eii_exit1_proc_U0_ap_return_11 : STD_LOGIC_VECTOR (11 downto 0);
    signal ISPpipeline_Block_ZN2xf2cv3MatILi1ELi2160ELi3840ELi2ELi2EEC2Eii_exit1_proc_U0_ap_return_12 : STD_LOGIC_VECTOR (31 downto 0);
    signal ISPpipeline_Block_ZN2xf2cv3MatILi1ELi2160ELi3840ELi2ELi2EEC2Eii_exit1_proc_U0_ap_return_13 : STD_LOGIC_VECTOR (11 downto 0);
    signal ISPpipeline_Block_ZN2xf2cv3MatILi1ELi2160ELi3840ELi2ELi2EEC2Eii_exit1_proc_U0_ap_return_14 : STD_LOGIC_VECTOR (11 downto 0);
    signal ISPpipeline_Block_ZN2xf2cv3MatILi1ELi2160ELi3840ELi2ELi2EEC2Eii_exit1_proc_U0_ap_return_15 : STD_LOGIC_VECTOR (11 downto 0);
    signal ISPpipeline_Block_ZN2xf2cv3MatILi1ELi2160ELi3840ELi2ELi2EEC2Eii_exit1_proc_U0_ap_return_16 : STD_LOGIC_VECTOR (11 downto 0);
    signal ISPpipeline_Block_ZN2xf2cv3MatILi1ELi2160ELi3840ELi2ELi2EEC2Eii_exit1_proc_U0_ap_return_17 : STD_LOGIC_VECTOR (11 downto 0);
    signal ISPpipeline_Block_ZN2xf2cv3MatILi1ELi2160ELi3840ELi2ELi2EEC2Eii_exit1_proc_U0_ap_return_18 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_channel_done_demosaic_out_cols_channel : STD_LOGIC;
    signal demosaic_out_cols_channel_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_demosaic_out_cols_channel : STD_LOGIC := '0';
    signal ap_sync_channel_write_demosaic_out_cols_channel : STD_LOGIC;
    signal ap_channel_done_demosaic_out_rows_channel : STD_LOGIC;
    signal demosaic_out_rows_channel_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_demosaic_out_rows_channel : STD_LOGIC := '0';
    signal ap_sync_channel_write_demosaic_out_rows_channel : STD_LOGIC;
    signal ap_channel_done_imgInput2_rows_channel : STD_LOGIC;
    signal imgInput2_rows_channel_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_imgInput2_rows_channel : STD_LOGIC := '0';
    signal ap_sync_channel_write_imgInput2_rows_channel : STD_LOGIC;
    signal ap_channel_done_imgInput2_cols_channel : STD_LOGIC;
    signal imgInput2_cols_channel_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_imgInput2_cols_channel : STD_LOGIC := '0';
    signal ap_sync_channel_write_imgInput2_cols_channel : STD_LOGIC;
    signal ap_channel_done_gain_out_rows_channel : STD_LOGIC;
    signal gain_out_rows_channel_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_gain_out_rows_channel : STD_LOGIC := '0';
    signal ap_sync_channel_write_gain_out_rows_channel : STD_LOGIC;
    signal ap_channel_done_gain_out_cols_channel : STD_LOGIC;
    signal gain_out_cols_channel_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_gain_out_cols_channel : STD_LOGIC := '0';
    signal ap_sync_channel_write_gain_out_cols_channel : STD_LOGIC;
    signal ap_channel_done_lsc_out_rows_channel : STD_LOGIC;
    signal lsc_out_rows_channel_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_lsc_out_rows_channel : STD_LOGIC := '0';
    signal ap_sync_channel_write_lsc_out_rows_channel : STD_LOGIC;
    signal ap_channel_done_lsc_out_cols_channel : STD_LOGIC;
    signal lsc_out_cols_channel_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_lsc_out_cols_channel : STD_LOGIC := '0';
    signal ap_sync_channel_write_lsc_out_cols_channel : STD_LOGIC;
    signal ap_channel_done_p_dst_rows_channel : STD_LOGIC;
    signal p_dst_rows_channel_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_p_dst_rows_channel : STD_LOGIC := '0';
    signal ap_sync_channel_write_p_dst_rows_channel : STD_LOGIC;
    signal ap_channel_done_p_dst_cols_channel : STD_LOGIC;
    signal p_dst_cols_channel_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_p_dst_cols_channel : STD_LOGIC := '0';
    signal ap_sync_channel_write_p_dst_cols_channel : STD_LOGIC;
    signal ap_channel_done_aecin_rows_channel : STD_LOGIC;
    signal aecin_rows_channel_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_aecin_rows_channel : STD_LOGIC := '0';
    signal ap_sync_channel_write_aecin_rows_channel : STD_LOGIC;
    signal ap_channel_done_aecin_cols_channel : STD_LOGIC;
    signal aecin_cols_channel_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_aecin_cols_channel : STD_LOGIC := '0';
    signal ap_sync_channel_write_aecin_cols_channel : STD_LOGIC;
    signal ap_channel_done_p_imgOutput_rows_channel : STD_LOGIC;
    signal p_imgOutput_rows_channel_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_p_imgOutput_rows_channel : STD_LOGIC := '0';
    signal ap_sync_channel_write_p_imgOutput_rows_channel : STD_LOGIC;
    signal ap_channel_done_p_imgOutput_cols_channel : STD_LOGIC;
    signal p_imgOutput_cols_channel_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_p_imgOutput_cols_channel : STD_LOGIC := '0';
    signal ap_sync_channel_write_p_imgOutput_cols_channel : STD_LOGIC;
    signal ap_channel_done_thresh_loc_channel : STD_LOGIC;
    signal thresh_loc_channel_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_thresh_loc_channel : STD_LOGIC := '0';
    signal ap_sync_channel_write_thresh_loc_channel : STD_LOGIC;
    signal ap_channel_done_imgInput1_rows_c23_channel : STD_LOGIC;
    signal imgInput1_rows_c23_channel_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_imgInput1_rows_c23_channel : STD_LOGIC := '0';
    signal ap_sync_channel_write_imgInput1_rows_c23_channel : STD_LOGIC;
    signal ap_channel_done_imgInput1_cols_c24_channel : STD_LOGIC;
    signal imgInput1_cols_c24_channel_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_imgInput1_cols_c24_channel : STD_LOGIC := '0';
    signal ap_sync_channel_write_imgInput1_cols_c24_channel : STD_LOGIC;
    signal ap_channel_done_ltm_in_rows_c25_channel : STD_LOGIC;
    signal ltm_in_rows_c25_channel_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_ltm_in_rows_c25_channel : STD_LOGIC := '0';
    signal ap_sync_channel_write_ltm_in_rows_c25_channel : STD_LOGIC;
    signal ap_channel_done_ltm_in_cols_c26_channel : STD_LOGIC;
    signal ltm_in_cols_c26_channel_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_ltm_in_cols_c26_channel : STD_LOGIC := '0';
    signal ap_sync_channel_write_ltm_in_cols_c26_channel : STD_LOGIC;
    signal AXIVideo2BayerMat_1_2160_3840_2_U0_ap_start : STD_LOGIC;
    signal AXIVideo2BayerMat_1_2160_3840_2_U0_ap_done : STD_LOGIC;
    signal AXIVideo2BayerMat_1_2160_3840_2_U0_ap_continue : STD_LOGIC;
    signal AXIVideo2BayerMat_1_2160_3840_2_U0_ap_idle : STD_LOGIC;
    signal AXIVideo2BayerMat_1_2160_3840_2_U0_ap_ready : STD_LOGIC;
    signal AXIVideo2BayerMat_1_2160_3840_2_U0_start_out : STD_LOGIC;
    signal AXIVideo2BayerMat_1_2160_3840_2_U0_start_write : STD_LOGIC;
    signal AXIVideo2BayerMat_1_2160_3840_2_U0_s_axis_video_TREADY : STD_LOGIC;
    signal AXIVideo2BayerMat_1_2160_3840_2_U0_imgInput1_4195_din : STD_LOGIC_VECTOR (31 downto 0);
    signal AXIVideo2BayerMat_1_2160_3840_2_U0_imgInput1_4195_write : STD_LOGIC;
    signal AXIVideo2BayerMat_1_2160_3840_2_U0_imgInput1_rows_c_din : STD_LOGIC_VECTOR (11 downto 0);
    signal AXIVideo2BayerMat_1_2160_3840_2_U0_imgInput1_rows_c_write : STD_LOGIC;
    signal AXIVideo2BayerMat_1_2160_3840_2_U0_imgInput1_cols_c_din : STD_LOGIC_VECTOR (11 downto 0);
    signal AXIVideo2BayerMat_1_2160_3840_2_U0_imgInput1_cols_c_write : STD_LOGIC;
    signal blackLevelCorrection_1_2160_3840_2_16_15_1_18_U0_ap_start : STD_LOGIC;
    signal blackLevelCorrection_1_2160_3840_2_16_15_1_18_U0_ap_done : STD_LOGIC;
    signal blackLevelCorrection_1_2160_3840_2_16_15_1_18_U0_ap_continue : STD_LOGIC;
    signal blackLevelCorrection_1_2160_3840_2_16_15_1_18_U0_ap_idle : STD_LOGIC;
    signal blackLevelCorrection_1_2160_3840_2_16_15_1_18_U0_ap_ready : STD_LOGIC;
    signal blackLevelCorrection_1_2160_3840_2_16_15_1_18_U0_p_Src_rows_read : STD_LOGIC;
    signal blackLevelCorrection_1_2160_3840_2_16_15_1_18_U0_p_Src_cols_read : STD_LOGIC;
    signal blackLevelCorrection_1_2160_3840_2_16_15_1_18_U0_imgInput1_4195_read : STD_LOGIC;
    signal blackLevelCorrection_1_2160_3840_2_16_15_1_18_U0_imgInput2_4196_din : STD_LOGIC_VECTOR (31 downto 0);
    signal blackLevelCorrection_1_2160_3840_2_16_15_1_18_U0_imgInput2_4196_write : STD_LOGIC;
    signal gaincontrol_3_1_2160_3840_2_U0_ap_start : STD_LOGIC;
    signal gaincontrol_3_1_2160_3840_2_U0_ap_done : STD_LOGIC;
    signal gaincontrol_3_1_2160_3840_2_U0_ap_continue : STD_LOGIC;
    signal gaincontrol_3_1_2160_3840_2_U0_ap_idle : STD_LOGIC;
    signal gaincontrol_3_1_2160_3840_2_U0_ap_ready : STD_LOGIC;
    signal gaincontrol_3_1_2160_3840_2_U0_imgInput2_4196_read : STD_LOGIC;
    signal gaincontrol_3_1_2160_3840_2_U0_gain_out_4197_din : STD_LOGIC_VECTOR (31 downto 0);
    signal gaincontrol_3_1_2160_3840_2_U0_gain_out_4197_write : STD_LOGIC;
    signal demosaicing_3_1_10_2160_3840_2_false_U0_ap_start : STD_LOGIC;
    signal demosaicing_3_1_10_2160_3840_2_false_U0_ap_done : STD_LOGIC;
    signal demosaicing_3_1_10_2160_3840_2_false_U0_ap_continue : STD_LOGIC;
    signal demosaicing_3_1_10_2160_3840_2_false_U0_ap_idle : STD_LOGIC;
    signal demosaicing_3_1_10_2160_3840_2_false_U0_ap_ready : STD_LOGIC;
    signal demosaicing_3_1_10_2160_3840_2_false_U0_gain_out_4197_read : STD_LOGIC;
    signal demosaicing_3_1_10_2160_3840_2_false_U0_demosaic_out_4198_din : STD_LOGIC_VECTOR (95 downto 0);
    signal demosaicing_3_1_10_2160_3840_2_false_U0_demosaic_out_4198_write : STD_LOGIC;
    signal function_awb_10_10_2160_3840_2_U0_ap_start : STD_LOGIC;
    signal function_awb_10_10_2160_3840_2_U0_ap_done : STD_LOGIC;
    signal function_awb_10_10_2160_3840_2_U0_ap_continue : STD_LOGIC;
    signal function_awb_10_10_2160_3840_2_U0_ap_idle : STD_LOGIC;
    signal function_awb_10_10_2160_3840_2_U0_ap_ready : STD_LOGIC;
    signal function_awb_10_10_2160_3840_2_U0_start_out : STD_LOGIC;
    signal function_awb_10_10_2160_3840_2_U0_start_write : STD_LOGIC;
    signal function_awb_10_10_2160_3840_2_U0_demosaic_out_data_read : STD_LOGIC;
    signal function_awb_10_10_2160_3840_2_U0_ltm_in_data_din : STD_LOGIC_VECTOR (95 downto 0);
    signal function_awb_10_10_2160_3840_2_U0_ltm_in_data_write : STD_LOGIC;
    signal function_awb_10_10_2160_3840_2_U0_hist0_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal function_awb_10_10_2160_3840_2_U0_hist0_ce0 : STD_LOGIC;
    signal function_awb_10_10_2160_3840_2_U0_hist0_we0 : STD_LOGIC;
    signal function_awb_10_10_2160_3840_2_U0_hist0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal function_awb_10_10_2160_3840_2_U0_hist01_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal function_awb_10_10_2160_3840_2_U0_hist01_ce0 : STD_LOGIC;
    signal function_awb_10_10_2160_3840_2_U0_hist01_we0 : STD_LOGIC;
    signal function_awb_10_10_2160_3840_2_U0_hist01_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal function_awb_10_10_2160_3840_2_U0_hist02_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal function_awb_10_10_2160_3840_2_U0_hist02_ce0 : STD_LOGIC;
    signal function_awb_10_10_2160_3840_2_U0_hist02_we0 : STD_LOGIC;
    signal function_awb_10_10_2160_3840_2_U0_hist02_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal function_awb_10_10_2160_3840_2_U0_hist1_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal function_awb_10_10_2160_3840_2_U0_hist1_ce0 : STD_LOGIC;
    signal function_awb_10_10_2160_3840_2_U0_hist13_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal function_awb_10_10_2160_3840_2_U0_hist13_ce0 : STD_LOGIC;
    signal function_awb_10_10_2160_3840_2_U0_hist14_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal function_awb_10_10_2160_3840_2_U0_hist14_ce0 : STD_LOGIC;
    signal function_awb_10_10_2160_3840_2_U0_ltm_in_rows_c_din : STD_LOGIC_VECTOR (11 downto 0);
    signal function_awb_10_10_2160_3840_2_U0_ltm_in_rows_c_write : STD_LOGIC;
    signal function_awb_10_10_2160_3840_2_U0_ltm_in_cols_c_din : STD_LOGIC_VECTOR (11 downto 0);
    signal function_awb_10_10_2160_3840_2_U0_ltm_in_cols_c_write : STD_LOGIC;
    signal ap_sync_continue : STD_LOGIC;
    signal colorcorrectionmatrix_0_10_10_2160_3840_2_2_U0_ap_start : STD_LOGIC;
    signal colorcorrectionmatrix_0_10_10_2160_3840_2_2_U0_ap_done : STD_LOGIC;
    signal colorcorrectionmatrix_0_10_10_2160_3840_2_2_U0_ap_continue : STD_LOGIC;
    signal colorcorrectionmatrix_0_10_10_2160_3840_2_2_U0_ap_idle : STD_LOGIC;
    signal colorcorrectionmatrix_0_10_10_2160_3840_2_2_U0_ap_ready : STD_LOGIC;
    signal colorcorrectionmatrix_0_10_10_2160_3840_2_2_U0_p_src_mat_rows_read : STD_LOGIC;
    signal colorcorrectionmatrix_0_10_10_2160_3840_2_2_U0_p_src_mat_cols_read : STD_LOGIC;
    signal colorcorrectionmatrix_0_10_10_2160_3840_2_2_U0_ltm_in_4199_read : STD_LOGIC;
    signal colorcorrectionmatrix_0_10_10_2160_3840_2_2_U0_lsc_out_4200_din : STD_LOGIC_VECTOR (95 downto 0);
    signal colorcorrectionmatrix_0_10_10_2160_3840_2_2_U0_lsc_out_4200_write : STD_LOGIC;
    signal xf_QuatizationDithering_10_9_2160_3840_256_65536_2_U0_ap_start : STD_LOGIC;
    signal xf_QuatizationDithering_10_9_2160_3840_256_65536_2_U0_ap_done : STD_LOGIC;
    signal xf_QuatizationDithering_10_9_2160_3840_256_65536_2_U0_ap_continue : STD_LOGIC;
    signal xf_QuatizationDithering_10_9_2160_3840_256_65536_2_U0_ap_idle : STD_LOGIC;
    signal xf_QuatizationDithering_10_9_2160_3840_256_65536_2_U0_ap_ready : STD_LOGIC;
    signal xf_QuatizationDithering_10_9_2160_3840_256_65536_2_U0_lsc_out_4200_read : STD_LOGIC;
    signal xf_QuatizationDithering_10_9_2160_3840_256_65536_2_U0_aecin_4202_din : STD_LOGIC_VECTOR (47 downto 0);
    signal xf_QuatizationDithering_10_9_2160_3840_256_65536_2_U0_aecin_4202_write : STD_LOGIC;
    signal gammacorrection_9_9_2160_3840_2_U0_ap_start : STD_LOGIC;
    signal gammacorrection_9_9_2160_3840_2_U0_ap_done : STD_LOGIC;
    signal gammacorrection_9_9_2160_3840_2_U0_ap_continue : STD_LOGIC;
    signal gammacorrection_9_9_2160_3840_2_U0_ap_idle : STD_LOGIC;
    signal gammacorrection_9_9_2160_3840_2_U0_ap_ready : STD_LOGIC;
    signal gammacorrection_9_9_2160_3840_2_U0_aecin_4202_read : STD_LOGIC;
    signal gammacorrection_9_9_2160_3840_2_U0_p_dst_4201_din : STD_LOGIC_VECTOR (47 downto 0);
    signal gammacorrection_9_9_2160_3840_2_U0_p_dst_4201_write : STD_LOGIC;
    signal gammacorrection_9_9_2160_3840_2_U0_gamma_lut_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal gammacorrection_9_9_2160_3840_2_U0_gamma_lut_ce0 : STD_LOGIC;
    signal rgb2yuyv_9_1_2160_3840_2_U0_ap_start : STD_LOGIC;
    signal rgb2yuyv_9_1_2160_3840_2_U0_ap_done : STD_LOGIC;
    signal rgb2yuyv_9_1_2160_3840_2_U0_ap_continue : STD_LOGIC;
    signal rgb2yuyv_9_1_2160_3840_2_U0_ap_idle : STD_LOGIC;
    signal rgb2yuyv_9_1_2160_3840_2_U0_ap_ready : STD_LOGIC;
    signal rgb2yuyv_9_1_2160_3840_2_U0_p_dst_4201_read : STD_LOGIC;
    signal rgb2yuyv_9_1_2160_3840_2_U0_p_imgOutput_4203_din : STD_LOGIC_VECTOR (31 downto 0);
    signal rgb2yuyv_9_1_2160_3840_2_U0_p_imgOutput_4203_write : STD_LOGIC;
    signal ColorMat2AXIvideo_yuv_1_2160_3840_2_U0_ap_start : STD_LOGIC;
    signal ColorMat2AXIvideo_yuv_1_2160_3840_2_U0_ap_done : STD_LOGIC;
    signal ColorMat2AXIvideo_yuv_1_2160_3840_2_U0_ap_continue : STD_LOGIC;
    signal ColorMat2AXIvideo_yuv_1_2160_3840_2_U0_ap_idle : STD_LOGIC;
    signal ColorMat2AXIvideo_yuv_1_2160_3840_2_U0_ap_ready : STD_LOGIC;
    signal ColorMat2AXIvideo_yuv_1_2160_3840_2_U0_p_imgOutput_4203_read : STD_LOGIC;
    signal ColorMat2AXIvideo_yuv_1_2160_3840_2_U0_m_axis_video_TDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal ColorMat2AXIvideo_yuv_1_2160_3840_2_U0_m_axis_video_TVALID : STD_LOGIC;
    signal ColorMat2AXIvideo_yuv_1_2160_3840_2_U0_m_axis_video_TKEEP : STD_LOGIC_VECTOR (3 downto 0);
    signal ColorMat2AXIvideo_yuv_1_2160_3840_2_U0_m_axis_video_TSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal ColorMat2AXIvideo_yuv_1_2160_3840_2_U0_m_axis_video_TUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal ColorMat2AXIvideo_yuv_1_2160_3840_2_U0_m_axis_video_TLAST : STD_LOGIC_VECTOR (0 downto 0);
    signal ColorMat2AXIvideo_yuv_1_2160_3840_2_U0_m_axis_video_TID : STD_LOGIC_VECTOR (0 downto 0);
    signal ColorMat2AXIvideo_yuv_1_2160_3840_2_U0_m_axis_video_TDEST : STD_LOGIC_VECTOR (0 downto 0);
    signal rgain_c_channel_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal rgain_c_channel_empty_n : STD_LOGIC;
    signal bgain_c_channel_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal bgain_c_channel_empty_n : STD_LOGIC;
    signal ltm_in_cols_c26_channel_dout : STD_LOGIC_VECTOR (11 downto 0);
    signal ltm_in_cols_c26_channel_empty_n : STD_LOGIC;
    signal ltm_in_rows_c25_channel_dout : STD_LOGIC_VECTOR (11 downto 0);
    signal ltm_in_rows_c25_channel_empty_n : STD_LOGIC;
    signal imgInput1_cols_c24_channel_dout : STD_LOGIC_VECTOR (11 downto 0);
    signal imgInput1_cols_c24_channel_empty_n : STD_LOGIC;
    signal imgInput1_rows_c23_channel_dout : STD_LOGIC_VECTOR (11 downto 0);
    signal imgInput1_rows_c23_channel_empty_n : STD_LOGIC;
    signal thresh_loc_channel_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal thresh_loc_channel_empty_n : STD_LOGIC;
    signal p_imgOutput_cols_channel_dout : STD_LOGIC_VECTOR (11 downto 0);
    signal p_imgOutput_cols_channel_empty_n : STD_LOGIC;
    signal p_imgOutput_rows_channel_dout : STD_LOGIC_VECTOR (11 downto 0);
    signal p_imgOutput_rows_channel_empty_n : STD_LOGIC;
    signal aecin_cols_channel_dout : STD_LOGIC_VECTOR (11 downto 0);
    signal aecin_cols_channel_empty_n : STD_LOGIC;
    signal aecin_rows_channel_dout : STD_LOGIC_VECTOR (11 downto 0);
    signal aecin_rows_channel_empty_n : STD_LOGIC;
    signal p_dst_cols_channel_dout : STD_LOGIC_VECTOR (11 downto 0);
    signal p_dst_cols_channel_empty_n : STD_LOGIC;
    signal p_dst_rows_channel_dout : STD_LOGIC_VECTOR (11 downto 0);
    signal p_dst_rows_channel_empty_n : STD_LOGIC;
    signal lsc_out_cols_channel_dout : STD_LOGIC_VECTOR (11 downto 0);
    signal lsc_out_cols_channel_empty_n : STD_LOGIC;
    signal lsc_out_rows_channel_dout : STD_LOGIC_VECTOR (11 downto 0);
    signal lsc_out_rows_channel_empty_n : STD_LOGIC;
    signal gain_out_cols_channel_dout : STD_LOGIC_VECTOR (11 downto 0);
    signal gain_out_cols_channel_empty_n : STD_LOGIC;
    signal gain_out_rows_channel_dout : STD_LOGIC_VECTOR (11 downto 0);
    signal gain_out_rows_channel_empty_n : STD_LOGIC;
    signal imgInput2_cols_channel_dout : STD_LOGIC_VECTOR (11 downto 0);
    signal imgInput2_cols_channel_empty_n : STD_LOGIC;
    signal imgInput2_rows_channel_dout : STD_LOGIC_VECTOR (11 downto 0);
    signal imgInput2_rows_channel_empty_n : STD_LOGIC;
    signal demosaic_out_rows_channel_dout : STD_LOGIC_VECTOR (11 downto 0);
    signal demosaic_out_rows_channel_empty_n : STD_LOGIC;
    signal demosaic_out_cols_channel_dout : STD_LOGIC_VECTOR (11 downto 0);
    signal demosaic_out_cols_channel_empty_n : STD_LOGIC;
    signal imgInput1_data_full_n : STD_LOGIC;
    signal imgInput1_data_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal imgInput1_data_empty_n : STD_LOGIC;
    signal imgInput1_rows_c_full_n : STD_LOGIC;
    signal imgInput1_rows_c_dout : STD_LOGIC_VECTOR (11 downto 0);
    signal imgInput1_rows_c_empty_n : STD_LOGIC;
    signal imgInput1_cols_c_full_n : STD_LOGIC;
    signal imgInput1_cols_c_dout : STD_LOGIC_VECTOR (11 downto 0);
    signal imgInput1_cols_c_empty_n : STD_LOGIC;
    signal imgInput2_data_full_n : STD_LOGIC;
    signal imgInput2_data_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal imgInput2_data_empty_n : STD_LOGIC;
    signal gain_out_data_full_n : STD_LOGIC;
    signal gain_out_data_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal gain_out_data_empty_n : STD_LOGIC;
    signal demosaic_out_data_full_n : STD_LOGIC;
    signal demosaic_out_data_dout : STD_LOGIC_VECTOR (95 downto 0);
    signal demosaic_out_data_empty_n : STD_LOGIC;
    signal ltm_in_data_full_n : STD_LOGIC;
    signal ltm_in_data_dout : STD_LOGIC_VECTOR (95 downto 0);
    signal ltm_in_data_empty_n : STD_LOGIC;
    signal ltm_in_rows_c_full_n : STD_LOGIC;
    signal ltm_in_rows_c_dout : STD_LOGIC_VECTOR (11 downto 0);
    signal ltm_in_rows_c_empty_n : STD_LOGIC;
    signal ltm_in_cols_c_full_n : STD_LOGIC;
    signal ltm_in_cols_c_dout : STD_LOGIC_VECTOR (11 downto 0);
    signal ltm_in_cols_c_empty_n : STD_LOGIC;
    signal lsc_out_data_full_n : STD_LOGIC;
    signal lsc_out_data_dout : STD_LOGIC_VECTOR (95 downto 0);
    signal lsc_out_data_empty_n : STD_LOGIC;
    signal aecin_data_full_n : STD_LOGIC;
    signal aecin_data_dout : STD_LOGIC_VECTOR (47 downto 0);
    signal aecin_data_empty_n : STD_LOGIC;
    signal p_dst_data_full_n : STD_LOGIC;
    signal p_dst_data_dout : STD_LOGIC_VECTOR (47 downto 0);
    signal p_dst_data_empty_n : STD_LOGIC;
    signal p_imgOutput_data_full_n : STD_LOGIC;
    signal p_imgOutput_data_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal p_imgOutput_data_empty_n : STD_LOGIC;
    signal ap_sync_done : STD_LOGIC;
    signal ap_sync_ready : STD_LOGIC;
    signal ap_sync_reg_entry_proc_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_entry_proc_U0_ap_ready : STD_LOGIC;
    signal ap_sync_reg_ISPpipeline_Block_ZN2xf2cv3MatILi1ELi2160ELi3840ELi2ELi2EEC2Eii_exit1_proc_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_ISPpipeline_Block_ZN2xf2cv3MatILi1ELi2160ELi3840ELi2ELi2EEC2Eii_exit1_proc_U0_ap_ready : STD_LOGIC;
    signal ap_sync_reg_function_awb_10_10_2160_3840_2_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_function_awb_10_10_2160_3840_2_U0_ap_ready : STD_LOGIC;
    signal ap_sync_reg_gammacorrection_9_9_2160_3840_2_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_gammacorrection_9_9_2160_3840_2_U0_ap_ready : STD_LOGIC;
    signal start_for_blackLevelCorrection_1_2160_3840_2_16_15_1_18_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_blackLevelCorrection_1_2160_3840_2_16_15_1_18_U0_full_n : STD_LOGIC;
    signal start_for_blackLevelCorrection_1_2160_3840_2_16_15_1_18_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_blackLevelCorrection_1_2160_3840_2_16_15_1_18_U0_empty_n : STD_LOGIC;
    signal start_for_colorcorrectionmatrix_0_10_10_2160_3840_2_2_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_colorcorrectionmatrix_0_10_10_2160_3840_2_2_U0_full_n : STD_LOGIC;
    signal start_for_colorcorrectionmatrix_0_10_10_2160_3840_2_2_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_colorcorrectionmatrix_0_10_10_2160_3840_2_2_U0_empty_n : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component ISPPipeline_accel_entry_proc IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        rgain : IN STD_LOGIC_VECTOR (15 downto 0);
        bgain : IN STD_LOGIC_VECTOR (15 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component ISPPipeline_accel_ISPpipeline_Block_ZN2xf2cv3MatILi1ELi2160ELi3840ELi2ELi2EEC2Eii_exit1_proc IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        height : IN STD_LOGIC_VECTOR (11 downto 0);
        width : IN STD_LOGIC_VECTOR (11 downto 0);
        pawb : IN STD_LOGIC_VECTOR (15 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (11 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (11 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (11 downto 0);
        ap_return_5 : OUT STD_LOGIC_VECTOR (11 downto 0);
        ap_return_6 : OUT STD_LOGIC_VECTOR (11 downto 0);
        ap_return_7 : OUT STD_LOGIC_VECTOR (11 downto 0);
        ap_return_8 : OUT STD_LOGIC_VECTOR (11 downto 0);
        ap_return_9 : OUT STD_LOGIC_VECTOR (11 downto 0);
        ap_return_10 : OUT STD_LOGIC_VECTOR (11 downto 0);
        ap_return_11 : OUT STD_LOGIC_VECTOR (11 downto 0);
        ap_return_12 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_13 : OUT STD_LOGIC_VECTOR (11 downto 0);
        ap_return_14 : OUT STD_LOGIC_VECTOR (11 downto 0);
        ap_return_15 : OUT STD_LOGIC_VECTOR (11 downto 0);
        ap_return_16 : OUT STD_LOGIC_VECTOR (11 downto 0);
        ap_return_17 : OUT STD_LOGIC_VECTOR (11 downto 0);
        ap_return_18 : OUT STD_LOGIC_VECTOR (11 downto 0) );
    end component;


    component ISPPipeline_accel_AXIVideo2BayerMat_1_2160_3840_2_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        s_axis_video_TDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        s_axis_video_TVALID : IN STD_LOGIC;
        s_axis_video_TREADY : OUT STD_LOGIC;
        s_axis_video_TKEEP : IN STD_LOGIC_VECTOR (3 downto 0);
        s_axis_video_TSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
        s_axis_video_TUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        s_axis_video_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
        s_axis_video_TID : IN STD_LOGIC_VECTOR (0 downto 0);
        s_axis_video_TDEST : IN STD_LOGIC_VECTOR (0 downto 0);
        p_read : IN STD_LOGIC_VECTOR (11 downto 0);
        p_read1 : IN STD_LOGIC_VECTOR (11 downto 0);
        imgInput1_4195_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        imgInput1_4195_full_n : IN STD_LOGIC;
        imgInput1_4195_write : OUT STD_LOGIC;
        imgInput1_rows_c_din : OUT STD_LOGIC_VECTOR (11 downto 0);
        imgInput1_rows_c_full_n : IN STD_LOGIC;
        imgInput1_rows_c_write : OUT STD_LOGIC;
        imgInput1_cols_c_din : OUT STD_LOGIC_VECTOR (11 downto 0);
        imgInput1_cols_c_full_n : IN STD_LOGIC;
        imgInput1_cols_c_write : OUT STD_LOGIC );
    end component;


    component ISPPipeline_accel_blackLevelCorrection_1_2160_3840_2_16_15_1_18 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        p_Src_rows_dout : IN STD_LOGIC_VECTOR (11 downto 0);
        p_Src_rows_empty_n : IN STD_LOGIC;
        p_Src_rows_read : OUT STD_LOGIC;
        p_Src_cols_dout : IN STD_LOGIC_VECTOR (11 downto 0);
        p_Src_cols_empty_n : IN STD_LOGIC;
        p_Src_cols_read : OUT STD_LOGIC;
        imgInput1_4195_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        imgInput1_4195_empty_n : IN STD_LOGIC;
        imgInput1_4195_read : OUT STD_LOGIC;
        imgInput2_4196_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        imgInput2_4196_full_n : IN STD_LOGIC;
        imgInput2_4196_write : OUT STD_LOGIC );
    end component;


    component ISPPipeline_accel_gaincontrol_3_1_2160_3840_2_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        p_read : IN STD_LOGIC_VECTOR (11 downto 0);
        p_read1 : IN STD_LOGIC_VECTOR (11 downto 0);
        imgInput2_4196_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        imgInput2_4196_empty_n : IN STD_LOGIC;
        imgInput2_4196_read : OUT STD_LOGIC;
        gain_out_4197_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        gain_out_4197_full_n : IN STD_LOGIC;
        gain_out_4197_write : OUT STD_LOGIC;
        p_read2 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read3 : IN STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component ISPPipeline_accel_demosaicing_3_1_10_2160_3840_2_false_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        p_read : IN STD_LOGIC_VECTOR (11 downto 0);
        p_read1 : IN STD_LOGIC_VECTOR (11 downto 0);
        gain_out_4197_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        gain_out_4197_empty_n : IN STD_LOGIC;
        gain_out_4197_read : OUT STD_LOGIC;
        demosaic_out_4198_din : OUT STD_LOGIC_VECTOR (95 downto 0);
        demosaic_out_4198_full_n : IN STD_LOGIC;
        demosaic_out_4198_write : OUT STD_LOGIC );
    end component;


    component ISPPipeline_accel_function_awb_10_10_2160_3840_2_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        p_read : IN STD_LOGIC_VECTOR (11 downto 0);
        p_read1 : IN STD_LOGIC_VECTOR (11 downto 0);
        demosaic_out_data_dout : IN STD_LOGIC_VECTOR (95 downto 0);
        demosaic_out_data_empty_n : IN STD_LOGIC;
        demosaic_out_data_read : OUT STD_LOGIC;
        p_read2 : IN STD_LOGIC_VECTOR (11 downto 0);
        p_read13 : IN STD_LOGIC_VECTOR (11 downto 0);
        ltm_in_data_din : OUT STD_LOGIC_VECTOR (95 downto 0);
        ltm_in_data_full_n : IN STD_LOGIC;
        ltm_in_data_write : OUT STD_LOGIC;
        hist0_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        hist0_ce0 : OUT STD_LOGIC;
        hist0_we0 : OUT STD_LOGIC;
        hist0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        hist01_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        hist01_ce0 : OUT STD_LOGIC;
        hist01_we0 : OUT STD_LOGIC;
        hist01_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        hist02_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        hist02_ce0 : OUT STD_LOGIC;
        hist02_we0 : OUT STD_LOGIC;
        hist02_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        hist1_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        hist1_ce0 : OUT STD_LOGIC;
        hist1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        hist13_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        hist13_ce0 : OUT STD_LOGIC;
        hist13_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        hist14_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        hist14_ce0 : OUT STD_LOGIC;
        hist14_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        height : IN STD_LOGIC_VECTOR (11 downto 0);
        width : IN STD_LOGIC_VECTOR (11 downto 0);
        mode_reg : IN STD_LOGIC_VECTOR (0 downto 0);
        p_read24 : IN STD_LOGIC_VECTOR (31 downto 0);
        ltm_in_rows_c_din : OUT STD_LOGIC_VECTOR (11 downto 0);
        ltm_in_rows_c_full_n : IN STD_LOGIC;
        ltm_in_rows_c_write : OUT STD_LOGIC;
        ltm_in_cols_c_din : OUT STD_LOGIC_VECTOR (11 downto 0);
        ltm_in_cols_c_full_n : IN STD_LOGIC;
        ltm_in_cols_c_write : OUT STD_LOGIC );
    end component;


    component ISPPipeline_accel_colorcorrectionmatrix_0_10_10_2160_3840_2_2_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        p_src_mat_rows_dout : IN STD_LOGIC_VECTOR (11 downto 0);
        p_src_mat_rows_empty_n : IN STD_LOGIC;
        p_src_mat_rows_read : OUT STD_LOGIC;
        p_src_mat_cols_dout : IN STD_LOGIC_VECTOR (11 downto 0);
        p_src_mat_cols_empty_n : IN STD_LOGIC;
        p_src_mat_cols_read : OUT STD_LOGIC;
        ltm_in_4199_dout : IN STD_LOGIC_VECTOR (95 downto 0);
        ltm_in_4199_empty_n : IN STD_LOGIC;
        ltm_in_4199_read : OUT STD_LOGIC;
        lsc_out_4200_din : OUT STD_LOGIC_VECTOR (95 downto 0);
        lsc_out_4200_full_n : IN STD_LOGIC;
        lsc_out_4200_write : OUT STD_LOGIC );
    end component;


    component ISPPipeline_accel_xf_QuatizationDithering_10_9_2160_3840_256_65536_2_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        p_read : IN STD_LOGIC_VECTOR (11 downto 0);
        p_read1 : IN STD_LOGIC_VECTOR (11 downto 0);
        lsc_out_4200_dout : IN STD_LOGIC_VECTOR (95 downto 0);
        lsc_out_4200_empty_n : IN STD_LOGIC;
        lsc_out_4200_read : OUT STD_LOGIC;
        aecin_4202_din : OUT STD_LOGIC_VECTOR (47 downto 0);
        aecin_4202_full_n : IN STD_LOGIC;
        aecin_4202_write : OUT STD_LOGIC );
    end component;


    component ISPPipeline_accel_gammacorrection_9_9_2160_3840_2_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        p_read : IN STD_LOGIC_VECTOR (11 downto 0);
        p_read1 : IN STD_LOGIC_VECTOR (11 downto 0);
        aecin_4202_dout : IN STD_LOGIC_VECTOR (47 downto 0);
        aecin_4202_empty_n : IN STD_LOGIC;
        aecin_4202_read : OUT STD_LOGIC;
        p_dst_4201_din : OUT STD_LOGIC_VECTOR (47 downto 0);
        p_dst_4201_full_n : IN STD_LOGIC;
        p_dst_4201_write : OUT STD_LOGIC;
        gamma_lut_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        gamma_lut_ce0 : OUT STD_LOGIC;
        gamma_lut_q0 : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component ISPPipeline_accel_rgb2yuyv_9_1_2160_3840_2_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        p_read : IN STD_LOGIC_VECTOR (11 downto 0);
        p_read1 : IN STD_LOGIC_VECTOR (11 downto 0);
        p_dst_4201_dout : IN STD_LOGIC_VECTOR (47 downto 0);
        p_dst_4201_empty_n : IN STD_LOGIC;
        p_dst_4201_read : OUT STD_LOGIC;
        p_imgOutput_4203_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        p_imgOutput_4203_full_n : IN STD_LOGIC;
        p_imgOutput_4203_write : OUT STD_LOGIC );
    end component;


    component ISPPipeline_accel_ColorMat2AXIvideo_yuv_1_2160_3840_2_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        p_read : IN STD_LOGIC_VECTOR (11 downto 0);
        p_read1 : IN STD_LOGIC_VECTOR (11 downto 0);
        p_imgOutput_4203_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        p_imgOutput_4203_empty_n : IN STD_LOGIC;
        p_imgOutput_4203_read : OUT STD_LOGIC;
        m_axis_video_TDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axis_video_TVALID : OUT STD_LOGIC;
        m_axis_video_TREADY : IN STD_LOGIC;
        m_axis_video_TKEEP : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axis_video_TSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axis_video_TUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axis_video_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axis_video_TID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axis_video_TDEST : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component ISPPipeline_accel_fifo_w16_d4_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (15 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (15 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component ISPPipeline_accel_fifo_w12_d6_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (11 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (11 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component ISPPipeline_accel_fifo_w12_d2_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (11 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (11 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component ISPPipeline_accel_fifo_w32_d6_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component ISPPipeline_accel_fifo_w12_d11_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (11 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (11 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component ISPPipeline_accel_fifo_w12_d9_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (11 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (11 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component ISPPipeline_accel_fifo_w12_d10_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (11 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (11 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component ISPPipeline_accel_fifo_w12_d8_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (11 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (11 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component ISPPipeline_accel_fifo_w12_d5_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (11 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (11 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component ISPPipeline_accel_fifo_w12_d4_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (11 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (11 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component ISPPipeline_accel_fifo_w32_d2_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component ISPPipeline_accel_fifo_w96_d2_S_x IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (95 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (95 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component ISPPipeline_accel_fifo_w48_d2_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (47 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (47 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component ISPPipeline_accel_start_for_blackLevelCorrection_1_2160_3840_2_16_15_1_18_U0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component ISPPipeline_accel_start_for_colorcorrectionmatrix_0_10_10_2160_3840_2_2_U0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;



begin
    entry_proc_U0 : component ISPPipeline_accel_entry_proc
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => entry_proc_U0_ap_start,
        ap_done => entry_proc_U0_ap_done,
        ap_continue => entry_proc_U0_ap_continue,
        ap_idle => entry_proc_U0_ap_idle,
        ap_ready => entry_proc_U0_ap_ready,
        rgain => rgain,
        bgain => bgain,
        ap_return_0 => entry_proc_U0_ap_return_0,
        ap_return_1 => entry_proc_U0_ap_return_1);

    ISPpipeline_Block_ZN2xf2cv3MatILi1ELi2160ELi3840ELi2ELi2EEC2Eii_exit1_proc_U0 : component ISPPipeline_accel_ISPpipeline_Block_ZN2xf2cv3MatILi1ELi2160ELi3840ELi2ELi2EEC2Eii_exit1_proc
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ISPpipeline_Block_ZN2xf2cv3MatILi1ELi2160ELi3840ELi2ELi2EEC2Eii_exit1_proc_U0_ap_start,
        ap_done => ISPpipeline_Block_ZN2xf2cv3MatILi1ELi2160ELi3840ELi2ELi2EEC2Eii_exit1_proc_U0_ap_done,
        ap_continue => ISPpipeline_Block_ZN2xf2cv3MatILi1ELi2160ELi3840ELi2ELi2EEC2Eii_exit1_proc_U0_ap_continue,
        ap_idle => ISPpipeline_Block_ZN2xf2cv3MatILi1ELi2160ELi3840ELi2ELi2EEC2Eii_exit1_proc_U0_ap_idle,
        ap_ready => ISPpipeline_Block_ZN2xf2cv3MatILi1ELi2160ELi3840ELi2ELi2EEC2Eii_exit1_proc_U0_ap_ready,
        height => height,
        width => width,
        pawb => pawb,
        ap_return_0 => ISPpipeline_Block_ZN2xf2cv3MatILi1ELi2160ELi3840ELi2ELi2EEC2Eii_exit1_proc_U0_ap_return_0,
        ap_return_1 => ISPpipeline_Block_ZN2xf2cv3MatILi1ELi2160ELi3840ELi2ELi2EEC2Eii_exit1_proc_U0_ap_return_1,
        ap_return_2 => ISPpipeline_Block_ZN2xf2cv3MatILi1ELi2160ELi3840ELi2ELi2EEC2Eii_exit1_proc_U0_ap_return_2,
        ap_return_3 => ISPpipeline_Block_ZN2xf2cv3MatILi1ELi2160ELi3840ELi2ELi2EEC2Eii_exit1_proc_U0_ap_return_3,
        ap_return_4 => ISPpipeline_Block_ZN2xf2cv3MatILi1ELi2160ELi3840ELi2ELi2EEC2Eii_exit1_proc_U0_ap_return_4,
        ap_return_5 => ISPpipeline_Block_ZN2xf2cv3MatILi1ELi2160ELi3840ELi2ELi2EEC2Eii_exit1_proc_U0_ap_return_5,
        ap_return_6 => ISPpipeline_Block_ZN2xf2cv3MatILi1ELi2160ELi3840ELi2ELi2EEC2Eii_exit1_proc_U0_ap_return_6,
        ap_return_7 => ISPpipeline_Block_ZN2xf2cv3MatILi1ELi2160ELi3840ELi2ELi2EEC2Eii_exit1_proc_U0_ap_return_7,
        ap_return_8 => ISPpipeline_Block_ZN2xf2cv3MatILi1ELi2160ELi3840ELi2ELi2EEC2Eii_exit1_proc_U0_ap_return_8,
        ap_return_9 => ISPpipeline_Block_ZN2xf2cv3MatILi1ELi2160ELi3840ELi2ELi2EEC2Eii_exit1_proc_U0_ap_return_9,
        ap_return_10 => ISPpipeline_Block_ZN2xf2cv3MatILi1ELi2160ELi3840ELi2ELi2EEC2Eii_exit1_proc_U0_ap_return_10,
        ap_return_11 => ISPpipeline_Block_ZN2xf2cv3MatILi1ELi2160ELi3840ELi2ELi2EEC2Eii_exit1_proc_U0_ap_return_11,
        ap_return_12 => ISPpipeline_Block_ZN2xf2cv3MatILi1ELi2160ELi3840ELi2ELi2EEC2Eii_exit1_proc_U0_ap_return_12,
        ap_return_13 => ISPpipeline_Block_ZN2xf2cv3MatILi1ELi2160ELi3840ELi2ELi2EEC2Eii_exit1_proc_U0_ap_return_13,
        ap_return_14 => ISPpipeline_Block_ZN2xf2cv3MatILi1ELi2160ELi3840ELi2ELi2EEC2Eii_exit1_proc_U0_ap_return_14,
        ap_return_15 => ISPpipeline_Block_ZN2xf2cv3MatILi1ELi2160ELi3840ELi2ELi2EEC2Eii_exit1_proc_U0_ap_return_15,
        ap_return_16 => ISPpipeline_Block_ZN2xf2cv3MatILi1ELi2160ELi3840ELi2ELi2EEC2Eii_exit1_proc_U0_ap_return_16,
        ap_return_17 => ISPpipeline_Block_ZN2xf2cv3MatILi1ELi2160ELi3840ELi2ELi2EEC2Eii_exit1_proc_U0_ap_return_17,
        ap_return_18 => ISPpipeline_Block_ZN2xf2cv3MatILi1ELi2160ELi3840ELi2ELi2EEC2Eii_exit1_proc_U0_ap_return_18);

    AXIVideo2BayerMat_1_2160_3840_2_U0 : component ISPPipeline_accel_AXIVideo2BayerMat_1_2160_3840_2_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => AXIVideo2BayerMat_1_2160_3840_2_U0_ap_start,
        start_full_n => start_for_blackLevelCorrection_1_2160_3840_2_16_15_1_18_U0_full_n,
        ap_done => AXIVideo2BayerMat_1_2160_3840_2_U0_ap_done,
        ap_continue => AXIVideo2BayerMat_1_2160_3840_2_U0_ap_continue,
        ap_idle => AXIVideo2BayerMat_1_2160_3840_2_U0_ap_idle,
        ap_ready => AXIVideo2BayerMat_1_2160_3840_2_U0_ap_ready,
        start_out => AXIVideo2BayerMat_1_2160_3840_2_U0_start_out,
        start_write => AXIVideo2BayerMat_1_2160_3840_2_U0_start_write,
        s_axis_video_TDATA => s_axis_video_TDATA,
        s_axis_video_TVALID => s_axis_video_TVALID,
        s_axis_video_TREADY => AXIVideo2BayerMat_1_2160_3840_2_U0_s_axis_video_TREADY,
        s_axis_video_TKEEP => s_axis_video_TKEEP,
        s_axis_video_TSTRB => s_axis_video_TSTRB,
        s_axis_video_TUSER => s_axis_video_TUSER,
        s_axis_video_TLAST => s_axis_video_TLAST,
        s_axis_video_TID => s_axis_video_TID,
        s_axis_video_TDEST => s_axis_video_TDEST,
        p_read => imgInput1_rows_c23_channel_dout,
        p_read1 => imgInput1_cols_c24_channel_dout,
        imgInput1_4195_din => AXIVideo2BayerMat_1_2160_3840_2_U0_imgInput1_4195_din,
        imgInput1_4195_full_n => imgInput1_data_full_n,
        imgInput1_4195_write => AXIVideo2BayerMat_1_2160_3840_2_U0_imgInput1_4195_write,
        imgInput1_rows_c_din => AXIVideo2BayerMat_1_2160_3840_2_U0_imgInput1_rows_c_din,
        imgInput1_rows_c_full_n => imgInput1_rows_c_full_n,
        imgInput1_rows_c_write => AXIVideo2BayerMat_1_2160_3840_2_U0_imgInput1_rows_c_write,
        imgInput1_cols_c_din => AXIVideo2BayerMat_1_2160_3840_2_U0_imgInput1_cols_c_din,
        imgInput1_cols_c_full_n => imgInput1_cols_c_full_n,
        imgInput1_cols_c_write => AXIVideo2BayerMat_1_2160_3840_2_U0_imgInput1_cols_c_write);

    blackLevelCorrection_1_2160_3840_2_16_15_1_18_U0 : component ISPPipeline_accel_blackLevelCorrection_1_2160_3840_2_16_15_1_18
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => blackLevelCorrection_1_2160_3840_2_16_15_1_18_U0_ap_start,
        ap_done => blackLevelCorrection_1_2160_3840_2_16_15_1_18_U0_ap_done,
        ap_continue => blackLevelCorrection_1_2160_3840_2_16_15_1_18_U0_ap_continue,
        ap_idle => blackLevelCorrection_1_2160_3840_2_16_15_1_18_U0_ap_idle,
        ap_ready => blackLevelCorrection_1_2160_3840_2_16_15_1_18_U0_ap_ready,
        p_Src_rows_dout => imgInput1_rows_c_dout,
        p_Src_rows_empty_n => imgInput1_rows_c_empty_n,
        p_Src_rows_read => blackLevelCorrection_1_2160_3840_2_16_15_1_18_U0_p_Src_rows_read,
        p_Src_cols_dout => imgInput1_cols_c_dout,
        p_Src_cols_empty_n => imgInput1_cols_c_empty_n,
        p_Src_cols_read => blackLevelCorrection_1_2160_3840_2_16_15_1_18_U0_p_Src_cols_read,
        imgInput1_4195_dout => imgInput1_data_dout,
        imgInput1_4195_empty_n => imgInput1_data_empty_n,
        imgInput1_4195_read => blackLevelCorrection_1_2160_3840_2_16_15_1_18_U0_imgInput1_4195_read,
        imgInput2_4196_din => blackLevelCorrection_1_2160_3840_2_16_15_1_18_U0_imgInput2_4196_din,
        imgInput2_4196_full_n => imgInput2_data_full_n,
        imgInput2_4196_write => blackLevelCorrection_1_2160_3840_2_16_15_1_18_U0_imgInput2_4196_write);

    gaincontrol_3_1_2160_3840_2_U0 : component ISPPipeline_accel_gaincontrol_3_1_2160_3840_2_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => gaincontrol_3_1_2160_3840_2_U0_ap_start,
        ap_done => gaincontrol_3_1_2160_3840_2_U0_ap_done,
        ap_continue => gaincontrol_3_1_2160_3840_2_U0_ap_continue,
        ap_idle => gaincontrol_3_1_2160_3840_2_U0_ap_idle,
        ap_ready => gaincontrol_3_1_2160_3840_2_U0_ap_ready,
        p_read => imgInput2_rows_channel_dout,
        p_read1 => imgInput2_cols_channel_dout,
        imgInput2_4196_dout => imgInput2_data_dout,
        imgInput2_4196_empty_n => imgInput2_data_empty_n,
        imgInput2_4196_read => gaincontrol_3_1_2160_3840_2_U0_imgInput2_4196_read,
        gain_out_4197_din => gaincontrol_3_1_2160_3840_2_U0_gain_out_4197_din,
        gain_out_4197_full_n => gain_out_data_full_n,
        gain_out_4197_write => gaincontrol_3_1_2160_3840_2_U0_gain_out_4197_write,
        p_read2 => rgain_c_channel_dout,
        p_read3 => bgain_c_channel_dout);

    demosaicing_3_1_10_2160_3840_2_false_U0 : component ISPPipeline_accel_demosaicing_3_1_10_2160_3840_2_false_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => demosaicing_3_1_10_2160_3840_2_false_U0_ap_start,
        ap_done => demosaicing_3_1_10_2160_3840_2_false_U0_ap_done,
        ap_continue => demosaicing_3_1_10_2160_3840_2_false_U0_ap_continue,
        ap_idle => demosaicing_3_1_10_2160_3840_2_false_U0_ap_idle,
        ap_ready => demosaicing_3_1_10_2160_3840_2_false_U0_ap_ready,
        p_read => gain_out_rows_channel_dout,
        p_read1 => gain_out_cols_channel_dout,
        gain_out_4197_dout => gain_out_data_dout,
        gain_out_4197_empty_n => gain_out_data_empty_n,
        gain_out_4197_read => demosaicing_3_1_10_2160_3840_2_false_U0_gain_out_4197_read,
        demosaic_out_4198_din => demosaicing_3_1_10_2160_3840_2_false_U0_demosaic_out_4198_din,
        demosaic_out_4198_full_n => demosaic_out_data_full_n,
        demosaic_out_4198_write => demosaicing_3_1_10_2160_3840_2_false_U0_demosaic_out_4198_write);

    function_awb_10_10_2160_3840_2_U0 : component ISPPipeline_accel_function_awb_10_10_2160_3840_2_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => function_awb_10_10_2160_3840_2_U0_ap_start,
        start_full_n => start_for_colorcorrectionmatrix_0_10_10_2160_3840_2_2_U0_full_n,
        ap_done => function_awb_10_10_2160_3840_2_U0_ap_done,
        ap_continue => function_awb_10_10_2160_3840_2_U0_ap_continue,
        ap_idle => function_awb_10_10_2160_3840_2_U0_ap_idle,
        ap_ready => function_awb_10_10_2160_3840_2_U0_ap_ready,
        start_out => function_awb_10_10_2160_3840_2_U0_start_out,
        start_write => function_awb_10_10_2160_3840_2_U0_start_write,
        p_read => demosaic_out_rows_channel_dout,
        p_read1 => demosaic_out_cols_channel_dout,
        demosaic_out_data_dout => demosaic_out_data_dout,
        demosaic_out_data_empty_n => demosaic_out_data_empty_n,
        demosaic_out_data_read => function_awb_10_10_2160_3840_2_U0_demosaic_out_data_read,
        p_read2 => ltm_in_rows_c25_channel_dout,
        p_read13 => ltm_in_cols_c26_channel_dout,
        ltm_in_data_din => function_awb_10_10_2160_3840_2_U0_ltm_in_data_din,
        ltm_in_data_full_n => ltm_in_data_full_n,
        ltm_in_data_write => function_awb_10_10_2160_3840_2_U0_ltm_in_data_write,
        hist0_address0 => function_awb_10_10_2160_3840_2_U0_hist0_address0,
        hist0_ce0 => function_awb_10_10_2160_3840_2_U0_hist0_ce0,
        hist0_we0 => function_awb_10_10_2160_3840_2_U0_hist0_we0,
        hist0_d0 => function_awb_10_10_2160_3840_2_U0_hist0_d0,
        hist01_address0 => function_awb_10_10_2160_3840_2_U0_hist01_address0,
        hist01_ce0 => function_awb_10_10_2160_3840_2_U0_hist01_ce0,
        hist01_we0 => function_awb_10_10_2160_3840_2_U0_hist01_we0,
        hist01_d0 => function_awb_10_10_2160_3840_2_U0_hist01_d0,
        hist02_address0 => function_awb_10_10_2160_3840_2_U0_hist02_address0,
        hist02_ce0 => function_awb_10_10_2160_3840_2_U0_hist02_ce0,
        hist02_we0 => function_awb_10_10_2160_3840_2_U0_hist02_we0,
        hist02_d0 => function_awb_10_10_2160_3840_2_U0_hist02_d0,
        hist1_address0 => function_awb_10_10_2160_3840_2_U0_hist1_address0,
        hist1_ce0 => function_awb_10_10_2160_3840_2_U0_hist1_ce0,
        hist1_q0 => hist1_q0,
        hist13_address0 => function_awb_10_10_2160_3840_2_U0_hist13_address0,
        hist13_ce0 => function_awb_10_10_2160_3840_2_U0_hist13_ce0,
        hist13_q0 => hist13_q0,
        hist14_address0 => function_awb_10_10_2160_3840_2_U0_hist14_address0,
        hist14_ce0 => function_awb_10_10_2160_3840_2_U0_hist14_ce0,
        hist14_q0 => hist14_q0,
        height => height,
        width => width,
        mode_reg => mode_reg,
        p_read24 => thresh_loc_channel_dout,
        ltm_in_rows_c_din => function_awb_10_10_2160_3840_2_U0_ltm_in_rows_c_din,
        ltm_in_rows_c_full_n => ltm_in_rows_c_full_n,
        ltm_in_rows_c_write => function_awb_10_10_2160_3840_2_U0_ltm_in_rows_c_write,
        ltm_in_cols_c_din => function_awb_10_10_2160_3840_2_U0_ltm_in_cols_c_din,
        ltm_in_cols_c_full_n => ltm_in_cols_c_full_n,
        ltm_in_cols_c_write => function_awb_10_10_2160_3840_2_U0_ltm_in_cols_c_write);

    colorcorrectionmatrix_0_10_10_2160_3840_2_2_U0 : component ISPPipeline_accel_colorcorrectionmatrix_0_10_10_2160_3840_2_2_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => colorcorrectionmatrix_0_10_10_2160_3840_2_2_U0_ap_start,
        ap_done => colorcorrectionmatrix_0_10_10_2160_3840_2_2_U0_ap_done,
        ap_continue => colorcorrectionmatrix_0_10_10_2160_3840_2_2_U0_ap_continue,
        ap_idle => colorcorrectionmatrix_0_10_10_2160_3840_2_2_U0_ap_idle,
        ap_ready => colorcorrectionmatrix_0_10_10_2160_3840_2_2_U0_ap_ready,
        p_src_mat_rows_dout => ltm_in_rows_c_dout,
        p_src_mat_rows_empty_n => ltm_in_rows_c_empty_n,
        p_src_mat_rows_read => colorcorrectionmatrix_0_10_10_2160_3840_2_2_U0_p_src_mat_rows_read,
        p_src_mat_cols_dout => ltm_in_cols_c_dout,
        p_src_mat_cols_empty_n => ltm_in_cols_c_empty_n,
        p_src_mat_cols_read => colorcorrectionmatrix_0_10_10_2160_3840_2_2_U0_p_src_mat_cols_read,
        ltm_in_4199_dout => ltm_in_data_dout,
        ltm_in_4199_empty_n => ltm_in_data_empty_n,
        ltm_in_4199_read => colorcorrectionmatrix_0_10_10_2160_3840_2_2_U0_ltm_in_4199_read,
        lsc_out_4200_din => colorcorrectionmatrix_0_10_10_2160_3840_2_2_U0_lsc_out_4200_din,
        lsc_out_4200_full_n => lsc_out_data_full_n,
        lsc_out_4200_write => colorcorrectionmatrix_0_10_10_2160_3840_2_2_U0_lsc_out_4200_write);

    xf_QuatizationDithering_10_9_2160_3840_256_65536_2_U0 : component ISPPipeline_accel_xf_QuatizationDithering_10_9_2160_3840_256_65536_2_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => xf_QuatizationDithering_10_9_2160_3840_256_65536_2_U0_ap_start,
        ap_done => xf_QuatizationDithering_10_9_2160_3840_256_65536_2_U0_ap_done,
        ap_continue => xf_QuatizationDithering_10_9_2160_3840_256_65536_2_U0_ap_continue,
        ap_idle => xf_QuatizationDithering_10_9_2160_3840_256_65536_2_U0_ap_idle,
        ap_ready => xf_QuatizationDithering_10_9_2160_3840_256_65536_2_U0_ap_ready,
        p_read => lsc_out_rows_channel_dout,
        p_read1 => lsc_out_cols_channel_dout,
        lsc_out_4200_dout => lsc_out_data_dout,
        lsc_out_4200_empty_n => lsc_out_data_empty_n,
        lsc_out_4200_read => xf_QuatizationDithering_10_9_2160_3840_256_65536_2_U0_lsc_out_4200_read,
        aecin_4202_din => xf_QuatizationDithering_10_9_2160_3840_256_65536_2_U0_aecin_4202_din,
        aecin_4202_full_n => aecin_data_full_n,
        aecin_4202_write => xf_QuatizationDithering_10_9_2160_3840_256_65536_2_U0_aecin_4202_write);

    gammacorrection_9_9_2160_3840_2_U0 : component ISPPipeline_accel_gammacorrection_9_9_2160_3840_2_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => gammacorrection_9_9_2160_3840_2_U0_ap_start,
        ap_done => gammacorrection_9_9_2160_3840_2_U0_ap_done,
        ap_continue => gammacorrection_9_9_2160_3840_2_U0_ap_continue,
        ap_idle => gammacorrection_9_9_2160_3840_2_U0_ap_idle,
        ap_ready => gammacorrection_9_9_2160_3840_2_U0_ap_ready,
        p_read => aecin_rows_channel_dout,
        p_read1 => aecin_cols_channel_dout,
        aecin_4202_dout => aecin_data_dout,
        aecin_4202_empty_n => aecin_data_empty_n,
        aecin_4202_read => gammacorrection_9_9_2160_3840_2_U0_aecin_4202_read,
        p_dst_4201_din => gammacorrection_9_9_2160_3840_2_U0_p_dst_4201_din,
        p_dst_4201_full_n => p_dst_data_full_n,
        p_dst_4201_write => gammacorrection_9_9_2160_3840_2_U0_p_dst_4201_write,
        gamma_lut_address0 => gammacorrection_9_9_2160_3840_2_U0_gamma_lut_address0,
        gamma_lut_ce0 => gammacorrection_9_9_2160_3840_2_U0_gamma_lut_ce0,
        gamma_lut_q0 => gamma_lut_q0);

    rgb2yuyv_9_1_2160_3840_2_U0 : component ISPPipeline_accel_rgb2yuyv_9_1_2160_3840_2_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => rgb2yuyv_9_1_2160_3840_2_U0_ap_start,
        ap_done => rgb2yuyv_9_1_2160_3840_2_U0_ap_done,
        ap_continue => rgb2yuyv_9_1_2160_3840_2_U0_ap_continue,
        ap_idle => rgb2yuyv_9_1_2160_3840_2_U0_ap_idle,
        ap_ready => rgb2yuyv_9_1_2160_3840_2_U0_ap_ready,
        p_read => p_dst_rows_channel_dout,
        p_read1 => p_dst_cols_channel_dout,
        p_dst_4201_dout => p_dst_data_dout,
        p_dst_4201_empty_n => p_dst_data_empty_n,
        p_dst_4201_read => rgb2yuyv_9_1_2160_3840_2_U0_p_dst_4201_read,
        p_imgOutput_4203_din => rgb2yuyv_9_1_2160_3840_2_U0_p_imgOutput_4203_din,
        p_imgOutput_4203_full_n => p_imgOutput_data_full_n,
        p_imgOutput_4203_write => rgb2yuyv_9_1_2160_3840_2_U0_p_imgOutput_4203_write);

    ColorMat2AXIvideo_yuv_1_2160_3840_2_U0 : component ISPPipeline_accel_ColorMat2AXIvideo_yuv_1_2160_3840_2_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ColorMat2AXIvideo_yuv_1_2160_3840_2_U0_ap_start,
        ap_done => ColorMat2AXIvideo_yuv_1_2160_3840_2_U0_ap_done,
        ap_continue => ColorMat2AXIvideo_yuv_1_2160_3840_2_U0_ap_continue,
        ap_idle => ColorMat2AXIvideo_yuv_1_2160_3840_2_U0_ap_idle,
        ap_ready => ColorMat2AXIvideo_yuv_1_2160_3840_2_U0_ap_ready,
        p_read => p_imgOutput_rows_channel_dout,
        p_read1 => p_imgOutput_cols_channel_dout,
        p_imgOutput_4203_dout => p_imgOutput_data_dout,
        p_imgOutput_4203_empty_n => p_imgOutput_data_empty_n,
        p_imgOutput_4203_read => ColorMat2AXIvideo_yuv_1_2160_3840_2_U0_p_imgOutput_4203_read,
        m_axis_video_TDATA => ColorMat2AXIvideo_yuv_1_2160_3840_2_U0_m_axis_video_TDATA,
        m_axis_video_TVALID => ColorMat2AXIvideo_yuv_1_2160_3840_2_U0_m_axis_video_TVALID,
        m_axis_video_TREADY => m_axis_video_TREADY,
        m_axis_video_TKEEP => ColorMat2AXIvideo_yuv_1_2160_3840_2_U0_m_axis_video_TKEEP,
        m_axis_video_TSTRB => ColorMat2AXIvideo_yuv_1_2160_3840_2_U0_m_axis_video_TSTRB,
        m_axis_video_TUSER => ColorMat2AXIvideo_yuv_1_2160_3840_2_U0_m_axis_video_TUSER,
        m_axis_video_TLAST => ColorMat2AXIvideo_yuv_1_2160_3840_2_U0_m_axis_video_TLAST,
        m_axis_video_TID => ColorMat2AXIvideo_yuv_1_2160_3840_2_U0_m_axis_video_TID,
        m_axis_video_TDEST => ColorMat2AXIvideo_yuv_1_2160_3840_2_U0_m_axis_video_TDEST);

    rgain_c_channel_U : component ISPPipeline_accel_fifo_w16_d4_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => entry_proc_U0_ap_return_0,
        if_full_n => rgain_c_channel_full_n,
        if_write => ap_channel_done_rgain_c_channel,
        if_dout => rgain_c_channel_dout,
        if_empty_n => rgain_c_channel_empty_n,
        if_read => gaincontrol_3_1_2160_3840_2_U0_ap_ready);

    bgain_c_channel_U : component ISPPipeline_accel_fifo_w16_d4_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => entry_proc_U0_ap_return_1,
        if_full_n => bgain_c_channel_full_n,
        if_write => ap_channel_done_bgain_c_channel,
        if_dout => bgain_c_channel_dout,
        if_empty_n => bgain_c_channel_empty_n,
        if_read => gaincontrol_3_1_2160_3840_2_U0_ap_ready);

    ltm_in_cols_c26_channel_U : component ISPPipeline_accel_fifo_w12_d6_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => ISPpipeline_Block_ZN2xf2cv3MatILi1ELi2160ELi3840ELi2ELi2EEC2Eii_exit1_proc_U0_ap_return_16,
        if_full_n => ltm_in_cols_c26_channel_full_n,
        if_write => ap_channel_done_ltm_in_cols_c26_channel,
        if_dout => ltm_in_cols_c26_channel_dout,
        if_empty_n => ltm_in_cols_c26_channel_empty_n,
        if_read => function_awb_10_10_2160_3840_2_U0_ap_ready);

    ltm_in_rows_c25_channel_U : component ISPPipeline_accel_fifo_w12_d6_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => ISPpipeline_Block_ZN2xf2cv3MatILi1ELi2160ELi3840ELi2ELi2EEC2Eii_exit1_proc_U0_ap_return_15,
        if_full_n => ltm_in_rows_c25_channel_full_n,
        if_write => ap_channel_done_ltm_in_rows_c25_channel,
        if_dout => ltm_in_rows_c25_channel_dout,
        if_empty_n => ltm_in_rows_c25_channel_empty_n,
        if_read => function_awb_10_10_2160_3840_2_U0_ap_ready);

    imgInput1_cols_c24_channel_U : component ISPPipeline_accel_fifo_w12_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => ISPpipeline_Block_ZN2xf2cv3MatILi1ELi2160ELi3840ELi2ELi2EEC2Eii_exit1_proc_U0_ap_return_14,
        if_full_n => imgInput1_cols_c24_channel_full_n,
        if_write => ap_channel_done_imgInput1_cols_c24_channel,
        if_dout => imgInput1_cols_c24_channel_dout,
        if_empty_n => imgInput1_cols_c24_channel_empty_n,
        if_read => AXIVideo2BayerMat_1_2160_3840_2_U0_ap_ready);

    imgInput1_rows_c23_channel_U : component ISPPipeline_accel_fifo_w12_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => ISPpipeline_Block_ZN2xf2cv3MatILi1ELi2160ELi3840ELi2ELi2EEC2Eii_exit1_proc_U0_ap_return_13,
        if_full_n => imgInput1_rows_c23_channel_full_n,
        if_write => ap_channel_done_imgInput1_rows_c23_channel,
        if_dout => imgInput1_rows_c23_channel_dout,
        if_empty_n => imgInput1_rows_c23_channel_empty_n,
        if_read => AXIVideo2BayerMat_1_2160_3840_2_U0_ap_ready);

    thresh_loc_channel_U : component ISPPipeline_accel_fifo_w32_d6_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => ISPpipeline_Block_ZN2xf2cv3MatILi1ELi2160ELi3840ELi2ELi2EEC2Eii_exit1_proc_U0_ap_return_12,
        if_full_n => thresh_loc_channel_full_n,
        if_write => ap_channel_done_thresh_loc_channel,
        if_dout => thresh_loc_channel_dout,
        if_empty_n => thresh_loc_channel_empty_n,
        if_read => function_awb_10_10_2160_3840_2_U0_ap_ready);

    p_imgOutput_cols_channel_U : component ISPPipeline_accel_fifo_w12_d11_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => ISPpipeline_Block_ZN2xf2cv3MatILi1ELi2160ELi3840ELi2ELi2EEC2Eii_exit1_proc_U0_ap_return_11,
        if_full_n => p_imgOutput_cols_channel_full_n,
        if_write => ap_channel_done_p_imgOutput_cols_channel,
        if_dout => p_imgOutput_cols_channel_dout,
        if_empty_n => p_imgOutput_cols_channel_empty_n,
        if_read => ColorMat2AXIvideo_yuv_1_2160_3840_2_U0_ap_ready);

    p_imgOutput_rows_channel_U : component ISPPipeline_accel_fifo_w12_d11_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => ISPpipeline_Block_ZN2xf2cv3MatILi1ELi2160ELi3840ELi2ELi2EEC2Eii_exit1_proc_U0_ap_return_10,
        if_full_n => p_imgOutput_rows_channel_full_n,
        if_write => ap_channel_done_p_imgOutput_rows_channel,
        if_dout => p_imgOutput_rows_channel_dout,
        if_empty_n => p_imgOutput_rows_channel_empty_n,
        if_read => ColorMat2AXIvideo_yuv_1_2160_3840_2_U0_ap_ready);

    aecin_cols_channel_U : component ISPPipeline_accel_fifo_w12_d9_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => ISPpipeline_Block_ZN2xf2cv3MatILi1ELi2160ELi3840ELi2ELi2EEC2Eii_exit1_proc_U0_ap_return_9,
        if_full_n => aecin_cols_channel_full_n,
        if_write => ap_channel_done_aecin_cols_channel,
        if_dout => aecin_cols_channel_dout,
        if_empty_n => aecin_cols_channel_empty_n,
        if_read => gammacorrection_9_9_2160_3840_2_U0_ap_ready);

    aecin_rows_channel_U : component ISPPipeline_accel_fifo_w12_d9_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => ISPpipeline_Block_ZN2xf2cv3MatILi1ELi2160ELi3840ELi2ELi2EEC2Eii_exit1_proc_U0_ap_return_8,
        if_full_n => aecin_rows_channel_full_n,
        if_write => ap_channel_done_aecin_rows_channel,
        if_dout => aecin_rows_channel_dout,
        if_empty_n => aecin_rows_channel_empty_n,
        if_read => gammacorrection_9_9_2160_3840_2_U0_ap_ready);

    p_dst_cols_channel_U : component ISPPipeline_accel_fifo_w12_d10_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => ISPpipeline_Block_ZN2xf2cv3MatILi1ELi2160ELi3840ELi2ELi2EEC2Eii_exit1_proc_U0_ap_return_7,
        if_full_n => p_dst_cols_channel_full_n,
        if_write => ap_channel_done_p_dst_cols_channel,
        if_dout => p_dst_cols_channel_dout,
        if_empty_n => p_dst_cols_channel_empty_n,
        if_read => rgb2yuyv_9_1_2160_3840_2_U0_ap_ready);

    p_dst_rows_channel_U : component ISPPipeline_accel_fifo_w12_d10_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => ISPpipeline_Block_ZN2xf2cv3MatILi1ELi2160ELi3840ELi2ELi2EEC2Eii_exit1_proc_U0_ap_return_6,
        if_full_n => p_dst_rows_channel_full_n,
        if_write => ap_channel_done_p_dst_rows_channel,
        if_dout => p_dst_rows_channel_dout,
        if_empty_n => p_dst_rows_channel_empty_n,
        if_read => rgb2yuyv_9_1_2160_3840_2_U0_ap_ready);

    lsc_out_cols_channel_U : component ISPPipeline_accel_fifo_w12_d8_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => ISPpipeline_Block_ZN2xf2cv3MatILi1ELi2160ELi3840ELi2ELi2EEC2Eii_exit1_proc_U0_ap_return_5,
        if_full_n => lsc_out_cols_channel_full_n,
        if_write => ap_channel_done_lsc_out_cols_channel,
        if_dout => lsc_out_cols_channel_dout,
        if_empty_n => lsc_out_cols_channel_empty_n,
        if_read => xf_QuatizationDithering_10_9_2160_3840_256_65536_2_U0_ap_ready);

    lsc_out_rows_channel_U : component ISPPipeline_accel_fifo_w12_d8_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => ISPpipeline_Block_ZN2xf2cv3MatILi1ELi2160ELi3840ELi2ELi2EEC2Eii_exit1_proc_U0_ap_return_4,
        if_full_n => lsc_out_rows_channel_full_n,
        if_write => ap_channel_done_lsc_out_rows_channel,
        if_dout => lsc_out_rows_channel_dout,
        if_empty_n => lsc_out_rows_channel_empty_n,
        if_read => xf_QuatizationDithering_10_9_2160_3840_256_65536_2_U0_ap_ready);

    gain_out_cols_channel_U : component ISPPipeline_accel_fifo_w12_d5_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => ISPpipeline_Block_ZN2xf2cv3MatILi1ELi2160ELi3840ELi2ELi2EEC2Eii_exit1_proc_U0_ap_return_3,
        if_full_n => gain_out_cols_channel_full_n,
        if_write => ap_channel_done_gain_out_cols_channel,
        if_dout => gain_out_cols_channel_dout,
        if_empty_n => gain_out_cols_channel_empty_n,
        if_read => demosaicing_3_1_10_2160_3840_2_false_U0_ap_ready);

    gain_out_rows_channel_U : component ISPPipeline_accel_fifo_w12_d5_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => ISPpipeline_Block_ZN2xf2cv3MatILi1ELi2160ELi3840ELi2ELi2EEC2Eii_exit1_proc_U0_ap_return_2,
        if_full_n => gain_out_rows_channel_full_n,
        if_write => ap_channel_done_gain_out_rows_channel,
        if_dout => gain_out_rows_channel_dout,
        if_empty_n => gain_out_rows_channel_empty_n,
        if_read => demosaicing_3_1_10_2160_3840_2_false_U0_ap_ready);

    imgInput2_cols_channel_U : component ISPPipeline_accel_fifo_w12_d4_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => ISPpipeline_Block_ZN2xf2cv3MatILi1ELi2160ELi3840ELi2ELi2EEC2Eii_exit1_proc_U0_ap_return_1,
        if_full_n => imgInput2_cols_channel_full_n,
        if_write => ap_channel_done_imgInput2_cols_channel,
        if_dout => imgInput2_cols_channel_dout,
        if_empty_n => imgInput2_cols_channel_empty_n,
        if_read => gaincontrol_3_1_2160_3840_2_U0_ap_ready);

    imgInput2_rows_channel_U : component ISPPipeline_accel_fifo_w12_d4_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => ISPpipeline_Block_ZN2xf2cv3MatILi1ELi2160ELi3840ELi2ELi2EEC2Eii_exit1_proc_U0_ap_return_0,
        if_full_n => imgInput2_rows_channel_full_n,
        if_write => ap_channel_done_imgInput2_rows_channel,
        if_dout => imgInput2_rows_channel_dout,
        if_empty_n => imgInput2_rows_channel_empty_n,
        if_read => gaincontrol_3_1_2160_3840_2_U0_ap_ready);

    demosaic_out_rows_channel_U : component ISPPipeline_accel_fifo_w12_d6_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => ISPpipeline_Block_ZN2xf2cv3MatILi1ELi2160ELi3840ELi2ELi2EEC2Eii_exit1_proc_U0_ap_return_17,
        if_full_n => demosaic_out_rows_channel_full_n,
        if_write => ap_channel_done_demosaic_out_rows_channel,
        if_dout => demosaic_out_rows_channel_dout,
        if_empty_n => demosaic_out_rows_channel_empty_n,
        if_read => function_awb_10_10_2160_3840_2_U0_ap_ready);

    demosaic_out_cols_channel_U : component ISPPipeline_accel_fifo_w12_d6_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => ISPpipeline_Block_ZN2xf2cv3MatILi1ELi2160ELi3840ELi2ELi2EEC2Eii_exit1_proc_U0_ap_return_18,
        if_full_n => demosaic_out_cols_channel_full_n,
        if_write => ap_channel_done_demosaic_out_cols_channel,
        if_dout => demosaic_out_cols_channel_dout,
        if_empty_n => demosaic_out_cols_channel_empty_n,
        if_read => function_awb_10_10_2160_3840_2_U0_ap_ready);

    imgInput1_data_U : component ISPPipeline_accel_fifo_w32_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => AXIVideo2BayerMat_1_2160_3840_2_U0_imgInput1_4195_din,
        if_full_n => imgInput1_data_full_n,
        if_write => AXIVideo2BayerMat_1_2160_3840_2_U0_imgInput1_4195_write,
        if_dout => imgInput1_data_dout,
        if_empty_n => imgInput1_data_empty_n,
        if_read => blackLevelCorrection_1_2160_3840_2_16_15_1_18_U0_imgInput1_4195_read);

    imgInput1_rows_c_U : component ISPPipeline_accel_fifo_w12_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => AXIVideo2BayerMat_1_2160_3840_2_U0_imgInput1_rows_c_din,
        if_full_n => imgInput1_rows_c_full_n,
        if_write => AXIVideo2BayerMat_1_2160_3840_2_U0_imgInput1_rows_c_write,
        if_dout => imgInput1_rows_c_dout,
        if_empty_n => imgInput1_rows_c_empty_n,
        if_read => blackLevelCorrection_1_2160_3840_2_16_15_1_18_U0_p_Src_rows_read);

    imgInput1_cols_c_U : component ISPPipeline_accel_fifo_w12_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => AXIVideo2BayerMat_1_2160_3840_2_U0_imgInput1_cols_c_din,
        if_full_n => imgInput1_cols_c_full_n,
        if_write => AXIVideo2BayerMat_1_2160_3840_2_U0_imgInput1_cols_c_write,
        if_dout => imgInput1_cols_c_dout,
        if_empty_n => imgInput1_cols_c_empty_n,
        if_read => blackLevelCorrection_1_2160_3840_2_16_15_1_18_U0_p_Src_cols_read);

    imgInput2_data_U : component ISPPipeline_accel_fifo_w32_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => blackLevelCorrection_1_2160_3840_2_16_15_1_18_U0_imgInput2_4196_din,
        if_full_n => imgInput2_data_full_n,
        if_write => blackLevelCorrection_1_2160_3840_2_16_15_1_18_U0_imgInput2_4196_write,
        if_dout => imgInput2_data_dout,
        if_empty_n => imgInput2_data_empty_n,
        if_read => gaincontrol_3_1_2160_3840_2_U0_imgInput2_4196_read);

    gain_out_data_U : component ISPPipeline_accel_fifo_w32_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => gaincontrol_3_1_2160_3840_2_U0_gain_out_4197_din,
        if_full_n => gain_out_data_full_n,
        if_write => gaincontrol_3_1_2160_3840_2_U0_gain_out_4197_write,
        if_dout => gain_out_data_dout,
        if_empty_n => gain_out_data_empty_n,
        if_read => demosaicing_3_1_10_2160_3840_2_false_U0_gain_out_4197_read);

    demosaic_out_data_U : component ISPPipeline_accel_fifo_w96_d2_S_x
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => demosaicing_3_1_10_2160_3840_2_false_U0_demosaic_out_4198_din,
        if_full_n => demosaic_out_data_full_n,
        if_write => demosaicing_3_1_10_2160_3840_2_false_U0_demosaic_out_4198_write,
        if_dout => demosaic_out_data_dout,
        if_empty_n => demosaic_out_data_empty_n,
        if_read => function_awb_10_10_2160_3840_2_U0_demosaic_out_data_read);

    ltm_in_data_U : component ISPPipeline_accel_fifo_w96_d2_S_x
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => function_awb_10_10_2160_3840_2_U0_ltm_in_data_din,
        if_full_n => ltm_in_data_full_n,
        if_write => function_awb_10_10_2160_3840_2_U0_ltm_in_data_write,
        if_dout => ltm_in_data_dout,
        if_empty_n => ltm_in_data_empty_n,
        if_read => colorcorrectionmatrix_0_10_10_2160_3840_2_2_U0_ltm_in_4199_read);

    ltm_in_rows_c_U : component ISPPipeline_accel_fifo_w12_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => function_awb_10_10_2160_3840_2_U0_ltm_in_rows_c_din,
        if_full_n => ltm_in_rows_c_full_n,
        if_write => function_awb_10_10_2160_3840_2_U0_ltm_in_rows_c_write,
        if_dout => ltm_in_rows_c_dout,
        if_empty_n => ltm_in_rows_c_empty_n,
        if_read => colorcorrectionmatrix_0_10_10_2160_3840_2_2_U0_p_src_mat_rows_read);

    ltm_in_cols_c_U : component ISPPipeline_accel_fifo_w12_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => function_awb_10_10_2160_3840_2_U0_ltm_in_cols_c_din,
        if_full_n => ltm_in_cols_c_full_n,
        if_write => function_awb_10_10_2160_3840_2_U0_ltm_in_cols_c_write,
        if_dout => ltm_in_cols_c_dout,
        if_empty_n => ltm_in_cols_c_empty_n,
        if_read => colorcorrectionmatrix_0_10_10_2160_3840_2_2_U0_p_src_mat_cols_read);

    lsc_out_data_U : component ISPPipeline_accel_fifo_w96_d2_S_x
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => colorcorrectionmatrix_0_10_10_2160_3840_2_2_U0_lsc_out_4200_din,
        if_full_n => lsc_out_data_full_n,
        if_write => colorcorrectionmatrix_0_10_10_2160_3840_2_2_U0_lsc_out_4200_write,
        if_dout => lsc_out_data_dout,
        if_empty_n => lsc_out_data_empty_n,
        if_read => xf_QuatizationDithering_10_9_2160_3840_256_65536_2_U0_lsc_out_4200_read);

    aecin_data_U : component ISPPipeline_accel_fifo_w48_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => xf_QuatizationDithering_10_9_2160_3840_256_65536_2_U0_aecin_4202_din,
        if_full_n => aecin_data_full_n,
        if_write => xf_QuatizationDithering_10_9_2160_3840_256_65536_2_U0_aecin_4202_write,
        if_dout => aecin_data_dout,
        if_empty_n => aecin_data_empty_n,
        if_read => gammacorrection_9_9_2160_3840_2_U0_aecin_4202_read);

    p_dst_data_U : component ISPPipeline_accel_fifo_w48_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => gammacorrection_9_9_2160_3840_2_U0_p_dst_4201_din,
        if_full_n => p_dst_data_full_n,
        if_write => gammacorrection_9_9_2160_3840_2_U0_p_dst_4201_write,
        if_dout => p_dst_data_dout,
        if_empty_n => p_dst_data_empty_n,
        if_read => rgb2yuyv_9_1_2160_3840_2_U0_p_dst_4201_read);

    p_imgOutput_data_U : component ISPPipeline_accel_fifo_w32_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => rgb2yuyv_9_1_2160_3840_2_U0_p_imgOutput_4203_din,
        if_full_n => p_imgOutput_data_full_n,
        if_write => rgb2yuyv_9_1_2160_3840_2_U0_p_imgOutput_4203_write,
        if_dout => p_imgOutput_data_dout,
        if_empty_n => p_imgOutput_data_empty_n,
        if_read => ColorMat2AXIvideo_yuv_1_2160_3840_2_U0_p_imgOutput_4203_read);

    start_for_blackLevelCorrection_1_2160_3840_2_16_15_1_18_U0_U : component ISPPipeline_accel_start_for_blackLevelCorrection_1_2160_3840_2_16_15_1_18_U0
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_blackLevelCorrection_1_2160_3840_2_16_15_1_18_U0_din,
        if_full_n => start_for_blackLevelCorrection_1_2160_3840_2_16_15_1_18_U0_full_n,
        if_write => AXIVideo2BayerMat_1_2160_3840_2_U0_start_write,
        if_dout => start_for_blackLevelCorrection_1_2160_3840_2_16_15_1_18_U0_dout,
        if_empty_n => start_for_blackLevelCorrection_1_2160_3840_2_16_15_1_18_U0_empty_n,
        if_read => blackLevelCorrection_1_2160_3840_2_16_15_1_18_U0_ap_ready);

    start_for_colorcorrectionmatrix_0_10_10_2160_3840_2_2_U0_U : component ISPPipeline_accel_start_for_colorcorrectionmatrix_0_10_10_2160_3840_2_2_U0
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_colorcorrectionmatrix_0_10_10_2160_3840_2_2_U0_din,
        if_full_n => start_for_colorcorrectionmatrix_0_10_10_2160_3840_2_2_U0_full_n,
        if_write => function_awb_10_10_2160_3840_2_U0_start_write,
        if_dout => start_for_colorcorrectionmatrix_0_10_10_2160_3840_2_2_U0_dout,
        if_empty_n => start_for_colorcorrectionmatrix_0_10_10_2160_3840_2_2_U0_empty_n,
        if_read => colorcorrectionmatrix_0_10_10_2160_3840_2_2_U0_ap_ready);





    ap_sync_reg_ISPpipeline_Block_ZN2xf2cv3MatILi1ELi2160ELi3840ELi2ELi2EEC2Eii_exit1_proc_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_ISPpipeline_Block_ZN2xf2cv3MatILi1ELi2160ELi3840ELi2ELi2EEC2Eii_exit1_proc_U0_ap_ready <= ap_const_logic_0;
            else
                if (((ap_sync_ready and ap_start) = ap_const_logic_1)) then 
                    ap_sync_reg_ISPpipeline_Block_ZN2xf2cv3MatILi1ELi2160ELi3840ELi2ELi2EEC2Eii_exit1_proc_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_ISPpipeline_Block_ZN2xf2cv3MatILi1ELi2160ELi3840ELi2ELi2EEC2Eii_exit1_proc_U0_ap_ready <= ap_sync_ISPpipeline_Block_ZN2xf2cv3MatILi1ELi2160ELi3840ELi2ELi2EEC2Eii_exit1_proc_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_aecin_cols_channel_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_aecin_cols_channel <= ap_const_logic_0;
            else
                if (((ISPpipeline_Block_ZN2xf2cv3MatILi1ELi2160ELi3840ELi2ELi2EEC2Eii_exit1_proc_U0_ap_done and ISPpipeline_Block_ZN2xf2cv3MatILi1ELi2160ELi3840ELi2ELi2EEC2Eii_exit1_proc_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_aecin_cols_channel <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_aecin_cols_channel <= ap_sync_channel_write_aecin_cols_channel;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_aecin_rows_channel_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_aecin_rows_channel <= ap_const_logic_0;
            else
                if (((ISPpipeline_Block_ZN2xf2cv3MatILi1ELi2160ELi3840ELi2ELi2EEC2Eii_exit1_proc_U0_ap_done and ISPpipeline_Block_ZN2xf2cv3MatILi1ELi2160ELi3840ELi2ELi2EEC2Eii_exit1_proc_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_aecin_rows_channel <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_aecin_rows_channel <= ap_sync_channel_write_aecin_rows_channel;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_bgain_c_channel_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_bgain_c_channel <= ap_const_logic_0;
            else
                if (((entry_proc_U0_ap_done and entry_proc_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_bgain_c_channel <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_bgain_c_channel <= ap_sync_channel_write_bgain_c_channel;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_demosaic_out_cols_channel_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_demosaic_out_cols_channel <= ap_const_logic_0;
            else
                if (((ISPpipeline_Block_ZN2xf2cv3MatILi1ELi2160ELi3840ELi2ELi2EEC2Eii_exit1_proc_U0_ap_done and ISPpipeline_Block_ZN2xf2cv3MatILi1ELi2160ELi3840ELi2ELi2EEC2Eii_exit1_proc_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_demosaic_out_cols_channel <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_demosaic_out_cols_channel <= ap_sync_channel_write_demosaic_out_cols_channel;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_demosaic_out_rows_channel_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_demosaic_out_rows_channel <= ap_const_logic_0;
            else
                if (((ISPpipeline_Block_ZN2xf2cv3MatILi1ELi2160ELi3840ELi2ELi2EEC2Eii_exit1_proc_U0_ap_done and ISPpipeline_Block_ZN2xf2cv3MatILi1ELi2160ELi3840ELi2ELi2EEC2Eii_exit1_proc_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_demosaic_out_rows_channel <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_demosaic_out_rows_channel <= ap_sync_channel_write_demosaic_out_rows_channel;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_gain_out_cols_channel_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_gain_out_cols_channel <= ap_const_logic_0;
            else
                if (((ISPpipeline_Block_ZN2xf2cv3MatILi1ELi2160ELi3840ELi2ELi2EEC2Eii_exit1_proc_U0_ap_done and ISPpipeline_Block_ZN2xf2cv3MatILi1ELi2160ELi3840ELi2ELi2EEC2Eii_exit1_proc_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_gain_out_cols_channel <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_gain_out_cols_channel <= ap_sync_channel_write_gain_out_cols_channel;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_gain_out_rows_channel_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_gain_out_rows_channel <= ap_const_logic_0;
            else
                if (((ISPpipeline_Block_ZN2xf2cv3MatILi1ELi2160ELi3840ELi2ELi2EEC2Eii_exit1_proc_U0_ap_done and ISPpipeline_Block_ZN2xf2cv3MatILi1ELi2160ELi3840ELi2ELi2EEC2Eii_exit1_proc_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_gain_out_rows_channel <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_gain_out_rows_channel <= ap_sync_channel_write_gain_out_rows_channel;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_imgInput1_cols_c24_channel_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_imgInput1_cols_c24_channel <= ap_const_logic_0;
            else
                if (((ISPpipeline_Block_ZN2xf2cv3MatILi1ELi2160ELi3840ELi2ELi2EEC2Eii_exit1_proc_U0_ap_done and ISPpipeline_Block_ZN2xf2cv3MatILi1ELi2160ELi3840ELi2ELi2EEC2Eii_exit1_proc_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_imgInput1_cols_c24_channel <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_imgInput1_cols_c24_channel <= ap_sync_channel_write_imgInput1_cols_c24_channel;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_imgInput1_rows_c23_channel_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_imgInput1_rows_c23_channel <= ap_const_logic_0;
            else
                if (((ISPpipeline_Block_ZN2xf2cv3MatILi1ELi2160ELi3840ELi2ELi2EEC2Eii_exit1_proc_U0_ap_done and ISPpipeline_Block_ZN2xf2cv3MatILi1ELi2160ELi3840ELi2ELi2EEC2Eii_exit1_proc_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_imgInput1_rows_c23_channel <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_imgInput1_rows_c23_channel <= ap_sync_channel_write_imgInput1_rows_c23_channel;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_imgInput2_cols_channel_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_imgInput2_cols_channel <= ap_const_logic_0;
            else
                if (((ISPpipeline_Block_ZN2xf2cv3MatILi1ELi2160ELi3840ELi2ELi2EEC2Eii_exit1_proc_U0_ap_done and ISPpipeline_Block_ZN2xf2cv3MatILi1ELi2160ELi3840ELi2ELi2EEC2Eii_exit1_proc_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_imgInput2_cols_channel <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_imgInput2_cols_channel <= ap_sync_channel_write_imgInput2_cols_channel;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_imgInput2_rows_channel_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_imgInput2_rows_channel <= ap_const_logic_0;
            else
                if (((ISPpipeline_Block_ZN2xf2cv3MatILi1ELi2160ELi3840ELi2ELi2EEC2Eii_exit1_proc_U0_ap_done and ISPpipeline_Block_ZN2xf2cv3MatILi1ELi2160ELi3840ELi2ELi2EEC2Eii_exit1_proc_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_imgInput2_rows_channel <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_imgInput2_rows_channel <= ap_sync_channel_write_imgInput2_rows_channel;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_lsc_out_cols_channel_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_lsc_out_cols_channel <= ap_const_logic_0;
            else
                if (((ISPpipeline_Block_ZN2xf2cv3MatILi1ELi2160ELi3840ELi2ELi2EEC2Eii_exit1_proc_U0_ap_done and ISPpipeline_Block_ZN2xf2cv3MatILi1ELi2160ELi3840ELi2ELi2EEC2Eii_exit1_proc_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_lsc_out_cols_channel <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_lsc_out_cols_channel <= ap_sync_channel_write_lsc_out_cols_channel;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_lsc_out_rows_channel_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_lsc_out_rows_channel <= ap_const_logic_0;
            else
                if (((ISPpipeline_Block_ZN2xf2cv3MatILi1ELi2160ELi3840ELi2ELi2EEC2Eii_exit1_proc_U0_ap_done and ISPpipeline_Block_ZN2xf2cv3MatILi1ELi2160ELi3840ELi2ELi2EEC2Eii_exit1_proc_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_lsc_out_rows_channel <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_lsc_out_rows_channel <= ap_sync_channel_write_lsc_out_rows_channel;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_ltm_in_cols_c26_channel_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_ltm_in_cols_c26_channel <= ap_const_logic_0;
            else
                if (((ISPpipeline_Block_ZN2xf2cv3MatILi1ELi2160ELi3840ELi2ELi2EEC2Eii_exit1_proc_U0_ap_done and ISPpipeline_Block_ZN2xf2cv3MatILi1ELi2160ELi3840ELi2ELi2EEC2Eii_exit1_proc_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_ltm_in_cols_c26_channel <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_ltm_in_cols_c26_channel <= ap_sync_channel_write_ltm_in_cols_c26_channel;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_ltm_in_rows_c25_channel_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_ltm_in_rows_c25_channel <= ap_const_logic_0;
            else
                if (((ISPpipeline_Block_ZN2xf2cv3MatILi1ELi2160ELi3840ELi2ELi2EEC2Eii_exit1_proc_U0_ap_done and ISPpipeline_Block_ZN2xf2cv3MatILi1ELi2160ELi3840ELi2ELi2EEC2Eii_exit1_proc_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_ltm_in_rows_c25_channel <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_ltm_in_rows_c25_channel <= ap_sync_channel_write_ltm_in_rows_c25_channel;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_p_dst_cols_channel_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_p_dst_cols_channel <= ap_const_logic_0;
            else
                if (((ISPpipeline_Block_ZN2xf2cv3MatILi1ELi2160ELi3840ELi2ELi2EEC2Eii_exit1_proc_U0_ap_done and ISPpipeline_Block_ZN2xf2cv3MatILi1ELi2160ELi3840ELi2ELi2EEC2Eii_exit1_proc_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_p_dst_cols_channel <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_p_dst_cols_channel <= ap_sync_channel_write_p_dst_cols_channel;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_p_dst_rows_channel_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_p_dst_rows_channel <= ap_const_logic_0;
            else
                if (((ISPpipeline_Block_ZN2xf2cv3MatILi1ELi2160ELi3840ELi2ELi2EEC2Eii_exit1_proc_U0_ap_done and ISPpipeline_Block_ZN2xf2cv3MatILi1ELi2160ELi3840ELi2ELi2EEC2Eii_exit1_proc_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_p_dst_rows_channel <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_p_dst_rows_channel <= ap_sync_channel_write_p_dst_rows_channel;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_p_imgOutput_cols_channel_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_p_imgOutput_cols_channel <= ap_const_logic_0;
            else
                if (((ISPpipeline_Block_ZN2xf2cv3MatILi1ELi2160ELi3840ELi2ELi2EEC2Eii_exit1_proc_U0_ap_done and ISPpipeline_Block_ZN2xf2cv3MatILi1ELi2160ELi3840ELi2ELi2EEC2Eii_exit1_proc_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_p_imgOutput_cols_channel <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_p_imgOutput_cols_channel <= ap_sync_channel_write_p_imgOutput_cols_channel;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_p_imgOutput_rows_channel_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_p_imgOutput_rows_channel <= ap_const_logic_0;
            else
                if (((ISPpipeline_Block_ZN2xf2cv3MatILi1ELi2160ELi3840ELi2ELi2EEC2Eii_exit1_proc_U0_ap_done and ISPpipeline_Block_ZN2xf2cv3MatILi1ELi2160ELi3840ELi2ELi2EEC2Eii_exit1_proc_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_p_imgOutput_rows_channel <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_p_imgOutput_rows_channel <= ap_sync_channel_write_p_imgOutput_rows_channel;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_rgain_c_channel_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_rgain_c_channel <= ap_const_logic_0;
            else
                if (((entry_proc_U0_ap_done and entry_proc_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_rgain_c_channel <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_rgain_c_channel <= ap_sync_channel_write_rgain_c_channel;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_thresh_loc_channel_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_thresh_loc_channel <= ap_const_logic_0;
            else
                if (((ISPpipeline_Block_ZN2xf2cv3MatILi1ELi2160ELi3840ELi2ELi2EEC2Eii_exit1_proc_U0_ap_done and ISPpipeline_Block_ZN2xf2cv3MatILi1ELi2160ELi3840ELi2ELi2EEC2Eii_exit1_proc_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_thresh_loc_channel <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_thresh_loc_channel <= ap_sync_channel_write_thresh_loc_channel;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_entry_proc_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_entry_proc_U0_ap_ready <= ap_const_logic_0;
            else
                if (((ap_sync_ready and ap_start) = ap_const_logic_1)) then 
                    ap_sync_reg_entry_proc_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_entry_proc_U0_ap_ready <= ap_sync_entry_proc_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_function_awb_10_10_2160_3840_2_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_function_awb_10_10_2160_3840_2_U0_ap_ready <= ap_const_logic_0;
            else
                if (((ap_sync_ready and ap_start) = ap_const_logic_1)) then 
                    ap_sync_reg_function_awb_10_10_2160_3840_2_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_function_awb_10_10_2160_3840_2_U0_ap_ready <= ap_sync_function_awb_10_10_2160_3840_2_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_gammacorrection_9_9_2160_3840_2_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_gammacorrection_9_9_2160_3840_2_U0_ap_ready <= ap_const_logic_0;
            else
                if (((ap_sync_ready and ap_start) = ap_const_logic_1)) then 
                    ap_sync_reg_gammacorrection_9_9_2160_3840_2_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_gammacorrection_9_9_2160_3840_2_U0_ap_ready <= ap_sync_gammacorrection_9_9_2160_3840_2_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;

    AXIVideo2BayerMat_1_2160_3840_2_U0_ap_continue <= ap_const_logic_1;
    AXIVideo2BayerMat_1_2160_3840_2_U0_ap_start <= (imgInput1_rows_c23_channel_empty_n and imgInput1_cols_c24_channel_empty_n);
    ColorMat2AXIvideo_yuv_1_2160_3840_2_U0_ap_continue <= ap_sync_continue;
    ColorMat2AXIvideo_yuv_1_2160_3840_2_U0_ap_start <= (p_imgOutput_rows_channel_empty_n and p_imgOutput_cols_channel_empty_n);
    ISPpipeline_Block_ZN2xf2cv3MatILi1ELi2160ELi3840ELi2ELi2EEC2Eii_exit1_proc_U0_ap_continue <= (ap_sync_channel_write_thresh_loc_channel and ap_sync_channel_write_p_imgOutput_rows_channel and ap_sync_channel_write_p_imgOutput_cols_channel and ap_sync_channel_write_p_dst_rows_channel and ap_sync_channel_write_p_dst_cols_channel and ap_sync_channel_write_ltm_in_rows_c25_channel and ap_sync_channel_write_ltm_in_cols_c26_channel and ap_sync_channel_write_lsc_out_rows_channel and ap_sync_channel_write_lsc_out_cols_channel and ap_sync_channel_write_imgInput2_rows_channel and ap_sync_channel_write_imgInput2_cols_channel and ap_sync_channel_write_imgInput1_rows_c23_channel and ap_sync_channel_write_imgInput1_cols_c24_channel and ap_sync_channel_write_gain_out_rows_channel and ap_sync_channel_write_gain_out_cols_channel and ap_sync_channel_write_demosaic_out_rows_channel and ap_sync_channel_write_demosaic_out_cols_channel and ap_sync_channel_write_aecin_rows_channel and ap_sync_channel_write_aecin_cols_channel);
    ISPpipeline_Block_ZN2xf2cv3MatILi1ELi2160ELi3840ELi2ELi2EEC2Eii_exit1_proc_U0_ap_start <= ((ap_sync_reg_ISPpipeline_Block_ZN2xf2cv3MatILi1ELi2160ELi3840ELi2ELi2EEC2Eii_exit1_proc_U0_ap_ready xor ap_const_logic_1) and ap_start);
    ap_channel_done_aecin_cols_channel <= ((ap_sync_reg_channel_write_aecin_cols_channel xor ap_const_logic_1) and ISPpipeline_Block_ZN2xf2cv3MatILi1ELi2160ELi3840ELi2ELi2EEC2Eii_exit1_proc_U0_ap_done);
    ap_channel_done_aecin_rows_channel <= ((ap_sync_reg_channel_write_aecin_rows_channel xor ap_const_logic_1) and ISPpipeline_Block_ZN2xf2cv3MatILi1ELi2160ELi3840ELi2ELi2EEC2Eii_exit1_proc_U0_ap_done);
    ap_channel_done_bgain_c_channel <= ((ap_sync_reg_channel_write_bgain_c_channel xor ap_const_logic_1) and entry_proc_U0_ap_done);
    ap_channel_done_demosaic_out_cols_channel <= ((ap_sync_reg_channel_write_demosaic_out_cols_channel xor ap_const_logic_1) and ISPpipeline_Block_ZN2xf2cv3MatILi1ELi2160ELi3840ELi2ELi2EEC2Eii_exit1_proc_U0_ap_done);
    ap_channel_done_demosaic_out_rows_channel <= ((ap_sync_reg_channel_write_demosaic_out_rows_channel xor ap_const_logic_1) and ISPpipeline_Block_ZN2xf2cv3MatILi1ELi2160ELi3840ELi2ELi2EEC2Eii_exit1_proc_U0_ap_done);
    ap_channel_done_gain_out_cols_channel <= ((ap_sync_reg_channel_write_gain_out_cols_channel xor ap_const_logic_1) and ISPpipeline_Block_ZN2xf2cv3MatILi1ELi2160ELi3840ELi2ELi2EEC2Eii_exit1_proc_U0_ap_done);
    ap_channel_done_gain_out_rows_channel <= ((ap_sync_reg_channel_write_gain_out_rows_channel xor ap_const_logic_1) and ISPpipeline_Block_ZN2xf2cv3MatILi1ELi2160ELi3840ELi2ELi2EEC2Eii_exit1_proc_U0_ap_done);
    ap_channel_done_imgInput1_cols_c24_channel <= ((ap_sync_reg_channel_write_imgInput1_cols_c24_channel xor ap_const_logic_1) and ISPpipeline_Block_ZN2xf2cv3MatILi1ELi2160ELi3840ELi2ELi2EEC2Eii_exit1_proc_U0_ap_done);
    ap_channel_done_imgInput1_rows_c23_channel <= ((ap_sync_reg_channel_write_imgInput1_rows_c23_channel xor ap_const_logic_1) and ISPpipeline_Block_ZN2xf2cv3MatILi1ELi2160ELi3840ELi2ELi2EEC2Eii_exit1_proc_U0_ap_done);
    ap_channel_done_imgInput2_cols_channel <= ((ap_sync_reg_channel_write_imgInput2_cols_channel xor ap_const_logic_1) and ISPpipeline_Block_ZN2xf2cv3MatILi1ELi2160ELi3840ELi2ELi2EEC2Eii_exit1_proc_U0_ap_done);
    ap_channel_done_imgInput2_rows_channel <= ((ap_sync_reg_channel_write_imgInput2_rows_channel xor ap_const_logic_1) and ISPpipeline_Block_ZN2xf2cv3MatILi1ELi2160ELi3840ELi2ELi2EEC2Eii_exit1_proc_U0_ap_done);
    ap_channel_done_lsc_out_cols_channel <= ((ap_sync_reg_channel_write_lsc_out_cols_channel xor ap_const_logic_1) and ISPpipeline_Block_ZN2xf2cv3MatILi1ELi2160ELi3840ELi2ELi2EEC2Eii_exit1_proc_U0_ap_done);
    ap_channel_done_lsc_out_rows_channel <= ((ap_sync_reg_channel_write_lsc_out_rows_channel xor ap_const_logic_1) and ISPpipeline_Block_ZN2xf2cv3MatILi1ELi2160ELi3840ELi2ELi2EEC2Eii_exit1_proc_U0_ap_done);
    ap_channel_done_ltm_in_cols_c26_channel <= ((ap_sync_reg_channel_write_ltm_in_cols_c26_channel xor ap_const_logic_1) and ISPpipeline_Block_ZN2xf2cv3MatILi1ELi2160ELi3840ELi2ELi2EEC2Eii_exit1_proc_U0_ap_done);
    ap_channel_done_ltm_in_rows_c25_channel <= ((ap_sync_reg_channel_write_ltm_in_rows_c25_channel xor ap_const_logic_1) and ISPpipeline_Block_ZN2xf2cv3MatILi1ELi2160ELi3840ELi2ELi2EEC2Eii_exit1_proc_U0_ap_done);
    ap_channel_done_p_dst_cols_channel <= ((ap_sync_reg_channel_write_p_dst_cols_channel xor ap_const_logic_1) and ISPpipeline_Block_ZN2xf2cv3MatILi1ELi2160ELi3840ELi2ELi2EEC2Eii_exit1_proc_U0_ap_done);
    ap_channel_done_p_dst_rows_channel <= ((ap_sync_reg_channel_write_p_dst_rows_channel xor ap_const_logic_1) and ISPpipeline_Block_ZN2xf2cv3MatILi1ELi2160ELi3840ELi2ELi2EEC2Eii_exit1_proc_U0_ap_done);
    ap_channel_done_p_imgOutput_cols_channel <= ((ap_sync_reg_channel_write_p_imgOutput_cols_channel xor ap_const_logic_1) and ISPpipeline_Block_ZN2xf2cv3MatILi1ELi2160ELi3840ELi2ELi2EEC2Eii_exit1_proc_U0_ap_done);
    ap_channel_done_p_imgOutput_rows_channel <= ((ap_sync_reg_channel_write_p_imgOutput_rows_channel xor ap_const_logic_1) and ISPpipeline_Block_ZN2xf2cv3MatILi1ELi2160ELi3840ELi2ELi2EEC2Eii_exit1_proc_U0_ap_done);
    ap_channel_done_rgain_c_channel <= ((ap_sync_reg_channel_write_rgain_c_channel xor ap_const_logic_1) and entry_proc_U0_ap_done);
    ap_channel_done_thresh_loc_channel <= ((ap_sync_reg_channel_write_thresh_loc_channel xor ap_const_logic_1) and ISPpipeline_Block_ZN2xf2cv3MatILi1ELi2160ELi3840ELi2ELi2EEC2Eii_exit1_proc_U0_ap_done);
    ap_done <= ap_sync_done;
    ap_idle <= (xf_QuatizationDithering_10_9_2160_3840_256_65536_2_U0_ap_idle and rgb2yuyv_9_1_2160_3840_2_U0_ap_idle and gammacorrection_9_9_2160_3840_2_U0_ap_idle and gaincontrol_3_1_2160_3840_2_U0_ap_idle and function_awb_10_10_2160_3840_2_U0_ap_idle and (demosaic_out_cols_channel_empty_n xor ap_const_logic_1) and (demosaic_out_rows_channel_empty_n xor ap_const_logic_1) and (imgInput2_rows_channel_empty_n xor ap_const_logic_1) and (imgInput2_cols_channel_empty_n xor ap_const_logic_1) and (gain_out_rows_channel_empty_n xor ap_const_logic_1) and (gain_out_cols_channel_empty_n xor ap_const_logic_1) and (lsc_out_rows_channel_empty_n xor ap_const_logic_1) and (lsc_out_cols_channel_empty_n xor ap_const_logic_1) and (p_dst_rows_channel_empty_n xor ap_const_logic_1) and (p_dst_cols_channel_empty_n xor ap_const_logic_1) and (p_imgOutput_rows_channel_empty_n xor ap_const_logic_1) and (p_imgOutput_cols_channel_empty_n xor ap_const_logic_1) and (thresh_loc_channel_empty_n xor ap_const_logic_1) and (imgInput1_rows_c23_channel_empty_n xor ap_const_logic_1) and (imgInput1_cols_c24_channel_empty_n xor ap_const_logic_1) and (ltm_in_rows_c25_channel_empty_n xor ap_const_logic_1) and (ltm_in_cols_c26_channel_empty_n xor ap_const_logic_1) and (bgain_c_channel_empty_n xor ap_const_logic_1) and (rgain_c_channel_empty_n xor ap_const_logic_1) and (ap_const_logic_1 xor aecin_rows_channel_empty_n) and (ap_const_logic_1 xor aecin_cols_channel_empty_n) and entry_proc_U0_ap_idle and demosaicing_3_1_10_2160_3840_2_false_U0_ap_idle and colorcorrectionmatrix_0_10_10_2160_3840_2_2_U0_ap_idle and blackLevelCorrection_1_2160_3840_2_16_15_1_18_U0_ap_idle and ISPpipeline_Block_ZN2xf2cv3MatILi1ELi2160ELi3840ELi2ELi2EEC2Eii_exit1_proc_U0_ap_idle and ColorMat2AXIvideo_yuv_1_2160_3840_2_U0_ap_idle and AXIVideo2BayerMat_1_2160_3840_2_U0_ap_idle);
    ap_ready <= ap_sync_ready;
    ap_sync_ISPpipeline_Block_ZN2xf2cv3MatILi1ELi2160ELi3840ELi2ELi2EEC2Eii_exit1_proc_U0_ap_ready <= (ap_sync_reg_ISPpipeline_Block_ZN2xf2cv3MatILi1ELi2160ELi3840ELi2ELi2EEC2Eii_exit1_proc_U0_ap_ready or ISPpipeline_Block_ZN2xf2cv3MatILi1ELi2160ELi3840ELi2ELi2EEC2Eii_exit1_proc_U0_ap_ready);
    ap_sync_channel_write_aecin_cols_channel <= ((ap_channel_done_aecin_cols_channel and aecin_cols_channel_full_n) or ap_sync_reg_channel_write_aecin_cols_channel);
    ap_sync_channel_write_aecin_rows_channel <= ((ap_channel_done_aecin_rows_channel and aecin_rows_channel_full_n) or ap_sync_reg_channel_write_aecin_rows_channel);
    ap_sync_channel_write_bgain_c_channel <= ((bgain_c_channel_full_n and ap_channel_done_bgain_c_channel) or ap_sync_reg_channel_write_bgain_c_channel);
    ap_sync_channel_write_demosaic_out_cols_channel <= ((demosaic_out_cols_channel_full_n and ap_channel_done_demosaic_out_cols_channel) or ap_sync_reg_channel_write_demosaic_out_cols_channel);
    ap_sync_channel_write_demosaic_out_rows_channel <= ((demosaic_out_rows_channel_full_n and ap_channel_done_demosaic_out_rows_channel) or ap_sync_reg_channel_write_demosaic_out_rows_channel);
    ap_sync_channel_write_gain_out_cols_channel <= ((gain_out_cols_channel_full_n and ap_channel_done_gain_out_cols_channel) or ap_sync_reg_channel_write_gain_out_cols_channel);
    ap_sync_channel_write_gain_out_rows_channel <= ((gain_out_rows_channel_full_n and ap_channel_done_gain_out_rows_channel) or ap_sync_reg_channel_write_gain_out_rows_channel);
    ap_sync_channel_write_imgInput1_cols_c24_channel <= ((imgInput1_cols_c24_channel_full_n and ap_channel_done_imgInput1_cols_c24_channel) or ap_sync_reg_channel_write_imgInput1_cols_c24_channel);
    ap_sync_channel_write_imgInput1_rows_c23_channel <= ((imgInput1_rows_c23_channel_full_n and ap_channel_done_imgInput1_rows_c23_channel) or ap_sync_reg_channel_write_imgInput1_rows_c23_channel);
    ap_sync_channel_write_imgInput2_cols_channel <= ((imgInput2_cols_channel_full_n and ap_channel_done_imgInput2_cols_channel) or ap_sync_reg_channel_write_imgInput2_cols_channel);
    ap_sync_channel_write_imgInput2_rows_channel <= ((imgInput2_rows_channel_full_n and ap_channel_done_imgInput2_rows_channel) or ap_sync_reg_channel_write_imgInput2_rows_channel);
    ap_sync_channel_write_lsc_out_cols_channel <= ((lsc_out_cols_channel_full_n and ap_channel_done_lsc_out_cols_channel) or ap_sync_reg_channel_write_lsc_out_cols_channel);
    ap_sync_channel_write_lsc_out_rows_channel <= ((lsc_out_rows_channel_full_n and ap_channel_done_lsc_out_rows_channel) or ap_sync_reg_channel_write_lsc_out_rows_channel);
    ap_sync_channel_write_ltm_in_cols_c26_channel <= ((ltm_in_cols_c26_channel_full_n and ap_channel_done_ltm_in_cols_c26_channel) or ap_sync_reg_channel_write_ltm_in_cols_c26_channel);
    ap_sync_channel_write_ltm_in_rows_c25_channel <= ((ltm_in_rows_c25_channel_full_n and ap_channel_done_ltm_in_rows_c25_channel) or ap_sync_reg_channel_write_ltm_in_rows_c25_channel);
    ap_sync_channel_write_p_dst_cols_channel <= ((p_dst_cols_channel_full_n and ap_channel_done_p_dst_cols_channel) or ap_sync_reg_channel_write_p_dst_cols_channel);
    ap_sync_channel_write_p_dst_rows_channel <= ((p_dst_rows_channel_full_n and ap_channel_done_p_dst_rows_channel) or ap_sync_reg_channel_write_p_dst_rows_channel);
    ap_sync_channel_write_p_imgOutput_cols_channel <= ((p_imgOutput_cols_channel_full_n and ap_channel_done_p_imgOutput_cols_channel) or ap_sync_reg_channel_write_p_imgOutput_cols_channel);
    ap_sync_channel_write_p_imgOutput_rows_channel <= ((p_imgOutput_rows_channel_full_n and ap_channel_done_p_imgOutput_rows_channel) or ap_sync_reg_channel_write_p_imgOutput_rows_channel);
    ap_sync_channel_write_rgain_c_channel <= ((rgain_c_channel_full_n and ap_channel_done_rgain_c_channel) or ap_sync_reg_channel_write_rgain_c_channel);
    ap_sync_channel_write_thresh_loc_channel <= ((thresh_loc_channel_full_n and ap_channel_done_thresh_loc_channel) or ap_sync_reg_channel_write_thresh_loc_channel);
    ap_sync_continue <= (ap_sync_done and ap_continue);
    ap_sync_done <= (function_awb_10_10_2160_3840_2_U0_ap_done and ColorMat2AXIvideo_yuv_1_2160_3840_2_U0_ap_done);
    ap_sync_entry_proc_U0_ap_ready <= (entry_proc_U0_ap_ready or ap_sync_reg_entry_proc_U0_ap_ready);
    ap_sync_function_awb_10_10_2160_3840_2_U0_ap_ready <= (function_awb_10_10_2160_3840_2_U0_ap_ready or ap_sync_reg_function_awb_10_10_2160_3840_2_U0_ap_ready);
    ap_sync_gammacorrection_9_9_2160_3840_2_U0_ap_ready <= (gammacorrection_9_9_2160_3840_2_U0_ap_ready or ap_sync_reg_gammacorrection_9_9_2160_3840_2_U0_ap_ready);
    ap_sync_ready <= (ap_sync_gammacorrection_9_9_2160_3840_2_U0_ap_ready and ap_sync_function_awb_10_10_2160_3840_2_U0_ap_ready and ap_sync_entry_proc_U0_ap_ready and ap_sync_ISPpipeline_Block_ZN2xf2cv3MatILi1ELi2160ELi3840ELi2ELi2EEC2Eii_exit1_proc_U0_ap_ready);
    blackLevelCorrection_1_2160_3840_2_16_15_1_18_U0_ap_continue <= ap_const_logic_1;
    blackLevelCorrection_1_2160_3840_2_16_15_1_18_U0_ap_start <= start_for_blackLevelCorrection_1_2160_3840_2_16_15_1_18_U0_empty_n;
    colorcorrectionmatrix_0_10_10_2160_3840_2_2_U0_ap_continue <= ap_const_logic_1;
    colorcorrectionmatrix_0_10_10_2160_3840_2_2_U0_ap_start <= start_for_colorcorrectionmatrix_0_10_10_2160_3840_2_2_U0_empty_n;
    demosaicing_3_1_10_2160_3840_2_false_U0_ap_continue <= ap_const_logic_1;
    demosaicing_3_1_10_2160_3840_2_false_U0_ap_start <= (gain_out_rows_channel_empty_n and gain_out_cols_channel_empty_n);
    entry_proc_U0_ap_continue <= (ap_sync_channel_write_rgain_c_channel and ap_sync_channel_write_bgain_c_channel);
    entry_proc_U0_ap_start <= ((ap_sync_reg_entry_proc_U0_ap_ready xor ap_const_logic_1) and ap_start);
    function_awb_10_10_2160_3840_2_U0_ap_continue <= ap_sync_continue;
    function_awb_10_10_2160_3840_2_U0_ap_start <= (thresh_loc_channel_empty_n and ltm_in_rows_c25_channel_empty_n and ltm_in_cols_c26_channel_empty_n and (ap_sync_reg_function_awb_10_10_2160_3840_2_U0_ap_ready xor ap_const_logic_1) and demosaic_out_rows_channel_empty_n and demosaic_out_cols_channel_empty_n and ap_start);
    gaincontrol_3_1_2160_3840_2_U0_ap_continue <= ap_const_logic_1;
    gaincontrol_3_1_2160_3840_2_U0_ap_start <= (rgain_c_channel_empty_n and imgInput2_rows_channel_empty_n and imgInput2_cols_channel_empty_n and bgain_c_channel_empty_n);
    gamma_lut_address0 <= gammacorrection_9_9_2160_3840_2_U0_gamma_lut_address0;
    gamma_lut_ce0 <= gammacorrection_9_9_2160_3840_2_U0_gamma_lut_ce0;
    gamma_lut_d0 <= ap_const_lv8_0;
    gamma_lut_we0 <= ap_const_logic_0;
    gammacorrection_9_9_2160_3840_2_U0_ap_continue <= ap_const_logic_1;
    gammacorrection_9_9_2160_3840_2_U0_ap_start <= ((ap_sync_reg_gammacorrection_9_9_2160_3840_2_U0_ap_ready xor ap_const_logic_1) and ap_start and aecin_rows_channel_empty_n and aecin_cols_channel_empty_n);
    hist01_address0 <= function_awb_10_10_2160_3840_2_U0_hist01_address0;
    hist01_address1 <= ap_const_lv12_0;
    hist01_ce0 <= function_awb_10_10_2160_3840_2_U0_hist01_ce0;
    hist01_ce1 <= ap_const_logic_0;
    hist01_d0 <= function_awb_10_10_2160_3840_2_U0_hist01_d0;
    hist01_d1 <= ap_const_lv32_0;
    hist01_we0 <= function_awb_10_10_2160_3840_2_U0_hist01_we0;
    hist01_we1 <= ap_const_logic_0;
    hist02_address0 <= function_awb_10_10_2160_3840_2_U0_hist02_address0;
    hist02_address1 <= ap_const_lv12_0;
    hist02_ce0 <= function_awb_10_10_2160_3840_2_U0_hist02_ce0;
    hist02_ce1 <= ap_const_logic_0;
    hist02_d0 <= function_awb_10_10_2160_3840_2_U0_hist02_d0;
    hist02_d1 <= ap_const_lv32_0;
    hist02_we0 <= function_awb_10_10_2160_3840_2_U0_hist02_we0;
    hist02_we1 <= ap_const_logic_0;
    hist0_address0 <= function_awb_10_10_2160_3840_2_U0_hist0_address0;
    hist0_address1 <= ap_const_lv12_0;
    hist0_ce0 <= function_awb_10_10_2160_3840_2_U0_hist0_ce0;
    hist0_ce1 <= ap_const_logic_0;
    hist0_d0 <= function_awb_10_10_2160_3840_2_U0_hist0_d0;
    hist0_d1 <= ap_const_lv32_0;
    hist0_we0 <= function_awb_10_10_2160_3840_2_U0_hist0_we0;
    hist0_we1 <= ap_const_logic_0;
    hist13_address0 <= function_awb_10_10_2160_3840_2_U0_hist13_address0;
    hist13_address1 <= ap_const_lv12_0;
    hist13_ce0 <= function_awb_10_10_2160_3840_2_U0_hist13_ce0;
    hist13_ce1 <= ap_const_logic_0;
    hist13_d0 <= ap_const_lv32_0;
    hist13_d1 <= ap_const_lv32_0;
    hist13_we0 <= ap_const_logic_0;
    hist13_we1 <= ap_const_logic_0;
    hist14_address0 <= function_awb_10_10_2160_3840_2_U0_hist14_address0;
    hist14_address1 <= ap_const_lv12_0;
    hist14_ce0 <= function_awb_10_10_2160_3840_2_U0_hist14_ce0;
    hist14_ce1 <= ap_const_logic_0;
    hist14_d0 <= ap_const_lv32_0;
    hist14_d1 <= ap_const_lv32_0;
    hist14_we0 <= ap_const_logic_0;
    hist14_we1 <= ap_const_logic_0;
    hist1_address0 <= function_awb_10_10_2160_3840_2_U0_hist1_address0;
    hist1_address1 <= ap_const_lv12_0;
    hist1_ce0 <= function_awb_10_10_2160_3840_2_U0_hist1_ce0;
    hist1_ce1 <= ap_const_logic_0;
    hist1_d0 <= ap_const_lv32_0;
    hist1_d1 <= ap_const_lv32_0;
    hist1_we0 <= ap_const_logic_0;
    hist1_we1 <= ap_const_logic_0;
    m_axis_video_TDATA <= ColorMat2AXIvideo_yuv_1_2160_3840_2_U0_m_axis_video_TDATA;
    m_axis_video_TDEST <= ColorMat2AXIvideo_yuv_1_2160_3840_2_U0_m_axis_video_TDEST;
    m_axis_video_TID <= ColorMat2AXIvideo_yuv_1_2160_3840_2_U0_m_axis_video_TID;
    m_axis_video_TKEEP <= ColorMat2AXIvideo_yuv_1_2160_3840_2_U0_m_axis_video_TKEEP;
    m_axis_video_TLAST <= ColorMat2AXIvideo_yuv_1_2160_3840_2_U0_m_axis_video_TLAST;
    m_axis_video_TSTRB <= ColorMat2AXIvideo_yuv_1_2160_3840_2_U0_m_axis_video_TSTRB;
    m_axis_video_TUSER <= ColorMat2AXIvideo_yuv_1_2160_3840_2_U0_m_axis_video_TUSER;
    m_axis_video_TVALID <= ColorMat2AXIvideo_yuv_1_2160_3840_2_U0_m_axis_video_TVALID;
    rgb2yuyv_9_1_2160_3840_2_U0_ap_continue <= ap_const_logic_1;
    rgb2yuyv_9_1_2160_3840_2_U0_ap_start <= (p_dst_rows_channel_empty_n and p_dst_cols_channel_empty_n);
    s_axis_video_TREADY <= AXIVideo2BayerMat_1_2160_3840_2_U0_s_axis_video_TREADY;
    start_for_blackLevelCorrection_1_2160_3840_2_16_15_1_18_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_colorcorrectionmatrix_0_10_10_2160_3840_2_2_U0_din <= (0=>ap_const_logic_1, others=>'-');
    xf_QuatizationDithering_10_9_2160_3840_256_65536_2_U0_ap_continue <= ap_const_logic_1;
    xf_QuatizationDithering_10_9_2160_3840_256_65536_2_U0_ap_start <= (lsc_out_rows_channel_empty_n and lsc_out_cols_channel_empty_n);
end behav;
