-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
-- Version: 2021.1
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity ISPPipeline_accel_function_awb_10_10_2160_3840_2_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    p_read : IN STD_LOGIC_VECTOR (11 downto 0);
    p_read1 : IN STD_LOGIC_VECTOR (11 downto 0);
    demosaic_out_data_dout : IN STD_LOGIC_VECTOR (95 downto 0);
    demosaic_out_data_empty_n : IN STD_LOGIC;
    demosaic_out_data_read : OUT STD_LOGIC;
    p_read2 : IN STD_LOGIC_VECTOR (11 downto 0);
    p_read13 : IN STD_LOGIC_VECTOR (11 downto 0);
    ltm_in_data_din : OUT STD_LOGIC_VECTOR (95 downto 0);
    ltm_in_data_full_n : IN STD_LOGIC;
    ltm_in_data_write : OUT STD_LOGIC;
    hist0_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    hist0_ce0 : OUT STD_LOGIC;
    hist0_we0 : OUT STD_LOGIC;
    hist0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    hist01_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    hist01_ce0 : OUT STD_LOGIC;
    hist01_we0 : OUT STD_LOGIC;
    hist01_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    hist02_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    hist02_ce0 : OUT STD_LOGIC;
    hist02_we0 : OUT STD_LOGIC;
    hist02_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    hist1_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    hist1_ce0 : OUT STD_LOGIC;
    hist1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    hist13_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    hist13_ce0 : OUT STD_LOGIC;
    hist13_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    hist14_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    hist14_ce0 : OUT STD_LOGIC;
    hist14_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    height : IN STD_LOGIC_VECTOR (11 downto 0);
    width : IN STD_LOGIC_VECTOR (11 downto 0);
    mode_reg : IN STD_LOGIC_VECTOR (0 downto 0);
    p_read24 : IN STD_LOGIC_VECTOR (31 downto 0);
    ltm_in_rows_c_din : OUT STD_LOGIC_VECTOR (11 downto 0);
    ltm_in_rows_c_full_n : IN STD_LOGIC;
    ltm_in_rows_c_write : OUT STD_LOGIC;
    ltm_in_cols_c_din : OUT STD_LOGIC_VECTOR (11 downto 0);
    ltm_in_cols_c_full_n : IN STD_LOGIC;
    ltm_in_cols_c_write : OUT STD_LOGIC );
end;


architecture behav of ISPPipeline_accel_function_awb_10_10_2160_3840_2_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_0 : BOOLEAN := false;

attribute shreg_extract : string;
    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (1 downto 0) := "01";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal ltm_in_rows_c_blk_n : STD_LOGIC;
    signal ltm_in_cols_c_blk_n : STD_LOGIC;
    signal grp_fifo_copy_10_10_2160_3840_2_s_fu_178_ap_start : STD_LOGIC;
    signal grp_fifo_copy_10_10_2160_3840_2_s_fu_178_ap_done : STD_LOGIC;
    signal grp_fifo_copy_10_10_2160_3840_2_s_fu_178_ap_idle : STD_LOGIC;
    signal grp_fifo_copy_10_10_2160_3840_2_s_fu_178_ap_ready : STD_LOGIC;
    signal grp_fifo_copy_10_10_2160_3840_2_s_fu_178_demosaic_out_4198_read : STD_LOGIC;
    signal grp_fifo_copy_10_10_2160_3840_2_s_fu_178_ltm_in_4199_din : STD_LOGIC_VECTOR (95 downto 0);
    signal grp_fifo_copy_10_10_2160_3840_2_s_fu_178_ltm_in_4199_write : STD_LOGIC;
    signal grp_fifo_awb_10_10_2160_3840_2_s_fu_190_demosaic_out_4198_read : STD_LOGIC;
    signal grp_fifo_awb_10_10_2160_3840_2_s_fu_190_ltm_in_4199_din : STD_LOGIC_VECTOR (95 downto 0);
    signal grp_fifo_awb_10_10_2160_3840_2_s_fu_190_ltm_in_4199_write : STD_LOGIC;
    signal grp_fifo_awb_10_10_2160_3840_2_s_fu_190_hist0_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fifo_awb_10_10_2160_3840_2_s_fu_190_hist0_ce0 : STD_LOGIC;
    signal grp_fifo_awb_10_10_2160_3840_2_s_fu_190_hist0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fifo_awb_10_10_2160_3840_2_s_fu_190_hist0_we0 : STD_LOGIC;
    signal grp_fifo_awb_10_10_2160_3840_2_s_fu_190_hist0_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fifo_awb_10_10_2160_3840_2_s_fu_190_hist0_ce1 : STD_LOGIC;
    signal grp_fifo_awb_10_10_2160_3840_2_s_fu_190_hist0_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fifo_awb_10_10_2160_3840_2_s_fu_190_hist0_we1 : STD_LOGIC;
    signal grp_fifo_awb_10_10_2160_3840_2_s_fu_190_hist01_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fifo_awb_10_10_2160_3840_2_s_fu_190_hist01_ce0 : STD_LOGIC;
    signal grp_fifo_awb_10_10_2160_3840_2_s_fu_190_hist01_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fifo_awb_10_10_2160_3840_2_s_fu_190_hist01_we0 : STD_LOGIC;
    signal grp_fifo_awb_10_10_2160_3840_2_s_fu_190_hist01_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fifo_awb_10_10_2160_3840_2_s_fu_190_hist01_ce1 : STD_LOGIC;
    signal grp_fifo_awb_10_10_2160_3840_2_s_fu_190_hist01_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fifo_awb_10_10_2160_3840_2_s_fu_190_hist01_we1 : STD_LOGIC;
    signal grp_fifo_awb_10_10_2160_3840_2_s_fu_190_hist02_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fifo_awb_10_10_2160_3840_2_s_fu_190_hist02_ce0 : STD_LOGIC;
    signal grp_fifo_awb_10_10_2160_3840_2_s_fu_190_hist02_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fifo_awb_10_10_2160_3840_2_s_fu_190_hist02_we0 : STD_LOGIC;
    signal grp_fifo_awb_10_10_2160_3840_2_s_fu_190_hist02_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fifo_awb_10_10_2160_3840_2_s_fu_190_hist02_ce1 : STD_LOGIC;
    signal grp_fifo_awb_10_10_2160_3840_2_s_fu_190_hist02_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fifo_awb_10_10_2160_3840_2_s_fu_190_hist02_we1 : STD_LOGIC;
    signal grp_fifo_awb_10_10_2160_3840_2_s_fu_190_hist1_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fifo_awb_10_10_2160_3840_2_s_fu_190_hist1_ce0 : STD_LOGIC;
    signal grp_fifo_awb_10_10_2160_3840_2_s_fu_190_hist1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fifo_awb_10_10_2160_3840_2_s_fu_190_hist1_we0 : STD_LOGIC;
    signal grp_fifo_awb_10_10_2160_3840_2_s_fu_190_hist1_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fifo_awb_10_10_2160_3840_2_s_fu_190_hist1_ce1 : STD_LOGIC;
    signal grp_fifo_awb_10_10_2160_3840_2_s_fu_190_hist1_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fifo_awb_10_10_2160_3840_2_s_fu_190_hist1_we1 : STD_LOGIC;
    signal grp_fifo_awb_10_10_2160_3840_2_s_fu_190_hist13_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fifo_awb_10_10_2160_3840_2_s_fu_190_hist13_ce0 : STD_LOGIC;
    signal grp_fifo_awb_10_10_2160_3840_2_s_fu_190_hist13_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fifo_awb_10_10_2160_3840_2_s_fu_190_hist13_we0 : STD_LOGIC;
    signal grp_fifo_awb_10_10_2160_3840_2_s_fu_190_hist13_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fifo_awb_10_10_2160_3840_2_s_fu_190_hist13_ce1 : STD_LOGIC;
    signal grp_fifo_awb_10_10_2160_3840_2_s_fu_190_hist13_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fifo_awb_10_10_2160_3840_2_s_fu_190_hist13_we1 : STD_LOGIC;
    signal grp_fifo_awb_10_10_2160_3840_2_s_fu_190_hist14_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fifo_awb_10_10_2160_3840_2_s_fu_190_hist14_ce0 : STD_LOGIC;
    signal grp_fifo_awb_10_10_2160_3840_2_s_fu_190_hist14_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fifo_awb_10_10_2160_3840_2_s_fu_190_hist14_we0 : STD_LOGIC;
    signal grp_fifo_awb_10_10_2160_3840_2_s_fu_190_hist14_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fifo_awb_10_10_2160_3840_2_s_fu_190_hist14_ce1 : STD_LOGIC;
    signal grp_fifo_awb_10_10_2160_3840_2_s_fu_190_hist14_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fifo_awb_10_10_2160_3840_2_s_fu_190_hist14_we1 : STD_LOGIC;
    signal grp_fifo_awb_10_10_2160_3840_2_s_fu_190_ap_start : STD_LOGIC;
    signal grp_fifo_awb_10_10_2160_3840_2_s_fu_190_ap_done : STD_LOGIC;
    signal grp_fifo_awb_10_10_2160_3840_2_s_fu_190_ap_ready : STD_LOGIC;
    signal grp_fifo_awb_10_10_2160_3840_2_s_fu_190_ap_idle : STD_LOGIC;
    signal grp_fifo_awb_10_10_2160_3840_2_s_fu_190_ap_continue : STD_LOGIC;
    signal grp_fifo_copy_10_10_2160_3840_2_s_fu_178_ap_start_reg : STD_LOGIC := '0';
    signal ap_block_state1_ignore_call0 : BOOLEAN;
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal grp_fifo_awb_10_10_2160_3840_2_s_fu_190_ap_start_reg : STD_LOGIC := '0';
    signal ap_sync_grp_fifo_awb_10_10_2160_3840_2_s_fu_190_ap_ready : STD_LOGIC;
    signal ap_sync_grp_fifo_awb_10_10_2160_3840_2_s_fu_190_ap_done : STD_LOGIC;
    signal ap_block_state2_on_subcall_done : BOOLEAN;
    signal ap_sync_reg_grp_fifo_awb_10_10_2160_3840_2_s_fu_190_ap_ready : STD_LOGIC := '0';
    signal ap_sync_reg_grp_fifo_awb_10_10_2160_3840_2_s_fu_190_ap_done : STD_LOGIC := '0';
    signal ap_block_state1 : BOOLEAN;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component ISPPipeline_accel_fifo_copy_10_10_2160_3840_2_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        demosaic_out_4198_dout : IN STD_LOGIC_VECTOR (95 downto 0);
        demosaic_out_4198_empty_n : IN STD_LOGIC;
        demosaic_out_4198_read : OUT STD_LOGIC;
        ltm_in_4199_din : OUT STD_LOGIC_VECTOR (95 downto 0);
        ltm_in_4199_full_n : IN STD_LOGIC;
        ltm_in_4199_write : OUT STD_LOGIC;
        height : IN STD_LOGIC_VECTOR (11 downto 0);
        width : IN STD_LOGIC_VECTOR (11 downto 0) );
    end component;


    component ISPPipeline_accel_fifo_awb_10_10_2160_3840_2_s IS
    port (
        p_read : IN STD_LOGIC_VECTOR (11 downto 0);
        p_read1 : IN STD_LOGIC_VECTOR (11 downto 0);
        demosaic_out_4198_dout : IN STD_LOGIC_VECTOR (95 downto 0);
        demosaic_out_4198_empty_n : IN STD_LOGIC;
        demosaic_out_4198_read : OUT STD_LOGIC;
        p_read2 : IN STD_LOGIC_VECTOR (11 downto 0);
        p_read3 : IN STD_LOGIC_VECTOR (11 downto 0);
        ltm_in_4199_din : OUT STD_LOGIC_VECTOR (95 downto 0);
        ltm_in_4199_full_n : IN STD_LOGIC;
        ltm_in_4199_write : OUT STD_LOGIC;
        hist0_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        hist0_ce0 : OUT STD_LOGIC;
        hist0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        hist0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        hist0_we0 : OUT STD_LOGIC;
        hist0_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        hist0_ce1 : OUT STD_LOGIC;
        hist0_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        hist0_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        hist0_we1 : OUT STD_LOGIC;
        hist01_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        hist01_ce0 : OUT STD_LOGIC;
        hist01_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        hist01_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        hist01_we0 : OUT STD_LOGIC;
        hist01_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        hist01_ce1 : OUT STD_LOGIC;
        hist01_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        hist01_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        hist01_we1 : OUT STD_LOGIC;
        hist02_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        hist02_ce0 : OUT STD_LOGIC;
        hist02_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        hist02_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        hist02_we0 : OUT STD_LOGIC;
        hist02_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        hist02_ce1 : OUT STD_LOGIC;
        hist02_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        hist02_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        hist02_we1 : OUT STD_LOGIC;
        hist1_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        hist1_ce0 : OUT STD_LOGIC;
        hist1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        hist1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        hist1_we0 : OUT STD_LOGIC;
        hist1_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        hist1_ce1 : OUT STD_LOGIC;
        hist1_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        hist1_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        hist1_we1 : OUT STD_LOGIC;
        hist13_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        hist13_ce0 : OUT STD_LOGIC;
        hist13_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        hist13_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        hist13_we0 : OUT STD_LOGIC;
        hist13_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        hist13_ce1 : OUT STD_LOGIC;
        hist13_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        hist13_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        hist13_we1 : OUT STD_LOGIC;
        hist14_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        hist14_ce0 : OUT STD_LOGIC;
        hist14_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        hist14_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        hist14_we0 : OUT STD_LOGIC;
        hist14_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        hist14_ce1 : OUT STD_LOGIC;
        hist14_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        hist14_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        hist14_we1 : OUT STD_LOGIC;
        thresh : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        p_read_ap_vld : IN STD_LOGIC;
        p_read1_ap_vld : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        p_read2_ap_vld : IN STD_LOGIC;
        p_read3_ap_vld : IN STD_LOGIC;
        thresh_ap_vld : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC );
    end component;



begin
    grp_fifo_copy_10_10_2160_3840_2_s_fu_178 : component ISPPipeline_accel_fifo_copy_10_10_2160_3840_2_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_fifo_copy_10_10_2160_3840_2_s_fu_178_ap_start,
        ap_done => grp_fifo_copy_10_10_2160_3840_2_s_fu_178_ap_done,
        ap_idle => grp_fifo_copy_10_10_2160_3840_2_s_fu_178_ap_idle,
        ap_ready => grp_fifo_copy_10_10_2160_3840_2_s_fu_178_ap_ready,
        demosaic_out_4198_dout => demosaic_out_data_dout,
        demosaic_out_4198_empty_n => demosaic_out_data_empty_n,
        demosaic_out_4198_read => grp_fifo_copy_10_10_2160_3840_2_s_fu_178_demosaic_out_4198_read,
        ltm_in_4199_din => grp_fifo_copy_10_10_2160_3840_2_s_fu_178_ltm_in_4199_din,
        ltm_in_4199_full_n => ltm_in_data_full_n,
        ltm_in_4199_write => grp_fifo_copy_10_10_2160_3840_2_s_fu_178_ltm_in_4199_write,
        height => height,
        width => width);

    grp_fifo_awb_10_10_2160_3840_2_s_fu_190 : component ISPPipeline_accel_fifo_awb_10_10_2160_3840_2_s
    port map (
        p_read => p_read,
        p_read1 => p_read1,
        demosaic_out_4198_dout => demosaic_out_data_dout,
        demosaic_out_4198_empty_n => demosaic_out_data_empty_n,
        demosaic_out_4198_read => grp_fifo_awb_10_10_2160_3840_2_s_fu_190_demosaic_out_4198_read,
        p_read2 => p_read2,
        p_read3 => p_read13,
        ltm_in_4199_din => grp_fifo_awb_10_10_2160_3840_2_s_fu_190_ltm_in_4199_din,
        ltm_in_4199_full_n => ltm_in_data_full_n,
        ltm_in_4199_write => grp_fifo_awb_10_10_2160_3840_2_s_fu_190_ltm_in_4199_write,
        hist0_address0 => grp_fifo_awb_10_10_2160_3840_2_s_fu_190_hist0_address0,
        hist0_ce0 => grp_fifo_awb_10_10_2160_3840_2_s_fu_190_hist0_ce0,
        hist0_d0 => grp_fifo_awb_10_10_2160_3840_2_s_fu_190_hist0_d0,
        hist0_q0 => ap_const_lv32_0,
        hist0_we0 => grp_fifo_awb_10_10_2160_3840_2_s_fu_190_hist0_we0,
        hist0_address1 => grp_fifo_awb_10_10_2160_3840_2_s_fu_190_hist0_address1,
        hist0_ce1 => grp_fifo_awb_10_10_2160_3840_2_s_fu_190_hist0_ce1,
        hist0_d1 => grp_fifo_awb_10_10_2160_3840_2_s_fu_190_hist0_d1,
        hist0_q1 => ap_const_lv32_0,
        hist0_we1 => grp_fifo_awb_10_10_2160_3840_2_s_fu_190_hist0_we1,
        hist01_address0 => grp_fifo_awb_10_10_2160_3840_2_s_fu_190_hist01_address0,
        hist01_ce0 => grp_fifo_awb_10_10_2160_3840_2_s_fu_190_hist01_ce0,
        hist01_d0 => grp_fifo_awb_10_10_2160_3840_2_s_fu_190_hist01_d0,
        hist01_q0 => ap_const_lv32_0,
        hist01_we0 => grp_fifo_awb_10_10_2160_3840_2_s_fu_190_hist01_we0,
        hist01_address1 => grp_fifo_awb_10_10_2160_3840_2_s_fu_190_hist01_address1,
        hist01_ce1 => grp_fifo_awb_10_10_2160_3840_2_s_fu_190_hist01_ce1,
        hist01_d1 => grp_fifo_awb_10_10_2160_3840_2_s_fu_190_hist01_d1,
        hist01_q1 => ap_const_lv32_0,
        hist01_we1 => grp_fifo_awb_10_10_2160_3840_2_s_fu_190_hist01_we1,
        hist02_address0 => grp_fifo_awb_10_10_2160_3840_2_s_fu_190_hist02_address0,
        hist02_ce0 => grp_fifo_awb_10_10_2160_3840_2_s_fu_190_hist02_ce0,
        hist02_d0 => grp_fifo_awb_10_10_2160_3840_2_s_fu_190_hist02_d0,
        hist02_q0 => ap_const_lv32_0,
        hist02_we0 => grp_fifo_awb_10_10_2160_3840_2_s_fu_190_hist02_we0,
        hist02_address1 => grp_fifo_awb_10_10_2160_3840_2_s_fu_190_hist02_address1,
        hist02_ce1 => grp_fifo_awb_10_10_2160_3840_2_s_fu_190_hist02_ce1,
        hist02_d1 => grp_fifo_awb_10_10_2160_3840_2_s_fu_190_hist02_d1,
        hist02_q1 => ap_const_lv32_0,
        hist02_we1 => grp_fifo_awb_10_10_2160_3840_2_s_fu_190_hist02_we1,
        hist1_address0 => grp_fifo_awb_10_10_2160_3840_2_s_fu_190_hist1_address0,
        hist1_ce0 => grp_fifo_awb_10_10_2160_3840_2_s_fu_190_hist1_ce0,
        hist1_d0 => grp_fifo_awb_10_10_2160_3840_2_s_fu_190_hist1_d0,
        hist1_q0 => hist1_q0,
        hist1_we0 => grp_fifo_awb_10_10_2160_3840_2_s_fu_190_hist1_we0,
        hist1_address1 => grp_fifo_awb_10_10_2160_3840_2_s_fu_190_hist1_address1,
        hist1_ce1 => grp_fifo_awb_10_10_2160_3840_2_s_fu_190_hist1_ce1,
        hist1_d1 => grp_fifo_awb_10_10_2160_3840_2_s_fu_190_hist1_d1,
        hist1_q1 => ap_const_lv32_0,
        hist1_we1 => grp_fifo_awb_10_10_2160_3840_2_s_fu_190_hist1_we1,
        hist13_address0 => grp_fifo_awb_10_10_2160_3840_2_s_fu_190_hist13_address0,
        hist13_ce0 => grp_fifo_awb_10_10_2160_3840_2_s_fu_190_hist13_ce0,
        hist13_d0 => grp_fifo_awb_10_10_2160_3840_2_s_fu_190_hist13_d0,
        hist13_q0 => hist13_q0,
        hist13_we0 => grp_fifo_awb_10_10_2160_3840_2_s_fu_190_hist13_we0,
        hist13_address1 => grp_fifo_awb_10_10_2160_3840_2_s_fu_190_hist13_address1,
        hist13_ce1 => grp_fifo_awb_10_10_2160_3840_2_s_fu_190_hist13_ce1,
        hist13_d1 => grp_fifo_awb_10_10_2160_3840_2_s_fu_190_hist13_d1,
        hist13_q1 => ap_const_lv32_0,
        hist13_we1 => grp_fifo_awb_10_10_2160_3840_2_s_fu_190_hist13_we1,
        hist14_address0 => grp_fifo_awb_10_10_2160_3840_2_s_fu_190_hist14_address0,
        hist14_ce0 => grp_fifo_awb_10_10_2160_3840_2_s_fu_190_hist14_ce0,
        hist14_d0 => grp_fifo_awb_10_10_2160_3840_2_s_fu_190_hist14_d0,
        hist14_q0 => hist14_q0,
        hist14_we0 => grp_fifo_awb_10_10_2160_3840_2_s_fu_190_hist14_we0,
        hist14_address1 => grp_fifo_awb_10_10_2160_3840_2_s_fu_190_hist14_address1,
        hist14_ce1 => grp_fifo_awb_10_10_2160_3840_2_s_fu_190_hist14_ce1,
        hist14_d1 => grp_fifo_awb_10_10_2160_3840_2_s_fu_190_hist14_d1,
        hist14_q1 => ap_const_lv32_0,
        hist14_we1 => grp_fifo_awb_10_10_2160_3840_2_s_fu_190_hist14_we1,
        thresh => p_read24,
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        p_read_ap_vld => ap_const_logic_1,
        p_read1_ap_vld => ap_const_logic_1,
        ap_start => grp_fifo_awb_10_10_2160_3840_2_s_fu_190_ap_start,
        ap_done => grp_fifo_awb_10_10_2160_3840_2_s_fu_190_ap_done,
        p_read2_ap_vld => ap_const_logic_1,
        p_read3_ap_vld => ap_const_logic_1,
        thresh_ap_vld => ap_const_logic_1,
        ap_ready => grp_fifo_awb_10_10_2160_3840_2_s_fu_190_ap_ready,
        ap_idle => grp_fifo_awb_10_10_2160_3840_2_s_fu_190_ap_idle,
        ap_continue => grp_fifo_awb_10_10_2160_3840_2_s_fu_190_ap_continue);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_grp_fifo_awb_10_10_2160_3840_2_s_fu_190_ap_done_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_grp_fifo_awb_10_10_2160_3840_2_s_fu_190_ap_done <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2) and (mode_reg = ap_const_lv1_1))) then 
                    ap_sync_reg_grp_fifo_awb_10_10_2160_3840_2_s_fu_190_ap_done <= ap_const_logic_0;
                elsif ((grp_fifo_awb_10_10_2160_3840_2_s_fu_190_ap_done = ap_const_logic_1)) then 
                    ap_sync_reg_grp_fifo_awb_10_10_2160_3840_2_s_fu_190_ap_done <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_grp_fifo_awb_10_10_2160_3840_2_s_fu_190_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_grp_fifo_awb_10_10_2160_3840_2_s_fu_190_ap_ready <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2) and (mode_reg = ap_const_lv1_1))) then 
                    ap_sync_reg_grp_fifo_awb_10_10_2160_3840_2_s_fu_190_ap_ready <= ap_const_logic_0;
                elsif ((grp_fifo_awb_10_10_2160_3840_2_s_fu_190_ap_ready = ap_const_logic_1)) then 
                    ap_sync_reg_grp_fifo_awb_10_10_2160_3840_2_s_fu_190_ap_ready <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    grp_fifo_awb_10_10_2160_3840_2_s_fu_190_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_fifo_awb_10_10_2160_3840_2_s_fu_190_ap_start_reg <= ap_const_logic_0;
            else
                if ((((ap_sync_grp_fifo_awb_10_10_2160_3840_2_s_fu_190_ap_ready = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state2) and (mode_reg = ap_const_lv1_1)) or (not(((ltm_in_cols_c_full_n = ap_const_logic_0) or (ltm_in_rows_c_full_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1) and (mode_reg = ap_const_lv1_1)))) then 
                    grp_fifo_awb_10_10_2160_3840_2_s_fu_190_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_fifo_awb_10_10_2160_3840_2_s_fu_190_ap_ready = ap_const_logic_1)) then 
                    grp_fifo_awb_10_10_2160_3840_2_s_fu_190_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_fifo_copy_10_10_2160_3840_2_s_fu_178_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_fifo_copy_10_10_2160_3840_2_s_fu_178_ap_start_reg <= ap_const_logic_0;
            else
                if ((not(((ltm_in_cols_c_full_n = ap_const_logic_0) or (ltm_in_rows_c_full_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1) and (mode_reg = ap_const_lv1_0))) then 
                    grp_fifo_copy_10_10_2160_3840_2_s_fu_178_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_fifo_copy_10_10_2160_3840_2_s_fu_178_ap_ready = ap_const_logic_1)) then 
                    grp_fifo_copy_10_10_2160_3840_2_s_fu_178_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((real_start = ap_const_logic_1) and (internal_ap_ready = ap_const_logic_0))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_NS_fsm_assign_proc : process (real_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, ltm_in_rows_c_full_n, ltm_in_cols_c_full_n, ap_CS_fsm_state2, ap_block_state2_on_subcall_done)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ltm_in_cols_c_full_n = ap_const_logic_0) or (ltm_in_rows_c_full_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when others =>  
                ap_NS_fsm <= "XX";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);

    ap_ST_fsm_state1_blk_assign_proc : process(real_start, ap_done_reg, ltm_in_rows_c_full_n, ltm_in_cols_c_full_n)
    begin
        if (((ltm_in_cols_c_full_n = ap_const_logic_0) or (ltm_in_rows_c_full_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state2_blk_assign_proc : process(ap_block_state2_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state2_on_subcall_done)) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_block_state1_assign_proc : process(real_start, ap_done_reg, ltm_in_rows_c_full_n, ltm_in_cols_c_full_n)
    begin
                ap_block_state1 <= ((ltm_in_cols_c_full_n = ap_const_logic_0) or (ltm_in_rows_c_full_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;


    ap_block_state1_ignore_call0_assign_proc : process(real_start, ap_done_reg, ltm_in_rows_c_full_n, ltm_in_cols_c_full_n)
    begin
                ap_block_state1_ignore_call0 <= ((ltm_in_cols_c_full_n = ap_const_logic_0) or (ltm_in_rows_c_full_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;


    ap_block_state2_on_subcall_done_assign_proc : process(mode_reg, grp_fifo_copy_10_10_2160_3840_2_s_fu_178_ap_done, ap_sync_grp_fifo_awb_10_10_2160_3840_2_s_fu_190_ap_ready, ap_sync_grp_fifo_awb_10_10_2160_3840_2_s_fu_190_ap_done)
    begin
                ap_block_state2_on_subcall_done <= ((((ap_sync_grp_fifo_awb_10_10_2160_3840_2_s_fu_190_ap_ready and ap_sync_grp_fifo_awb_10_10_2160_3840_2_s_fu_190_ap_done) = ap_const_logic_0) and (mode_reg = ap_const_lv1_1)) or ((grp_fifo_copy_10_10_2160_3840_2_s_fu_178_ap_done = ap_const_logic_0) and (mode_reg = ap_const_lv1_0)));
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state2, ap_block_state2_on_subcall_done)
    begin
        if (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((real_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;

    ap_ready <= internal_ap_ready;
    ap_sync_grp_fifo_awb_10_10_2160_3840_2_s_fu_190_ap_done <= (grp_fifo_awb_10_10_2160_3840_2_s_fu_190_ap_done or ap_sync_reg_grp_fifo_awb_10_10_2160_3840_2_s_fu_190_ap_done);
    ap_sync_grp_fifo_awb_10_10_2160_3840_2_s_fu_190_ap_ready <= (grp_fifo_awb_10_10_2160_3840_2_s_fu_190_ap_ready or ap_sync_reg_grp_fifo_awb_10_10_2160_3840_2_s_fu_190_ap_ready);

    demosaic_out_data_read_assign_proc : process(mode_reg, grp_fifo_copy_10_10_2160_3840_2_s_fu_178_demosaic_out_4198_read, grp_fifo_awb_10_10_2160_3840_2_s_fu_190_demosaic_out_4198_read, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
            if ((mode_reg = ap_const_lv1_1)) then 
                demosaic_out_data_read <= grp_fifo_awb_10_10_2160_3840_2_s_fu_190_demosaic_out_4198_read;
            elsif ((mode_reg = ap_const_lv1_0)) then 
                demosaic_out_data_read <= grp_fifo_copy_10_10_2160_3840_2_s_fu_178_demosaic_out_4198_read;
            else 
                demosaic_out_data_read <= ap_const_logic_0;
            end if;
        else 
            demosaic_out_data_read <= ap_const_logic_0;
        end if; 
    end process;


    grp_fifo_awb_10_10_2160_3840_2_s_fu_190_ap_continue_assign_proc : process(mode_reg, ap_CS_fsm_state2, ap_block_state2_on_subcall_done)
    begin
        if (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2) and (mode_reg = ap_const_lv1_1))) then 
            grp_fifo_awb_10_10_2160_3840_2_s_fu_190_ap_continue <= ap_const_logic_1;
        else 
            grp_fifo_awb_10_10_2160_3840_2_s_fu_190_ap_continue <= ap_const_logic_0;
        end if; 
    end process;

    grp_fifo_awb_10_10_2160_3840_2_s_fu_190_ap_start <= grp_fifo_awb_10_10_2160_3840_2_s_fu_190_ap_start_reg;
    grp_fifo_copy_10_10_2160_3840_2_s_fu_178_ap_start <= grp_fifo_copy_10_10_2160_3840_2_s_fu_178_ap_start_reg;
    hist01_address0 <= grp_fifo_awb_10_10_2160_3840_2_s_fu_190_hist01_address0;
    hist01_ce0 <= grp_fifo_awb_10_10_2160_3840_2_s_fu_190_hist01_ce0;
    hist01_d0 <= grp_fifo_awb_10_10_2160_3840_2_s_fu_190_hist01_d0;
    hist01_we0 <= grp_fifo_awb_10_10_2160_3840_2_s_fu_190_hist01_we0;
    hist02_address0 <= grp_fifo_awb_10_10_2160_3840_2_s_fu_190_hist02_address0;
    hist02_ce0 <= grp_fifo_awb_10_10_2160_3840_2_s_fu_190_hist02_ce0;
    hist02_d0 <= grp_fifo_awb_10_10_2160_3840_2_s_fu_190_hist02_d0;
    hist02_we0 <= grp_fifo_awb_10_10_2160_3840_2_s_fu_190_hist02_we0;
    hist0_address0 <= grp_fifo_awb_10_10_2160_3840_2_s_fu_190_hist0_address0;
    hist0_ce0 <= grp_fifo_awb_10_10_2160_3840_2_s_fu_190_hist0_ce0;
    hist0_d0 <= grp_fifo_awb_10_10_2160_3840_2_s_fu_190_hist0_d0;
    hist0_we0 <= grp_fifo_awb_10_10_2160_3840_2_s_fu_190_hist0_we0;
    hist13_address0 <= grp_fifo_awb_10_10_2160_3840_2_s_fu_190_hist13_address0;
    hist13_ce0 <= grp_fifo_awb_10_10_2160_3840_2_s_fu_190_hist13_ce0;
    hist14_address0 <= grp_fifo_awb_10_10_2160_3840_2_s_fu_190_hist14_address0;
    hist14_ce0 <= grp_fifo_awb_10_10_2160_3840_2_s_fu_190_hist14_ce0;
    hist1_address0 <= grp_fifo_awb_10_10_2160_3840_2_s_fu_190_hist1_address0;
    hist1_ce0 <= grp_fifo_awb_10_10_2160_3840_2_s_fu_190_hist1_ce0;

    internal_ap_ready_assign_proc : process(ap_CS_fsm_state2, ap_block_state2_on_subcall_done)
    begin
        if (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ltm_in_cols_c_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, ltm_in_cols_c_full_n)
    begin
        if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ltm_in_cols_c_blk_n <= ltm_in_cols_c_full_n;
        else 
            ltm_in_cols_c_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    ltm_in_cols_c_din <= p_read13;

    ltm_in_cols_c_write_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, ltm_in_rows_c_full_n, ltm_in_cols_c_full_n)
    begin
        if ((not(((ltm_in_cols_c_full_n = ap_const_logic_0) or (ltm_in_rows_c_full_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ltm_in_cols_c_write <= ap_const_logic_1;
        else 
            ltm_in_cols_c_write <= ap_const_logic_0;
        end if; 
    end process;


    ltm_in_data_din_assign_proc : process(mode_reg, grp_fifo_copy_10_10_2160_3840_2_s_fu_178_ltm_in_4199_din, grp_fifo_awb_10_10_2160_3840_2_s_fu_190_ltm_in_4199_din, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
            if ((mode_reg = ap_const_lv1_1)) then 
                ltm_in_data_din <= grp_fifo_awb_10_10_2160_3840_2_s_fu_190_ltm_in_4199_din;
            elsif ((mode_reg = ap_const_lv1_0)) then 
                ltm_in_data_din <= grp_fifo_copy_10_10_2160_3840_2_s_fu_178_ltm_in_4199_din;
            else 
                ltm_in_data_din <= grp_fifo_awb_10_10_2160_3840_2_s_fu_190_ltm_in_4199_din;
            end if;
        else 
            ltm_in_data_din <= grp_fifo_awb_10_10_2160_3840_2_s_fu_190_ltm_in_4199_din;
        end if; 
    end process;


    ltm_in_data_write_assign_proc : process(mode_reg, grp_fifo_copy_10_10_2160_3840_2_s_fu_178_ltm_in_4199_write, grp_fifo_awb_10_10_2160_3840_2_s_fu_190_ltm_in_4199_write, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
            if ((mode_reg = ap_const_lv1_1)) then 
                ltm_in_data_write <= grp_fifo_awb_10_10_2160_3840_2_s_fu_190_ltm_in_4199_write;
            elsif ((mode_reg = ap_const_lv1_0)) then 
                ltm_in_data_write <= grp_fifo_copy_10_10_2160_3840_2_s_fu_178_ltm_in_4199_write;
            else 
                ltm_in_data_write <= ap_const_logic_0;
            end if;
        else 
            ltm_in_data_write <= ap_const_logic_0;
        end if; 
    end process;


    ltm_in_rows_c_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, ltm_in_rows_c_full_n)
    begin
        if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ltm_in_rows_c_blk_n <= ltm_in_rows_c_full_n;
        else 
            ltm_in_rows_c_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    ltm_in_rows_c_din <= p_read2;

    ltm_in_rows_c_write_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, ltm_in_rows_c_full_n, ltm_in_cols_c_full_n)
    begin
        if ((not(((ltm_in_cols_c_full_n = ap_const_logic_0) or (ltm_in_rows_c_full_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ltm_in_rows_c_write <= ap_const_logic_1;
        else 
            ltm_in_rows_c_write <= ap_const_logic_0;
        end if; 
    end process;


    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_full_n = ap_const_logic_0) and (start_once_reg = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;

    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((real_start = ap_const_logic_1) and (start_once_reg = ap_const_logic_0))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;

end behav;
