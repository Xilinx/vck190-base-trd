-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
-- Version: 2021.1
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity ISPPipeline_accel_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    impop_41_dout : IN STD_LOGIC_VECTOR (95 downto 0);
    impop_41_empty_n : IN STD_LOGIC;
    impop_41_read : OUT STD_LOGIC;
    p_read : IN STD_LOGIC_VECTOR (11 downto 0);
    p_read1 : IN STD_LOGIC_VECTOR (11 downto 0);
    ltm_in_4199_din : OUT STD_LOGIC_VECTOR (95 downto 0);
    ltm_in_4199_full_n : IN STD_LOGIC;
    ltm_in_4199_write : OUT STD_LOGIC;
    hist_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    hist_ce0 : OUT STD_LOGIC;
    hist_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    hist1_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    hist1_ce0 : OUT STD_LOGIC;
    hist1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    hist2_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    hist2_ce0 : OUT STD_LOGIC;
    hist2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    p : IN STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of ISPPipeline_accel_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (140 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (140 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (140 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (140 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (140 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (140 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (140 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (140 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (140 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (140 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (140 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (140 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (140 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (140 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (140 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (140 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (140 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (140 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (140 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (140 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (140 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (140 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (140 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (140 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (140 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (140 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (140 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (140 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (140 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (140 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (140 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000";
    constant ap_ST_fsm_state32 : STD_LOGIC_VECTOR (140 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000";
    constant ap_ST_fsm_state33 : STD_LOGIC_VECTOR (140 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000";
    constant ap_ST_fsm_state34 : STD_LOGIC_VECTOR (140 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000";
    constant ap_ST_fsm_state35 : STD_LOGIC_VECTOR (140 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000";
    constant ap_ST_fsm_state36 : STD_LOGIC_VECTOR (140 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000";
    constant ap_ST_fsm_state37 : STD_LOGIC_VECTOR (140 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000";
    constant ap_ST_fsm_state38 : STD_LOGIC_VECTOR (140 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000";
    constant ap_ST_fsm_state39 : STD_LOGIC_VECTOR (140 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000";
    constant ap_ST_fsm_state40 : STD_LOGIC_VECTOR (140 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000";
    constant ap_ST_fsm_state41 : STD_LOGIC_VECTOR (140 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000";
    constant ap_ST_fsm_state42 : STD_LOGIC_VECTOR (140 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000";
    constant ap_ST_fsm_state43 : STD_LOGIC_VECTOR (140 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state44 : STD_LOGIC_VECTOR (140 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state45 : STD_LOGIC_VECTOR (140 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state46 : STD_LOGIC_VECTOR (140 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state47 : STD_LOGIC_VECTOR (140 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state48 : STD_LOGIC_VECTOR (140 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state49 : STD_LOGIC_VECTOR (140 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state50 : STD_LOGIC_VECTOR (140 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state51 : STD_LOGIC_VECTOR (140 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state52 : STD_LOGIC_VECTOR (140 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state53 : STD_LOGIC_VECTOR (140 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state54 : STD_LOGIC_VECTOR (140 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state55 : STD_LOGIC_VECTOR (140 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state56 : STD_LOGIC_VECTOR (140 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state57 : STD_LOGIC_VECTOR (140 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state58 : STD_LOGIC_VECTOR (140 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state59 : STD_LOGIC_VECTOR (140 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state60 : STD_LOGIC_VECTOR (140 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state61 : STD_LOGIC_VECTOR (140 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state62 : STD_LOGIC_VECTOR (140 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state63 : STD_LOGIC_VECTOR (140 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state64 : STD_LOGIC_VECTOR (140 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state65 : STD_LOGIC_VECTOR (140 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state66 : STD_LOGIC_VECTOR (140 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state67 : STD_LOGIC_VECTOR (140 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state68 : STD_LOGIC_VECTOR (140 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state69 : STD_LOGIC_VECTOR (140 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state70 : STD_LOGIC_VECTOR (140 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state71 : STD_LOGIC_VECTOR (140 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state72 : STD_LOGIC_VECTOR (140 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state73 : STD_LOGIC_VECTOR (140 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state74 : STD_LOGIC_VECTOR (140 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state75 : STD_LOGIC_VECTOR (140 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state76 : STD_LOGIC_VECTOR (140 downto 0) := "000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state77 : STD_LOGIC_VECTOR (140 downto 0) := "000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state78 : STD_LOGIC_VECTOR (140 downto 0) := "000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state79 : STD_LOGIC_VECTOR (140 downto 0) := "000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state80 : STD_LOGIC_VECTOR (140 downto 0) := "000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state81 : STD_LOGIC_VECTOR (140 downto 0) := "000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state82 : STD_LOGIC_VECTOR (140 downto 0) := "000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state83 : STD_LOGIC_VECTOR (140 downto 0) := "000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state84 : STD_LOGIC_VECTOR (140 downto 0) := "000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state85 : STD_LOGIC_VECTOR (140 downto 0) := "000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state86 : STD_LOGIC_VECTOR (140 downto 0) := "000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state87 : STD_LOGIC_VECTOR (140 downto 0) := "000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state88 : STD_LOGIC_VECTOR (140 downto 0) := "000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state89 : STD_LOGIC_VECTOR (140 downto 0) := "000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state90 : STD_LOGIC_VECTOR (140 downto 0) := "000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state91 : STD_LOGIC_VECTOR (140 downto 0) := "000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state92 : STD_LOGIC_VECTOR (140 downto 0) := "000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state93 : STD_LOGIC_VECTOR (140 downto 0) := "000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state94 : STD_LOGIC_VECTOR (140 downto 0) := "000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state95 : STD_LOGIC_VECTOR (140 downto 0) := "000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state96 : STD_LOGIC_VECTOR (140 downto 0) := "000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state97 : STD_LOGIC_VECTOR (140 downto 0) := "000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state98 : STD_LOGIC_VECTOR (140 downto 0) := "000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state99 : STD_LOGIC_VECTOR (140 downto 0) := "000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state100 : STD_LOGIC_VECTOR (140 downto 0) := "000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state101 : STD_LOGIC_VECTOR (140 downto 0) := "000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state102 : STD_LOGIC_VECTOR (140 downto 0) := "000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state103 : STD_LOGIC_VECTOR (140 downto 0) := "000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state104 : STD_LOGIC_VECTOR (140 downto 0) := "000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state105 : STD_LOGIC_VECTOR (140 downto 0) := "000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state106 : STD_LOGIC_VECTOR (140 downto 0) := "000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state107 : STD_LOGIC_VECTOR (140 downto 0) := "000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state108 : STD_LOGIC_VECTOR (140 downto 0) := "000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state109 : STD_LOGIC_VECTOR (140 downto 0) := "000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state110 : STD_LOGIC_VECTOR (140 downto 0) := "000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state111 : STD_LOGIC_VECTOR (140 downto 0) := "000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state112 : STD_LOGIC_VECTOR (140 downto 0) := "000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state113 : STD_LOGIC_VECTOR (140 downto 0) := "000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state114 : STD_LOGIC_VECTOR (140 downto 0) := "000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state115 : STD_LOGIC_VECTOR (140 downto 0) := "000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state116 : STD_LOGIC_VECTOR (140 downto 0) := "000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state117 : STD_LOGIC_VECTOR (140 downto 0) := "000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state118 : STD_LOGIC_VECTOR (140 downto 0) := "000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state119 : STD_LOGIC_VECTOR (140 downto 0) := "000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state120 : STD_LOGIC_VECTOR (140 downto 0) := "000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state121 : STD_LOGIC_VECTOR (140 downto 0) := "000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state122 : STD_LOGIC_VECTOR (140 downto 0) := "000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state123 : STD_LOGIC_VECTOR (140 downto 0) := "000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state124 : STD_LOGIC_VECTOR (140 downto 0) := "000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state125 : STD_LOGIC_VECTOR (140 downto 0) := "000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state126 : STD_LOGIC_VECTOR (140 downto 0) := "000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state127 : STD_LOGIC_VECTOR (140 downto 0) := "000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state128 : STD_LOGIC_VECTOR (140 downto 0) := "000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state129 : STD_LOGIC_VECTOR (140 downto 0) := "000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state130 : STD_LOGIC_VECTOR (140 downto 0) := "000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state131 : STD_LOGIC_VECTOR (140 downto 0) := "000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state132 : STD_LOGIC_VECTOR (140 downto 0) := "000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state133 : STD_LOGIC_VECTOR (140 downto 0) := "000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state134 : STD_LOGIC_VECTOR (140 downto 0) := "000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state135 : STD_LOGIC_VECTOR (140 downto 0) := "000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state136 : STD_LOGIC_VECTOR (140 downto 0) := "000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state137 : STD_LOGIC_VECTOR (140 downto 0) := "000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state138 : STD_LOGIC_VECTOR (140 downto 0) := "000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state139 : STD_LOGIC_VECTOR (140 downto 0) := "001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state140 : STD_LOGIC_VECTOR (140 downto 0) := "010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state141 : STD_LOGIC_VECTOR (140 downto 0) := "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_8B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010001011";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_38 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111000";
    constant ap_const_lv32_61 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100001";
    constant ap_const_lv32_8A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010001010";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_8C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010001100";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv24_3FFFE0 : STD_LOGIC_VECTOR (23 downto 0) := "001111111111111111100000";
    constant ap_const_lv24_FFFFE0 : STD_LOGIC_VECTOR (23 downto 0) := "111111111111111111100000";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv63_0 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv12_433 : STD_LOGIC_VECTOR (11 downto 0) := "010000110011";
    constant ap_const_lv54_0 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv12_14 : STD_LOGIC_VECTOR (11 downto 0) := "000000010100";
    constant ap_const_lv12_FEC : STD_LOGIC_VECTOR (11 downto 0) := "111111101100";
    constant ap_const_lv12_18 : STD_LOGIC_VECTOR (11 downto 0) := "000000011000";
    constant ap_const_lv12_36 : STD_LOGIC_VECTOR (11 downto 0) := "000000110110";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv24_FFFFFF : STD_LOGIC_VECTOR (23 downto 0) := "111111111111111111111111";
    constant ap_const_lv24_0 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000000000";
    constant ap_const_lv27_6400000 : STD_LOGIC_VECTOR (26 downto 0) := "110010000000000000000000000";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv103_A3D70A3D70A3E : STD_LOGIC_VECTOR (102 downto 0) := "0000000000000000000000000000000000000000000000000001010001111010111000010100011110101110000101000111110";
    constant ap_const_lv97_147AE147AE148 : STD_LOGIC_VECTOR (96 downto 0) := "0000000000000000000000000000000000000000000000001010001111010111000010100011110101110000101001000";
    constant ap_const_lv48_FFFFFFFFFF9D : STD_LOGIC_VECTOR (47 downto 0) := "111111111111111111111111111111111111111110011101";
    constant ap_const_lv32_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110111";
    constant ap_const_lv32_60 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100000";
    constant ap_const_lv97_0 : STD_LOGIC_VECTOR (96 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv48_0 : STD_LOGIC_VECTOR (47 downto 0) := "000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv20_0 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000000";
    constant ap_const_lv29_1 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000000000000000001";
    constant ap_const_lv32_4E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001110";
    constant ap_const_lv32_66 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100110";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv38_1000000000 : STD_LOGIC_VECTOR (37 downto 0) := "01000000000000000000000000000000000000";
    constant ap_const_lv12_1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (140 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal reg_372 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal icmp_ln303_fu_859_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state140 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state140 : signal is "none";
    signal icmp_ln371_fu_1020_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal reg_378 : STD_LOGIC_VECTOR (23 downto 0);
    signal reg_384 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_Result_17_reg_1190 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln574_fu_458_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal trunc_ln574_reg_1195 : STD_LOGIC_VECTOR (51 downto 0);
    signal icmp_ln580_fu_462_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln580_reg_1200 : STD_LOGIC_VECTOR (0 downto 0);
    signal F2_fu_468_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal F2_reg_1207 : STD_LOGIC_VECTOR (11 downto 0);
    signal man_V_2_fu_526_p3 : STD_LOGIC_VECTOR (53 downto 0);
    signal man_V_2_reg_1215 : STD_LOGIC_VECTOR (53 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal sh_amt_fu_548_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal sh_amt_reg_1220 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln591_fu_556_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln591_reg_1226 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln592_fu_561_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal trunc_ln592_reg_1231 : STD_LOGIC_VECTOR (23 downto 0);
    signal icmp_ln612_fu_565_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln612_reg_1237 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln590_fu_582_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln590_reg_1242 : STD_LOGIC_VECTOR (0 downto 0);
    signal s2_V_fu_676_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal s2_V_reg_1247 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal grp_fu_1030_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal total_reg_1253 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ret_V_53_fu_692_p2 : STD_LOGIC_VECTOR (26 downto 0);
    signal ret_V_53_reg_1269 : STD_LOGIC_VECTOR (26 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal r_V_47_fu_704_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal r_V_47_reg_1274 : STD_LOGIC_VECTOR (50 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal grp_fu_1037_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal r_V_reg_1279 : STD_LOGIC_VECTOR (47 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal tmp_104_reg_1285 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal p_Result_s_fu_735_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_reg_1301 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_729_p2 : STD_LOGIC_VECTOR (96 downto 0);
    signal mul_ln1201_reg_1306 : STD_LOGIC_VECTOR (96 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal tmp_106_reg_1311 : STD_LOGIC_VECTOR (41 downto 0);
    signal tmp_reg_1316 : STD_LOGIC_VECTOR (27 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal trunc_ln902_fu_802_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal trunc_ln902_reg_1321 : STD_LOGIC_VECTOR (19 downto 0);
    signal ret_V_fu_828_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal ret_V_reg_1326 : STD_LOGIC_VECTOR (28 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal zext_ln882_fu_845_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal zext_ln882_reg_1331 : STD_LOGIC_VECTOR (30 downto 0);
    signal j_7_reg_1336 : STD_LOGIC_VECTOR (1 downto 0);
    signal sub_ln712_1_fu_876_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal sub_ln712_1_reg_1345 : STD_LOGIC_VECTOR (23 downto 0);
    signal sub_ln712_2_fu_882_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal sub_ln712_2_reg_1350 : STD_LOGIC_VECTOR (23 downto 0);
    signal icmp_ln1552_fu_892_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1552_reg_1360 : STD_LOGIC_VECTOR (0 downto 0);
    signal maxValue_V_load_6_reg_1364 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal maxValue_V_load_7_reg_1369 : STD_LOGIC_VECTOR (23 downto 0);
    signal maxValue_V_load_8_reg_1374 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_CS_fsm_state57 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state57 : signal is "none";
    signal icmp_ln1552_1_fu_960_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1552_1_reg_1384 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state98 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state98 : signal is "none";
    signal icmp_ln1552_2_fu_980_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1552_2_reg_1393 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_61_reg_1404 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state139 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state139 : signal is "none";
    signal grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_319_3_fu_280_ap_start : STD_LOGIC;
    signal grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_319_3_fu_280_ap_done : STD_LOGIC;
    signal grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_319_3_fu_280_ap_idle : STD_LOGIC;
    signal grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_319_3_fu_280_ap_ready : STD_LOGIC;
    signal grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_319_3_fu_280_hist_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_319_3_fu_280_hist_ce0 : STD_LOGIC;
    signal grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_319_3_fu_280_hist1_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_319_3_fu_280_hist1_ce0 : STD_LOGIC;
    signal grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_319_3_fu_280_hist2_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_319_3_fu_280_hist2_ce0 : STD_LOGIC;
    signal grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_319_3_fu_280_minValue_V_0_o : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_319_3_fu_280_minValue_V_0_o_ap_vld : STD_LOGIC;
    signal grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_319_3_fu_280_minValue_V_1_o : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_319_3_fu_280_minValue_V_1_o_ap_vld : STD_LOGIC;
    signal grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_319_3_fu_280_minValue_V_2_o : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_319_3_fu_280_minValue_V_2_o_ap_vld : STD_LOGIC;
    signal grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_319_3_fu_280_minValue_V_load_253_out : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_319_3_fu_280_minValue_V_load_253_out_ap_vld : STD_LOGIC;
    signal grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_319_3_fu_280_minValue_V_load_147_out : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_319_3_fu_280_minValue_V_load_147_out_ap_vld : STD_LOGIC;
    signal grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_319_3_fu_280_minValue_V_load41_out : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_319_3_fu_280_minValue_V_load41_out_ap_vld : STD_LOGIC;
    signal grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_329_4_fu_301_ap_start : STD_LOGIC;
    signal grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_329_4_fu_301_ap_done : STD_LOGIC;
    signal grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_329_4_fu_301_ap_idle : STD_LOGIC;
    signal grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_329_4_fu_301_ap_ready : STD_LOGIC;
    signal grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_329_4_fu_301_hist_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_329_4_fu_301_hist_ce0 : STD_LOGIC;
    signal grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_329_4_fu_301_hist1_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_329_4_fu_301_hist1_ce0 : STD_LOGIC;
    signal grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_329_4_fu_301_hist2_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_329_4_fu_301_hist2_ce0 : STD_LOGIC;
    signal grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_329_4_fu_301_maxValue_V_0_o : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_329_4_fu_301_maxValue_V_0_o_ap_vld : STD_LOGIC;
    signal grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_329_4_fu_301_maxValue_V_1_o : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_329_4_fu_301_maxValue_V_1_o_ap_vld : STD_LOGIC;
    signal grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_329_4_fu_301_maxValue_V_2_o : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_329_4_fu_301_maxValue_V_2_o_ap_vld : STD_LOGIC;
    signal grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_329_4_fu_301_maxValue_V_load_250_out : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_329_4_fu_301_maxValue_V_load_250_out_ap_vld : STD_LOGIC;
    signal grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_329_4_fu_301_maxValue_V_load_144_out : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_329_4_fu_301_maxValue_V_load_144_out_ap_vld : STD_LOGIC;
    signal grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_329_4_fu_301_maxValue_V_load38_out : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_329_4_fu_301_maxValue_V_load38_out_ap_vld : STD_LOGIC;
    signal grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_Col_Loop1_fu_323_ap_start : STD_LOGIC;
    signal grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_Col_Loop1_fu_323_ap_done : STD_LOGIC;
    signal grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_Col_Loop1_fu_323_ap_idle : STD_LOGIC;
    signal grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_Col_Loop1_fu_323_ap_ready : STD_LOGIC;
    signal grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_Col_Loop1_fu_323_impop_41_read : STD_LOGIC;
    signal grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_Col_Loop1_fu_323_ltm_in_4199_din : STD_LOGIC_VECTOR (95 downto 0);
    signal grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_Col_Loop1_fu_323_ltm_in_4199_write : STD_LOGIC;
    signal inv_val_V_fu_952_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal inv_val_V_1_reg_244 : STD_LOGIC_VECTOR (31 downto 0);
    signal inv_val_V_2_fu_972_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal inv_val_V_3_reg_256 : STD_LOGIC_VECTOR (31 downto 0);
    signal inv_val_V_4_fu_992_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal inv_val_V_5_reg_268 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_319_3_fu_280_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal minValue_V_0_fu_198 : STD_LOGIC_VECTOR (23 downto 0);
    signal minValue_V_1_fu_202 : STD_LOGIC_VECTOR (23 downto 0);
    signal minValue_V_2_fu_206 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_329_4_fu_301_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal maxValue_V_0_fu_210 : STD_LOGIC_VECTOR (23 downto 0);
    signal maxValue_V_1_fu_214 : STD_LOGIC_VECTOR (23 downto 0);
    signal maxValue_V_2_fu_218 : STD_LOGIC_VECTOR (23 downto 0);
    signal maxValue_V_load_250_loc_fu_182 : STD_LOGIC_VECTOR (23 downto 0);
    signal maxValue_V_load_144_loc_fu_178 : STD_LOGIC_VECTOR (23 downto 0);
    signal maxValue_V_load38_loc_fu_174 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_Col_Loop1_fu_323_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state141 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state141 : signal is "none";
    signal j_fu_146 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln303_fu_853_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal maxValue_V_load_fu_150 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal minValue_V_load_fu_154 : STD_LOGIC_VECTOR (23 downto 0);
    signal maxValue_V_load_1_fu_158 : STD_LOGIC_VECTOR (23 downto 0);
    signal minValue_V_load_1_fu_162 : STD_LOGIC_VECTOR (23 downto 0);
    signal maxValue_V_load_2_fu_166 : STD_LOGIC_VECTOR (23 downto 0);
    signal minValue_V_load_2_fu_170 : STD_LOGIC_VECTOR (23 downto 0);
    signal row_V_fu_222 : STD_LOGIC_VECTOR (11 downto 0);
    signal row_V_4_fu_1014_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal d_fu_341_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ireg_fu_428_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal exp_tmp_fu_444_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln564_fu_432_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal zext_ln494_fu_454_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Result_18_fu_509_p3 : STD_LOGIC_VECTOR (52 downto 0);
    signal zext_ln578_fu_516_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal man_V_1_fu_520_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal icmp_ln590_fu_533_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln590_fu_538_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln590_fu_543_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal or_ln591_fu_571_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln591_fu_576_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln590_fu_588_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln595_fu_596_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal ashr_ln595_fu_600_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal bitcast_ln709_fu_609_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_103_fu_612_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln594_fu_591_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln595_fu_605_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal select_ln597_fu_620_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln590cast_fu_636_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal shl_ln613_fu_640_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal xor_ln580_fu_652_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln591_fu_657_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln612_fu_645_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal select_ln594_fu_628_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal select_ln591_fu_662_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal select_ln590_fu_669_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln1246_fu_689_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal r_V_47_fu_704_p0 : STD_LOGIC_VECTOR (26 downto 0);
    signal r_V_47_fu_704_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_720_p0 : STD_LOGIC_VECTOR (50 downto 0);
    signal grp_fu_720_p1 : STD_LOGIC_VECTOR (52 downto 0);
    signal grp_fu_729_p1 : STD_LOGIC_VECTOR (49 downto 0);
    signal sub_ln1201_fu_750_p2 : STD_LOGIC_VECTOR (96 downto 0);
    signal tmp_105_fu_755_p4 : STD_LOGIC_VECTOR (41 downto 0);
    signal sext_ln1201_1_fu_765_p1 : STD_LOGIC_VECTOR (47 downto 0);
    signal sext_ln1201_2_fu_769_p1 : STD_LOGIC_VECTOR (47 downto 0);
    signal select_ln1201_fu_772_p3 : STD_LOGIC_VECTOR (47 downto 0);
    signal sub_ln1201_1_fu_779_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal select_ln1201_1_fu_785_p3 : STD_LOGIC_VECTOR (47 downto 0);
    signal sext_ln901_fu_806_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal icmp_ln902_fu_809_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln870_fu_814_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal select_ln901_fu_820_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_720_p2 : STD_LOGIC_VECTOR (102 downto 0);
    signal tmp_107_fu_835_p4 : STD_LOGIC_VECTOR (24 downto 0);
    signal sub_ln712_fu_870_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_898_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_966_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_986_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1030_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1030_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1037_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_898_ap_start : STD_LOGIC;
    signal grp_fu_898_ap_done : STD_LOGIC;
    signal grp_fu_966_ap_start : STD_LOGIC;
    signal grp_fu_966_ap_done : STD_LOGIC;
    signal grp_fu_986_ap_start : STD_LOGIC;
    signal grp_fu_986_ap_done : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (140 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal ap_ST_fsm_state14_blk : STD_LOGIC;
    signal ap_ST_fsm_state15_blk : STD_LOGIC;
    signal ap_ST_fsm_state16_blk : STD_LOGIC;
    signal ap_ST_fsm_state17_blk : STD_LOGIC;
    signal ap_ST_fsm_state18_blk : STD_LOGIC;
    signal ap_ST_fsm_state19_blk : STD_LOGIC;
    signal ap_ST_fsm_state20_blk : STD_LOGIC;
    signal ap_ST_fsm_state21_blk : STD_LOGIC;
    signal ap_ST_fsm_state22_blk : STD_LOGIC;
    signal ap_ST_fsm_state23_blk : STD_LOGIC;
    signal ap_ST_fsm_state24_blk : STD_LOGIC;
    signal ap_ST_fsm_state25_blk : STD_LOGIC;
    signal ap_ST_fsm_state26_blk : STD_LOGIC;
    signal ap_ST_fsm_state27_blk : STD_LOGIC;
    signal ap_ST_fsm_state28_blk : STD_LOGIC;
    signal ap_ST_fsm_state29_blk : STD_LOGIC;
    signal ap_ST_fsm_state30_blk : STD_LOGIC;
    signal ap_ST_fsm_state31_blk : STD_LOGIC;
    signal ap_ST_fsm_state32_blk : STD_LOGIC;
    signal ap_ST_fsm_state33_blk : STD_LOGIC;
    signal ap_ST_fsm_state34_blk : STD_LOGIC;
    signal ap_ST_fsm_state35_blk : STD_LOGIC;
    signal ap_ST_fsm_state36_blk : STD_LOGIC;
    signal ap_ST_fsm_state37_blk : STD_LOGIC;
    signal ap_ST_fsm_state38_blk : STD_LOGIC;
    signal ap_ST_fsm_state39_blk : STD_LOGIC;
    signal ap_ST_fsm_state40_blk : STD_LOGIC;
    signal ap_ST_fsm_state41_blk : STD_LOGIC;
    signal ap_ST_fsm_state42_blk : STD_LOGIC;
    signal ap_ST_fsm_state43_blk : STD_LOGIC;
    signal ap_ST_fsm_state44_blk : STD_LOGIC;
    signal ap_ST_fsm_state45_blk : STD_LOGIC;
    signal ap_ST_fsm_state46_blk : STD_LOGIC;
    signal ap_ST_fsm_state47_blk : STD_LOGIC;
    signal ap_ST_fsm_state48_blk : STD_LOGIC;
    signal ap_ST_fsm_state49_blk : STD_LOGIC;
    signal ap_ST_fsm_state50_blk : STD_LOGIC;
    signal ap_ST_fsm_state51_blk : STD_LOGIC;
    signal ap_ST_fsm_state52_blk : STD_LOGIC;
    signal ap_ST_fsm_state53_blk : STD_LOGIC;
    signal ap_ST_fsm_state54_blk : STD_LOGIC;
    signal ap_ST_fsm_state55_blk : STD_LOGIC;
    signal ap_ST_fsm_state56_blk : STD_LOGIC;
    signal ap_ST_fsm_state57_blk : STD_LOGIC;
    signal ap_ST_fsm_state58_blk : STD_LOGIC;
    signal ap_ST_fsm_state59_blk : STD_LOGIC;
    signal ap_ST_fsm_state60_blk : STD_LOGIC;
    signal ap_ST_fsm_state61_blk : STD_LOGIC;
    signal ap_ST_fsm_state62_blk : STD_LOGIC;
    signal ap_ST_fsm_state63_blk : STD_LOGIC;
    signal ap_ST_fsm_state64_blk : STD_LOGIC;
    signal ap_ST_fsm_state65_blk : STD_LOGIC;
    signal ap_ST_fsm_state66_blk : STD_LOGIC;
    signal ap_ST_fsm_state67_blk : STD_LOGIC;
    signal ap_ST_fsm_state68_blk : STD_LOGIC;
    signal ap_ST_fsm_state69_blk : STD_LOGIC;
    signal ap_ST_fsm_state70_blk : STD_LOGIC;
    signal ap_ST_fsm_state71_blk : STD_LOGIC;
    signal ap_ST_fsm_state72_blk : STD_LOGIC;
    signal ap_ST_fsm_state73_blk : STD_LOGIC;
    signal ap_ST_fsm_state74_blk : STD_LOGIC;
    signal ap_ST_fsm_state75_blk : STD_LOGIC;
    signal ap_ST_fsm_state76_blk : STD_LOGIC;
    signal ap_ST_fsm_state77_blk : STD_LOGIC;
    signal ap_ST_fsm_state78_blk : STD_LOGIC;
    signal ap_ST_fsm_state79_blk : STD_LOGIC;
    signal ap_ST_fsm_state80_blk : STD_LOGIC;
    signal ap_ST_fsm_state81_blk : STD_LOGIC;
    signal ap_ST_fsm_state82_blk : STD_LOGIC;
    signal ap_ST_fsm_state83_blk : STD_LOGIC;
    signal ap_ST_fsm_state84_blk : STD_LOGIC;
    signal ap_ST_fsm_state85_blk : STD_LOGIC;
    signal ap_ST_fsm_state86_blk : STD_LOGIC;
    signal ap_ST_fsm_state87_blk : STD_LOGIC;
    signal ap_ST_fsm_state88_blk : STD_LOGIC;
    signal ap_ST_fsm_state89_blk : STD_LOGIC;
    signal ap_ST_fsm_state90_blk : STD_LOGIC;
    signal ap_ST_fsm_state91_blk : STD_LOGIC;
    signal ap_ST_fsm_state92_blk : STD_LOGIC;
    signal ap_ST_fsm_state93_blk : STD_LOGIC;
    signal ap_ST_fsm_state94_blk : STD_LOGIC;
    signal ap_ST_fsm_state95_blk : STD_LOGIC;
    signal ap_ST_fsm_state96_blk : STD_LOGIC;
    signal ap_ST_fsm_state97_blk : STD_LOGIC;
    signal ap_ST_fsm_state98_blk : STD_LOGIC;
    signal ap_ST_fsm_state99_blk : STD_LOGIC;
    signal ap_ST_fsm_state100_blk : STD_LOGIC;
    signal ap_ST_fsm_state101_blk : STD_LOGIC;
    signal ap_ST_fsm_state102_blk : STD_LOGIC;
    signal ap_ST_fsm_state103_blk : STD_LOGIC;
    signal ap_ST_fsm_state104_blk : STD_LOGIC;
    signal ap_ST_fsm_state105_blk : STD_LOGIC;
    signal ap_ST_fsm_state106_blk : STD_LOGIC;
    signal ap_ST_fsm_state107_blk : STD_LOGIC;
    signal ap_ST_fsm_state108_blk : STD_LOGIC;
    signal ap_ST_fsm_state109_blk : STD_LOGIC;
    signal ap_ST_fsm_state110_blk : STD_LOGIC;
    signal ap_ST_fsm_state111_blk : STD_LOGIC;
    signal ap_ST_fsm_state112_blk : STD_LOGIC;
    signal ap_ST_fsm_state113_blk : STD_LOGIC;
    signal ap_ST_fsm_state114_blk : STD_LOGIC;
    signal ap_ST_fsm_state115_blk : STD_LOGIC;
    signal ap_ST_fsm_state116_blk : STD_LOGIC;
    signal ap_ST_fsm_state117_blk : STD_LOGIC;
    signal ap_ST_fsm_state118_blk : STD_LOGIC;
    signal ap_ST_fsm_state119_blk : STD_LOGIC;
    signal ap_ST_fsm_state120_blk : STD_LOGIC;
    signal ap_ST_fsm_state121_blk : STD_LOGIC;
    signal ap_ST_fsm_state122_blk : STD_LOGIC;
    signal ap_ST_fsm_state123_blk : STD_LOGIC;
    signal ap_ST_fsm_state124_blk : STD_LOGIC;
    signal ap_ST_fsm_state125_blk : STD_LOGIC;
    signal ap_ST_fsm_state126_blk : STD_LOGIC;
    signal ap_ST_fsm_state127_blk : STD_LOGIC;
    signal ap_ST_fsm_state128_blk : STD_LOGIC;
    signal ap_ST_fsm_state129_blk : STD_LOGIC;
    signal ap_ST_fsm_state130_blk : STD_LOGIC;
    signal ap_ST_fsm_state131_blk : STD_LOGIC;
    signal ap_ST_fsm_state132_blk : STD_LOGIC;
    signal ap_ST_fsm_state133_blk : STD_LOGIC;
    signal ap_ST_fsm_state134_blk : STD_LOGIC;
    signal ap_ST_fsm_state135_blk : STD_LOGIC;
    signal ap_ST_fsm_state136_blk : STD_LOGIC;
    signal ap_ST_fsm_state137_blk : STD_LOGIC;
    signal ap_ST_fsm_state138_blk : STD_LOGIC;
    signal ap_ST_fsm_state139_blk : STD_LOGIC;
    signal ap_ST_fsm_state140_blk : STD_LOGIC;
    signal ap_ST_fsm_state141_blk : STD_LOGIC;
    signal grp_fu_1030_p00 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_1030_p10 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_1037_p10 : STD_LOGIC_VECTOR (47 downto 0);
    signal grp_fu_720_p00 : STD_LOGIC_VECTOR (102 downto 0);
    signal r_V_47_fu_704_p00 : STD_LOGIC_VECTOR (50 downto 0);
    signal r_V_47_fu_704_p10 : STD_LOGIC_VECTOR (50 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component ISPPipeline_accel_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_319_3 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        minValue_V_load_2 : IN STD_LOGIC_VECTOR (23 downto 0);
        minValue_V_load_1 : IN STD_LOGIC_VECTOR (23 downto 0);
        minValue_V_load : IN STD_LOGIC_VECTOR (23 downto 0);
        hist_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        hist_ce0 : OUT STD_LOGIC;
        hist_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        hist1_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        hist1_ce0 : OUT STD_LOGIC;
        hist1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        hist2_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        hist2_ce0 : OUT STD_LOGIC;
        hist2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        j : IN STD_LOGIC_VECTOR (1 downto 0);
        conv_i_i1068 : IN STD_LOGIC_VECTOR (28 downto 0);
        minValue_V_0_i : IN STD_LOGIC_VECTOR (23 downto 0);
        minValue_V_0_o : OUT STD_LOGIC_VECTOR (23 downto 0);
        minValue_V_0_o_ap_vld : OUT STD_LOGIC;
        minValue_V_1_i : IN STD_LOGIC_VECTOR (23 downto 0);
        minValue_V_1_o : OUT STD_LOGIC_VECTOR (23 downto 0);
        minValue_V_1_o_ap_vld : OUT STD_LOGIC;
        minValue_V_2_i : IN STD_LOGIC_VECTOR (23 downto 0);
        minValue_V_2_o : OUT STD_LOGIC_VECTOR (23 downto 0);
        minValue_V_2_o_ap_vld : OUT STD_LOGIC;
        minValue_V_load_253_out : OUT STD_LOGIC_VECTOR (23 downto 0);
        minValue_V_load_253_out_ap_vld : OUT STD_LOGIC;
        minValue_V_load_147_out : OUT STD_LOGIC_VECTOR (23 downto 0);
        minValue_V_load_147_out_ap_vld : OUT STD_LOGIC;
        minValue_V_load41_out : OUT STD_LOGIC_VECTOR (23 downto 0);
        minValue_V_load41_out_ap_vld : OUT STD_LOGIC );
    end component;


    component ISPPipeline_accel_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_329_4 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        maxValue_V_load_2 : IN STD_LOGIC_VECTOR (23 downto 0);
        maxValue_V_load_1 : IN STD_LOGIC_VECTOR (23 downto 0);
        maxValue_V_load : IN STD_LOGIC_VECTOR (23 downto 0);
        zext_ln285 : IN STD_LOGIC_VECTOR (23 downto 0);
        hist_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        hist_ce0 : OUT STD_LOGIC;
        hist_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        hist1_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        hist1_ce0 : OUT STD_LOGIC;
        hist1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        hist2_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        hist2_ce0 : OUT STD_LOGIC;
        hist2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        j : IN STD_LOGIC_VECTOR (1 downto 0);
        conv_i_i988 : IN STD_LOGIC_VECTOR (30 downto 0);
        maxValue_V_0_i : IN STD_LOGIC_VECTOR (23 downto 0);
        maxValue_V_0_o : OUT STD_LOGIC_VECTOR (23 downto 0);
        maxValue_V_0_o_ap_vld : OUT STD_LOGIC;
        maxValue_V_1_i : IN STD_LOGIC_VECTOR (23 downto 0);
        maxValue_V_1_o : OUT STD_LOGIC_VECTOR (23 downto 0);
        maxValue_V_1_o_ap_vld : OUT STD_LOGIC;
        maxValue_V_2_i : IN STD_LOGIC_VECTOR (23 downto 0);
        maxValue_V_2_o : OUT STD_LOGIC_VECTOR (23 downto 0);
        maxValue_V_2_o_ap_vld : OUT STD_LOGIC;
        maxValue_V_load_250_out : OUT STD_LOGIC_VECTOR (23 downto 0);
        maxValue_V_load_250_out_ap_vld : OUT STD_LOGIC;
        maxValue_V_load_144_out : OUT STD_LOGIC_VECTOR (23 downto 0);
        maxValue_V_load_144_out_ap_vld : OUT STD_LOGIC;
        maxValue_V_load38_out : OUT STD_LOGIC_VECTOR (23 downto 0);
        maxValue_V_load38_out_ap_vld : OUT STD_LOGIC );
    end component;


    component ISPPipeline_accel_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_Col_Loop1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        impop_41_dout : IN STD_LOGIC_VECTOR (95 downto 0);
        impop_41_empty_n : IN STD_LOGIC;
        impop_41_read : OUT STD_LOGIC;
        ltm_in_4199_din : OUT STD_LOGIC_VECTOR (95 downto 0);
        ltm_in_4199_full_n : IN STD_LOGIC;
        ltm_in_4199_write : OUT STD_LOGIC;
        tmp_61 : IN STD_LOGIC_VECTOR (10 downto 0);
        minValue_V_load : IN STD_LOGIC_VECTOR (23 downto 0);
        conv7_i99 : IN STD_LOGIC_VECTOR (31 downto 0);
        minValue_V_load_1 : IN STD_LOGIC_VECTOR (23 downto 0);
        conv7_i99_1 : IN STD_LOGIC_VECTOR (31 downto 0);
        minValue_V_load_2 : IN STD_LOGIC_VECTOR (23 downto 0);
        conv7_i99_2 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component ISPPipeline_accel_fpext_32ns_64_1_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component ISPPipeline_accel_mul_27ns_24ns_51_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (26 downto 0);
        din1 : IN STD_LOGIC_VECTOR (23 downto 0);
        dout : OUT STD_LOGIC_VECTOR (50 downto 0) );
    end component;


    component ISPPipeline_accel_mul_51ns_53ns_103_5_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (50 downto 0);
        din1 : IN STD_LOGIC_VECTOR (52 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (102 downto 0) );
    end component;


    component ISPPipeline_accel_mul_48s_50ns_97_2_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (47 downto 0);
        din1 : IN STD_LOGIC_VECTOR (49 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (96 downto 0) );
    end component;


    component ISPPipeline_accel_sdiv_38ns_24s_32_42_seq_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        start : IN STD_LOGIC;
        done : OUT STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (37 downto 0);
        din1 : IN STD_LOGIC_VECTOR (23 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component ISPPipeline_accel_mul_mul_12ns_12ns_24_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (11 downto 0);
        din1 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (23 downto 0) );
    end component;


    component ISPPipeline_accel_mul_mul_24s_24ns_48_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (23 downto 0);
        din1 : IN STD_LOGIC_VECTOR (23 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (47 downto 0) );
    end component;



begin
    grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_319_3_fu_280 : component ISPPipeline_accel_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_319_3
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_319_3_fu_280_ap_start,
        ap_done => grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_319_3_fu_280_ap_done,
        ap_idle => grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_319_3_fu_280_ap_idle,
        ap_ready => grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_319_3_fu_280_ap_ready,
        minValue_V_load_2 => reg_384,
        minValue_V_load_1 => reg_378,
        minValue_V_load => reg_372,
        hist_address0 => grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_319_3_fu_280_hist_address0,
        hist_ce0 => grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_319_3_fu_280_hist_ce0,
        hist_q0 => hist_q0,
        hist1_address0 => grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_319_3_fu_280_hist1_address0,
        hist1_ce0 => grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_319_3_fu_280_hist1_ce0,
        hist1_q0 => hist1_q0,
        hist2_address0 => grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_319_3_fu_280_hist2_address0,
        hist2_ce0 => grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_319_3_fu_280_hist2_ce0,
        hist2_q0 => hist2_q0,
        j => j_7_reg_1336,
        conv_i_i1068 => ret_V_reg_1326,
        minValue_V_0_i => minValue_V_0_fu_198,
        minValue_V_0_o => grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_319_3_fu_280_minValue_V_0_o,
        minValue_V_0_o_ap_vld => grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_319_3_fu_280_minValue_V_0_o_ap_vld,
        minValue_V_1_i => minValue_V_1_fu_202,
        minValue_V_1_o => grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_319_3_fu_280_minValue_V_1_o,
        minValue_V_1_o_ap_vld => grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_319_3_fu_280_minValue_V_1_o_ap_vld,
        minValue_V_2_i => minValue_V_2_fu_206,
        minValue_V_2_o => grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_319_3_fu_280_minValue_V_2_o,
        minValue_V_2_o_ap_vld => grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_319_3_fu_280_minValue_V_2_o_ap_vld,
        minValue_V_load_253_out => grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_319_3_fu_280_minValue_V_load_253_out,
        minValue_V_load_253_out_ap_vld => grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_319_3_fu_280_minValue_V_load_253_out_ap_vld,
        minValue_V_load_147_out => grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_319_3_fu_280_minValue_V_load_147_out,
        minValue_V_load_147_out_ap_vld => grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_319_3_fu_280_minValue_V_load_147_out_ap_vld,
        minValue_V_load41_out => grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_319_3_fu_280_minValue_V_load41_out,
        minValue_V_load41_out_ap_vld => grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_319_3_fu_280_minValue_V_load41_out_ap_vld);

    grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_329_4_fu_301 : component ISPPipeline_accel_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_329_4
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_329_4_fu_301_ap_start,
        ap_done => grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_329_4_fu_301_ap_done,
        ap_idle => grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_329_4_fu_301_ap_idle,
        ap_ready => grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_329_4_fu_301_ap_ready,
        maxValue_V_load_2 => maxValue_V_load_8_reg_1374,
        maxValue_V_load_1 => maxValue_V_load_7_reg_1369,
        maxValue_V_load => maxValue_V_load_6_reg_1364,
        zext_ln285 => total_reg_1253,
        hist_address0 => grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_329_4_fu_301_hist_address0,
        hist_ce0 => grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_329_4_fu_301_hist_ce0,
        hist_q0 => hist_q0,
        hist1_address0 => grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_329_4_fu_301_hist1_address0,
        hist1_ce0 => grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_329_4_fu_301_hist1_ce0,
        hist1_q0 => hist1_q0,
        hist2_address0 => grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_329_4_fu_301_hist2_address0,
        hist2_ce0 => grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_329_4_fu_301_hist2_ce0,
        hist2_q0 => hist2_q0,
        j => j_7_reg_1336,
        conv_i_i988 => zext_ln882_reg_1331,
        maxValue_V_0_i => maxValue_V_0_fu_210,
        maxValue_V_0_o => grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_329_4_fu_301_maxValue_V_0_o,
        maxValue_V_0_o_ap_vld => grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_329_4_fu_301_maxValue_V_0_o_ap_vld,
        maxValue_V_1_i => maxValue_V_1_fu_214,
        maxValue_V_1_o => grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_329_4_fu_301_maxValue_V_1_o,
        maxValue_V_1_o_ap_vld => grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_329_4_fu_301_maxValue_V_1_o_ap_vld,
        maxValue_V_2_i => maxValue_V_2_fu_218,
        maxValue_V_2_o => grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_329_4_fu_301_maxValue_V_2_o,
        maxValue_V_2_o_ap_vld => grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_329_4_fu_301_maxValue_V_2_o_ap_vld,
        maxValue_V_load_250_out => grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_329_4_fu_301_maxValue_V_load_250_out,
        maxValue_V_load_250_out_ap_vld => grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_329_4_fu_301_maxValue_V_load_250_out_ap_vld,
        maxValue_V_load_144_out => grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_329_4_fu_301_maxValue_V_load_144_out,
        maxValue_V_load_144_out_ap_vld => grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_329_4_fu_301_maxValue_V_load_144_out_ap_vld,
        maxValue_V_load38_out => grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_329_4_fu_301_maxValue_V_load38_out,
        maxValue_V_load38_out_ap_vld => grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_329_4_fu_301_maxValue_V_load38_out_ap_vld);

    grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_Col_Loop1_fu_323 : component ISPPipeline_accel_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_Col_Loop1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_Col_Loop1_fu_323_ap_start,
        ap_done => grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_Col_Loop1_fu_323_ap_done,
        ap_idle => grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_Col_Loop1_fu_323_ap_idle,
        ap_ready => grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_Col_Loop1_fu_323_ap_ready,
        impop_41_dout => impop_41_dout,
        impop_41_empty_n => impop_41_empty_n,
        impop_41_read => grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_Col_Loop1_fu_323_impop_41_read,
        ltm_in_4199_din => grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_Col_Loop1_fu_323_ltm_in_4199_din,
        ltm_in_4199_full_n => ltm_in_4199_full_n,
        ltm_in_4199_write => grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_Col_Loop1_fu_323_ltm_in_4199_write,
        tmp_61 => tmp_61_reg_1404,
        minValue_V_load => reg_372,
        conv7_i99 => inv_val_V_1_reg_244,
        minValue_V_load_1 => reg_378,
        conv7_i99_1 => inv_val_V_3_reg_256,
        minValue_V_load_2 => reg_384,
        conv7_i99_2 => inv_val_V_5_reg_268);

    fpext_32ns_64_1_no_dsp_1_U501 : component ISPPipeline_accel_fpext_32ns_64_1_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => p,
        dout => d_fu_341_p1);

    mul_27ns_24ns_51_1_1_U502 : component ISPPipeline_accel_mul_27ns_24ns_51_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 27,
        din1_WIDTH => 24,
        dout_WIDTH => 51)
    port map (
        din0 => r_V_47_fu_704_p0,
        din1 => r_V_47_fu_704_p1,
        dout => r_V_47_fu_704_p2);

    mul_51ns_53ns_103_5_1_U503 : component ISPPipeline_accel_mul_51ns_53ns_103_5_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 51,
        din1_WIDTH => 53,
        dout_WIDTH => 103)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_720_p0,
        din1 => grp_fu_720_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_720_p2);

    mul_48s_50ns_97_2_1_U504 : component ISPPipeline_accel_mul_48s_50ns_97_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 48,
        din1_WIDTH => 50,
        dout_WIDTH => 97)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => r_V_reg_1279,
        din1 => grp_fu_729_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_729_p2);

    sdiv_38ns_24s_32_42_seq_1_U505 : component ISPPipeline_accel_sdiv_38ns_24s_32_42_seq_1
    generic map (
        ID => 1,
        NUM_STAGE => 42,
        din0_WIDTH => 38,
        din1_WIDTH => 24,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        start => grp_fu_898_ap_start,
        done => grp_fu_898_ap_done,
        din0 => ap_const_lv38_1000000000,
        din1 => sub_ln712_fu_870_p2,
        ce => ap_const_logic_1,
        dout => grp_fu_898_p2);

    sdiv_38ns_24s_32_42_seq_1_U506 : component ISPPipeline_accel_sdiv_38ns_24s_32_42_seq_1
    generic map (
        ID => 1,
        NUM_STAGE => 42,
        din0_WIDTH => 38,
        din1_WIDTH => 24,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        start => grp_fu_966_ap_start,
        done => grp_fu_966_ap_done,
        din0 => ap_const_lv38_1000000000,
        din1 => sub_ln712_1_reg_1345,
        ce => ap_const_logic_1,
        dout => grp_fu_966_p2);

    sdiv_38ns_24s_32_42_seq_1_U507 : component ISPPipeline_accel_sdiv_38ns_24s_32_42_seq_1
    generic map (
        ID => 1,
        NUM_STAGE => 42,
        din0_WIDTH => 38,
        din1_WIDTH => 24,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        start => grp_fu_986_ap_start,
        done => grp_fu_986_ap_done,
        din0 => ap_const_lv38_1000000000,
        din1 => sub_ln712_2_reg_1350,
        ce => ap_const_logic_1,
        dout => grp_fu_986_p2);

    mul_mul_12ns_12ns_24_4_1_U508 : component ISPPipeline_accel_mul_mul_12ns_12ns_24_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 12,
        din1_WIDTH => 12,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1030_p0,
        din1 => grp_fu_1030_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_1030_p2);

    mul_mul_24s_24ns_48_4_1_U509 : component ISPPipeline_accel_mul_mul_24s_24ns_48_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 24,
        din1_WIDTH => 24,
        dout_WIDTH => 48)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => s2_V_reg_1247,
        din1 => grp_fu_1037_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_1037_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_Col_Loop1_fu_323_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_Col_Loop1_fu_323_ap_start_reg <= ap_const_logic_0;
            else
                if (((icmp_ln371_fu_1020_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state140))) then 
                    grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_Col_Loop1_fu_323_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_Col_Loop1_fu_323_ap_ready = ap_const_logic_1)) then 
                    grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_Col_Loop1_fu_323_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_319_3_fu_280_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_319_3_fu_280_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state12) and (icmp_ln303_fu_859_p2 = ap_const_lv1_0))) then 
                    grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_319_3_fu_280_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_319_3_fu_280_ap_ready = ap_const_logic_1)) then 
                    grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_319_3_fu_280_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_329_4_fu_301_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_329_4_fu_301_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
                    grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_329_4_fu_301_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_329_4_fu_301_ap_ready = ap_const_logic_1)) then 
                    grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_329_4_fu_301_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    j_fu_146_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                j_fu_146 <= ap_const_lv2_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state12) and (icmp_ln303_fu_859_p2 = ap_const_lv1_0))) then 
                j_fu_146 <= add_ln303_fu_853_p2;
            end if; 
        end if;
    end process;

    maxValue_V_0_fu_210_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                maxValue_V_0_fu_210 <= ap_const_lv24_3FFFE0;
            elsif (((grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_329_4_fu_301_maxValue_V_0_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
                maxValue_V_0_fu_210 <= grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_329_4_fu_301_maxValue_V_0_o;
            end if; 
        end if;
    end process;

    maxValue_V_1_fu_214_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                maxValue_V_1_fu_214 <= ap_const_lv24_3FFFE0;
            elsif (((grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_329_4_fu_301_maxValue_V_1_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
                maxValue_V_1_fu_214 <= grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_329_4_fu_301_maxValue_V_1_o;
            end if; 
        end if;
    end process;

    maxValue_V_2_fu_218_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                maxValue_V_2_fu_218 <= ap_const_lv24_3FFFE0;
            elsif (((grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_329_4_fu_301_maxValue_V_2_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
                maxValue_V_2_fu_218 <= grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_329_4_fu_301_maxValue_V_2_o;
            end if; 
        end if;
    end process;

    maxValue_V_load_1_fu_158_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                maxValue_V_load_1_fu_158 <= ap_const_lv24_3FFFE0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
                maxValue_V_load_1_fu_158 <= maxValue_V_load_144_loc_fu_178;
            end if; 
        end if;
    end process;

    maxValue_V_load_2_fu_166_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                maxValue_V_load_2_fu_166 <= ap_const_lv24_3FFFE0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
                maxValue_V_load_2_fu_166 <= maxValue_V_load_250_loc_fu_182;
            end if; 
        end if;
    end process;

    maxValue_V_load_fu_150_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                maxValue_V_load_fu_150 <= ap_const_lv24_3FFFE0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
                maxValue_V_load_fu_150 <= maxValue_V_load38_loc_fu_174;
            end if; 
        end if;
    end process;

    minValue_V_0_fu_198_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                minValue_V_0_fu_198 <= ap_const_lv24_FFFFE0;
            elsif (((grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_319_3_fu_280_minValue_V_0_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state13))) then 
                minValue_V_0_fu_198 <= grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_319_3_fu_280_minValue_V_0_o;
            end if; 
        end if;
    end process;

    minValue_V_1_fu_202_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                minValue_V_1_fu_202 <= ap_const_lv24_FFFFE0;
            elsif (((grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_319_3_fu_280_minValue_V_1_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state13))) then 
                minValue_V_1_fu_202 <= grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_319_3_fu_280_minValue_V_1_o;
            end if; 
        end if;
    end process;

    minValue_V_2_fu_206_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                minValue_V_2_fu_206 <= ap_const_lv24_FFFFE0;
            elsif (((grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_319_3_fu_280_minValue_V_2_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state13))) then 
                minValue_V_2_fu_206 <= grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_319_3_fu_280_minValue_V_2_o;
            end if; 
        end if;
    end process;

    minValue_V_load_1_fu_162_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                minValue_V_load_1_fu_162 <= ap_const_lv24_FFFFE0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
                minValue_V_load_1_fu_162 <= grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_319_3_fu_280_minValue_V_load_147_out;
            end if; 
        end if;
    end process;

    minValue_V_load_2_fu_170_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                minValue_V_load_2_fu_170 <= ap_const_lv24_FFFFE0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
                minValue_V_load_2_fu_170 <= grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_319_3_fu_280_minValue_V_load_253_out;
            end if; 
        end if;
    end process;

    minValue_V_load_fu_154_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                minValue_V_load_fu_154 <= ap_const_lv24_FFFFE0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
                minValue_V_load_fu_154 <= grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_319_3_fu_280_minValue_V_load41_out;
            end if; 
        end if;
    end process;

    row_V_fu_222_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state139)) then 
                row_V_fu_222 <= ap_const_lv12_0;
            elsif (((icmp_ln371_fu_1020_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state140))) then 
                row_V_fu_222 <= row_V_4_fu_1014_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                F2_reg_1207 <= F2_fu_468_p2;
                icmp_ln580_reg_1200 <= icmp_ln580_fu_462_p2;
                p_Result_17_reg_1190 <= ireg_fu_428_p1(63 downto 63);
                trunc_ln574_reg_1195 <= trunc_ln574_fu_458_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln580_reg_1200 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                and_ln590_reg_1242 <= and_ln590_fu_582_p2;
                icmp_ln591_reg_1226 <= icmp_ln591_fu_556_p2;
                icmp_ln612_reg_1237 <= icmp_ln612_fu_565_p2;
                man_V_2_reg_1215 <= man_V_2_fu_526_p3;
                sh_amt_reg_1220 <= sh_amt_fu_548_p3;
                trunc_ln592_reg_1231 <= trunc_ln592_fu_561_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state57)) then
                icmp_ln1552_1_reg_1384 <= icmp_ln1552_1_fu_960_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state98)) then
                icmp_ln1552_2_reg_1393 <= icmp_ln1552_2_fu_980_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state12) and (icmp_ln303_fu_859_p2 = ap_const_lv1_1))) then
                icmp_ln1552_reg_1360 <= icmp_ln1552_fu_892_p2;
                sub_ln712_1_reg_1345 <= sub_ln712_1_fu_876_p2;
                sub_ln712_2_reg_1350 <= sub_ln712_2_fu_882_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1552_reg_1360 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state57))) then
                inv_val_V_1_reg_244 <= inv_val_V_fu_952_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1552_1_reg_1384 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state98))) then
                inv_val_V_3_reg_256 <= inv_val_V_2_fu_972_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1552_2_reg_1393 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state139))) then
                inv_val_V_5_reg_268 <= inv_val_V_4_fu_992_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state12)) then
                j_7_reg_1336 <= j_fu_146;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_329_4_fu_301_maxValue_V_load38_out_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state15))) then
                maxValue_V_load38_loc_fu_174 <= grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_329_4_fu_301_maxValue_V_load38_out;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_329_4_fu_301_maxValue_V_load_144_out_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state15))) then
                maxValue_V_load_144_loc_fu_178 <= grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_329_4_fu_301_maxValue_V_load_144_out;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_329_4_fu_301_maxValue_V_load_250_out_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state15))) then
                maxValue_V_load_250_loc_fu_182 <= grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_329_4_fu_301_maxValue_V_load_250_out;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state14)) then
                maxValue_V_load_6_reg_1364 <= maxValue_V_load_fu_150;
                maxValue_V_load_7_reg_1369 <= maxValue_V_load_1_fu_158;
                maxValue_V_load_8_reg_1374 <= maxValue_V_load_2_fu_166;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then
                mul_ln1201_reg_1306 <= grp_fu_729_p2;
                tmp_106_reg_1311 <= grp_fu_729_p2(96 downto 55);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then
                p_Result_s_reg_1301 <= p_Result_s_fu_735_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                r_V_47_reg_1274 <= r_V_47_fu_704_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then
                r_V_reg_1279 <= grp_fu_1037_p2;
                tmp_104_reg_1285 <= grp_fu_1037_p2(47 downto 47);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((icmp_ln371_fu_1020_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state140)) or ((ap_const_logic_1 = ap_CS_fsm_state12) and (icmp_ln303_fu_859_p2 = ap_const_lv1_0)))) then
                reg_372 <= minValue_V_load_fu_154;
                reg_378 <= minValue_V_load_1_fu_162;
                reg_384 <= minValue_V_load_2_fu_170;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                ret_V_53_reg_1269 <= ret_V_53_fu_692_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then
                ret_V_reg_1326 <= ret_V_fu_828_p3;
                    zext_ln882_reg_1331(24 downto 0) <= zext_ln882_fu_845_p1(24 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                s2_V_reg_1247 <= s2_V_fu_676_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state139)) then
                tmp_61_reg_1404 <= p_read1(11 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then
                tmp_reg_1316 <= select_ln1201_1_fu_785_p3(47 downto 20);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                total_reg_1253 <= grp_fu_1030_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((p_Result_s_reg_1301 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                trunc_ln902_reg_1321 <= trunc_ln902_fu_802_p1;
            end if;
        end if;
    end process;
    zext_ln882_reg_1331(30 downto 25) <= "000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state12, icmp_ln303_fu_859_p2, ap_CS_fsm_state140, icmp_ln371_fu_1020_p2, icmp_ln1552_fu_892_p2, ap_CS_fsm_state57, icmp_ln1552_1_fu_960_p2, ap_CS_fsm_state98, icmp_ln1552_2_fu_980_p2, grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_319_3_fu_280_ap_done, grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_329_4_fu_301_ap_done, grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_Col_Loop1_fu_323_ap_done, ap_CS_fsm_state13, ap_CS_fsm_state15, ap_CS_fsm_state141)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                if (((icmp_ln1552_fu_892_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state12) and (icmp_ln303_fu_859_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state57;
                elsif (((icmp_ln1552_fu_892_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state12) and (icmp_ln303_fu_859_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state17;
                else
                    ap_NS_fsm <= ap_ST_fsm_state13;
                end if;
            when ap_ST_fsm_state13 => 
                if (((grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_319_3_fu_280_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state13))) then
                    ap_NS_fsm <= ap_ST_fsm_state14;
                else
                    ap_NS_fsm <= ap_ST_fsm_state13;
                end if;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                if (((grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_329_4_fu_301_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state15))) then
                    ap_NS_fsm <= ap_ST_fsm_state16;
                else
                    ap_NS_fsm <= ap_ST_fsm_state15;
                end if;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_state22;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state23;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state24;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_state25;
            when ap_ST_fsm_state25 => 
                ap_NS_fsm <= ap_ST_fsm_state26;
            when ap_ST_fsm_state26 => 
                ap_NS_fsm <= ap_ST_fsm_state27;
            when ap_ST_fsm_state27 => 
                ap_NS_fsm <= ap_ST_fsm_state28;
            when ap_ST_fsm_state28 => 
                ap_NS_fsm <= ap_ST_fsm_state29;
            when ap_ST_fsm_state29 => 
                ap_NS_fsm <= ap_ST_fsm_state30;
            when ap_ST_fsm_state30 => 
                ap_NS_fsm <= ap_ST_fsm_state31;
            when ap_ST_fsm_state31 => 
                ap_NS_fsm <= ap_ST_fsm_state32;
            when ap_ST_fsm_state32 => 
                ap_NS_fsm <= ap_ST_fsm_state33;
            when ap_ST_fsm_state33 => 
                ap_NS_fsm <= ap_ST_fsm_state34;
            when ap_ST_fsm_state34 => 
                ap_NS_fsm <= ap_ST_fsm_state35;
            when ap_ST_fsm_state35 => 
                ap_NS_fsm <= ap_ST_fsm_state36;
            when ap_ST_fsm_state36 => 
                ap_NS_fsm <= ap_ST_fsm_state37;
            when ap_ST_fsm_state37 => 
                ap_NS_fsm <= ap_ST_fsm_state38;
            when ap_ST_fsm_state38 => 
                ap_NS_fsm <= ap_ST_fsm_state39;
            when ap_ST_fsm_state39 => 
                ap_NS_fsm <= ap_ST_fsm_state40;
            when ap_ST_fsm_state40 => 
                ap_NS_fsm <= ap_ST_fsm_state41;
            when ap_ST_fsm_state41 => 
                ap_NS_fsm <= ap_ST_fsm_state42;
            when ap_ST_fsm_state42 => 
                ap_NS_fsm <= ap_ST_fsm_state43;
            when ap_ST_fsm_state43 => 
                ap_NS_fsm <= ap_ST_fsm_state44;
            when ap_ST_fsm_state44 => 
                ap_NS_fsm <= ap_ST_fsm_state45;
            when ap_ST_fsm_state45 => 
                ap_NS_fsm <= ap_ST_fsm_state46;
            when ap_ST_fsm_state46 => 
                ap_NS_fsm <= ap_ST_fsm_state47;
            when ap_ST_fsm_state47 => 
                ap_NS_fsm <= ap_ST_fsm_state48;
            when ap_ST_fsm_state48 => 
                ap_NS_fsm <= ap_ST_fsm_state49;
            when ap_ST_fsm_state49 => 
                ap_NS_fsm <= ap_ST_fsm_state50;
            when ap_ST_fsm_state50 => 
                ap_NS_fsm <= ap_ST_fsm_state51;
            when ap_ST_fsm_state51 => 
                ap_NS_fsm <= ap_ST_fsm_state52;
            when ap_ST_fsm_state52 => 
                ap_NS_fsm <= ap_ST_fsm_state53;
            when ap_ST_fsm_state53 => 
                ap_NS_fsm <= ap_ST_fsm_state54;
            when ap_ST_fsm_state54 => 
                ap_NS_fsm <= ap_ST_fsm_state55;
            when ap_ST_fsm_state55 => 
                ap_NS_fsm <= ap_ST_fsm_state56;
            when ap_ST_fsm_state56 => 
                ap_NS_fsm <= ap_ST_fsm_state57;
            when ap_ST_fsm_state57 => 
                if (((icmp_ln1552_1_fu_960_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state57))) then
                    ap_NS_fsm <= ap_ST_fsm_state98;
                else
                    ap_NS_fsm <= ap_ST_fsm_state58;
                end if;
            when ap_ST_fsm_state58 => 
                ap_NS_fsm <= ap_ST_fsm_state59;
            when ap_ST_fsm_state59 => 
                ap_NS_fsm <= ap_ST_fsm_state60;
            when ap_ST_fsm_state60 => 
                ap_NS_fsm <= ap_ST_fsm_state61;
            when ap_ST_fsm_state61 => 
                ap_NS_fsm <= ap_ST_fsm_state62;
            when ap_ST_fsm_state62 => 
                ap_NS_fsm <= ap_ST_fsm_state63;
            when ap_ST_fsm_state63 => 
                ap_NS_fsm <= ap_ST_fsm_state64;
            when ap_ST_fsm_state64 => 
                ap_NS_fsm <= ap_ST_fsm_state65;
            when ap_ST_fsm_state65 => 
                ap_NS_fsm <= ap_ST_fsm_state66;
            when ap_ST_fsm_state66 => 
                ap_NS_fsm <= ap_ST_fsm_state67;
            when ap_ST_fsm_state67 => 
                ap_NS_fsm <= ap_ST_fsm_state68;
            when ap_ST_fsm_state68 => 
                ap_NS_fsm <= ap_ST_fsm_state69;
            when ap_ST_fsm_state69 => 
                ap_NS_fsm <= ap_ST_fsm_state70;
            when ap_ST_fsm_state70 => 
                ap_NS_fsm <= ap_ST_fsm_state71;
            when ap_ST_fsm_state71 => 
                ap_NS_fsm <= ap_ST_fsm_state72;
            when ap_ST_fsm_state72 => 
                ap_NS_fsm <= ap_ST_fsm_state73;
            when ap_ST_fsm_state73 => 
                ap_NS_fsm <= ap_ST_fsm_state74;
            when ap_ST_fsm_state74 => 
                ap_NS_fsm <= ap_ST_fsm_state75;
            when ap_ST_fsm_state75 => 
                ap_NS_fsm <= ap_ST_fsm_state76;
            when ap_ST_fsm_state76 => 
                ap_NS_fsm <= ap_ST_fsm_state77;
            when ap_ST_fsm_state77 => 
                ap_NS_fsm <= ap_ST_fsm_state78;
            when ap_ST_fsm_state78 => 
                ap_NS_fsm <= ap_ST_fsm_state79;
            when ap_ST_fsm_state79 => 
                ap_NS_fsm <= ap_ST_fsm_state80;
            when ap_ST_fsm_state80 => 
                ap_NS_fsm <= ap_ST_fsm_state81;
            when ap_ST_fsm_state81 => 
                ap_NS_fsm <= ap_ST_fsm_state82;
            when ap_ST_fsm_state82 => 
                ap_NS_fsm <= ap_ST_fsm_state83;
            when ap_ST_fsm_state83 => 
                ap_NS_fsm <= ap_ST_fsm_state84;
            when ap_ST_fsm_state84 => 
                ap_NS_fsm <= ap_ST_fsm_state85;
            when ap_ST_fsm_state85 => 
                ap_NS_fsm <= ap_ST_fsm_state86;
            when ap_ST_fsm_state86 => 
                ap_NS_fsm <= ap_ST_fsm_state87;
            when ap_ST_fsm_state87 => 
                ap_NS_fsm <= ap_ST_fsm_state88;
            when ap_ST_fsm_state88 => 
                ap_NS_fsm <= ap_ST_fsm_state89;
            when ap_ST_fsm_state89 => 
                ap_NS_fsm <= ap_ST_fsm_state90;
            when ap_ST_fsm_state90 => 
                ap_NS_fsm <= ap_ST_fsm_state91;
            when ap_ST_fsm_state91 => 
                ap_NS_fsm <= ap_ST_fsm_state92;
            when ap_ST_fsm_state92 => 
                ap_NS_fsm <= ap_ST_fsm_state93;
            when ap_ST_fsm_state93 => 
                ap_NS_fsm <= ap_ST_fsm_state94;
            when ap_ST_fsm_state94 => 
                ap_NS_fsm <= ap_ST_fsm_state95;
            when ap_ST_fsm_state95 => 
                ap_NS_fsm <= ap_ST_fsm_state96;
            when ap_ST_fsm_state96 => 
                ap_NS_fsm <= ap_ST_fsm_state97;
            when ap_ST_fsm_state97 => 
                ap_NS_fsm <= ap_ST_fsm_state98;
            when ap_ST_fsm_state98 => 
                if (((icmp_ln1552_2_fu_980_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state98))) then
                    ap_NS_fsm <= ap_ST_fsm_state139;
                else
                    ap_NS_fsm <= ap_ST_fsm_state99;
                end if;
            when ap_ST_fsm_state99 => 
                ap_NS_fsm <= ap_ST_fsm_state100;
            when ap_ST_fsm_state100 => 
                ap_NS_fsm <= ap_ST_fsm_state101;
            when ap_ST_fsm_state101 => 
                ap_NS_fsm <= ap_ST_fsm_state102;
            when ap_ST_fsm_state102 => 
                ap_NS_fsm <= ap_ST_fsm_state103;
            when ap_ST_fsm_state103 => 
                ap_NS_fsm <= ap_ST_fsm_state104;
            when ap_ST_fsm_state104 => 
                ap_NS_fsm <= ap_ST_fsm_state105;
            when ap_ST_fsm_state105 => 
                ap_NS_fsm <= ap_ST_fsm_state106;
            when ap_ST_fsm_state106 => 
                ap_NS_fsm <= ap_ST_fsm_state107;
            when ap_ST_fsm_state107 => 
                ap_NS_fsm <= ap_ST_fsm_state108;
            when ap_ST_fsm_state108 => 
                ap_NS_fsm <= ap_ST_fsm_state109;
            when ap_ST_fsm_state109 => 
                ap_NS_fsm <= ap_ST_fsm_state110;
            when ap_ST_fsm_state110 => 
                ap_NS_fsm <= ap_ST_fsm_state111;
            when ap_ST_fsm_state111 => 
                ap_NS_fsm <= ap_ST_fsm_state112;
            when ap_ST_fsm_state112 => 
                ap_NS_fsm <= ap_ST_fsm_state113;
            when ap_ST_fsm_state113 => 
                ap_NS_fsm <= ap_ST_fsm_state114;
            when ap_ST_fsm_state114 => 
                ap_NS_fsm <= ap_ST_fsm_state115;
            when ap_ST_fsm_state115 => 
                ap_NS_fsm <= ap_ST_fsm_state116;
            when ap_ST_fsm_state116 => 
                ap_NS_fsm <= ap_ST_fsm_state117;
            when ap_ST_fsm_state117 => 
                ap_NS_fsm <= ap_ST_fsm_state118;
            when ap_ST_fsm_state118 => 
                ap_NS_fsm <= ap_ST_fsm_state119;
            when ap_ST_fsm_state119 => 
                ap_NS_fsm <= ap_ST_fsm_state120;
            when ap_ST_fsm_state120 => 
                ap_NS_fsm <= ap_ST_fsm_state121;
            when ap_ST_fsm_state121 => 
                ap_NS_fsm <= ap_ST_fsm_state122;
            when ap_ST_fsm_state122 => 
                ap_NS_fsm <= ap_ST_fsm_state123;
            when ap_ST_fsm_state123 => 
                ap_NS_fsm <= ap_ST_fsm_state124;
            when ap_ST_fsm_state124 => 
                ap_NS_fsm <= ap_ST_fsm_state125;
            when ap_ST_fsm_state125 => 
                ap_NS_fsm <= ap_ST_fsm_state126;
            when ap_ST_fsm_state126 => 
                ap_NS_fsm <= ap_ST_fsm_state127;
            when ap_ST_fsm_state127 => 
                ap_NS_fsm <= ap_ST_fsm_state128;
            when ap_ST_fsm_state128 => 
                ap_NS_fsm <= ap_ST_fsm_state129;
            when ap_ST_fsm_state129 => 
                ap_NS_fsm <= ap_ST_fsm_state130;
            when ap_ST_fsm_state130 => 
                ap_NS_fsm <= ap_ST_fsm_state131;
            when ap_ST_fsm_state131 => 
                ap_NS_fsm <= ap_ST_fsm_state132;
            when ap_ST_fsm_state132 => 
                ap_NS_fsm <= ap_ST_fsm_state133;
            when ap_ST_fsm_state133 => 
                ap_NS_fsm <= ap_ST_fsm_state134;
            when ap_ST_fsm_state134 => 
                ap_NS_fsm <= ap_ST_fsm_state135;
            when ap_ST_fsm_state135 => 
                ap_NS_fsm <= ap_ST_fsm_state136;
            when ap_ST_fsm_state136 => 
                ap_NS_fsm <= ap_ST_fsm_state137;
            when ap_ST_fsm_state137 => 
                ap_NS_fsm <= ap_ST_fsm_state138;
            when ap_ST_fsm_state138 => 
                ap_NS_fsm <= ap_ST_fsm_state139;
            when ap_ST_fsm_state139 => 
                ap_NS_fsm <= ap_ST_fsm_state140;
            when ap_ST_fsm_state140 => 
                if (((icmp_ln371_fu_1020_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state140))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state141;
                end if;
            when ap_ST_fsm_state141 => 
                if (((grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_Col_Loop1_fu_323_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state141))) then
                    ap_NS_fsm <= ap_ST_fsm_state140;
                else
                    ap_NS_fsm <= ap_ST_fsm_state141;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    F2_fu_468_p2 <= std_logic_vector(unsigned(ap_const_lv12_433) - unsigned(zext_ln494_fu_454_p1));
    add_ln303_fu_853_p2 <= std_logic_vector(unsigned(j_fu_146) + unsigned(ap_const_lv2_1));
    add_ln590_fu_538_p2 <= std_logic_vector(unsigned(F2_reg_1207) + unsigned(ap_const_lv12_FEC));
    add_ln870_fu_814_p2 <= std_logic_vector(signed(sext_ln901_fu_806_p1) + signed(ap_const_lv29_1));
    and_ln590_fu_582_p2 <= (xor_ln591_fu_576_p2 and icmp_ln590_fu_533_p2);
    and_ln591_fu_657_p2 <= (xor_ln580_fu_652_p2 and icmp_ln591_reg_1226);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state139 <= ap_CS_fsm(138);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state140 <= ap_CS_fsm(139);
    ap_CS_fsm_state141 <= ap_CS_fsm(140);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state57 <= ap_CS_fsm(56);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);
    ap_CS_fsm_state98 <= ap_CS_fsm(97);
    ap_ST_fsm_state100_blk <= ap_const_logic_0;
    ap_ST_fsm_state101_blk <= ap_const_logic_0;
    ap_ST_fsm_state102_blk <= ap_const_logic_0;
    ap_ST_fsm_state103_blk <= ap_const_logic_0;
    ap_ST_fsm_state104_blk <= ap_const_logic_0;
    ap_ST_fsm_state105_blk <= ap_const_logic_0;
    ap_ST_fsm_state106_blk <= ap_const_logic_0;
    ap_ST_fsm_state107_blk <= ap_const_logic_0;
    ap_ST_fsm_state108_blk <= ap_const_logic_0;
    ap_ST_fsm_state109_blk <= ap_const_logic_0;
    ap_ST_fsm_state10_blk <= ap_const_logic_0;
    ap_ST_fsm_state110_blk <= ap_const_logic_0;
    ap_ST_fsm_state111_blk <= ap_const_logic_0;
    ap_ST_fsm_state112_blk <= ap_const_logic_0;
    ap_ST_fsm_state113_blk <= ap_const_logic_0;
    ap_ST_fsm_state114_blk <= ap_const_logic_0;
    ap_ST_fsm_state115_blk <= ap_const_logic_0;
    ap_ST_fsm_state116_blk <= ap_const_logic_0;
    ap_ST_fsm_state117_blk <= ap_const_logic_0;
    ap_ST_fsm_state118_blk <= ap_const_logic_0;
    ap_ST_fsm_state119_blk <= ap_const_logic_0;
    ap_ST_fsm_state11_blk <= ap_const_logic_0;
    ap_ST_fsm_state120_blk <= ap_const_logic_0;
    ap_ST_fsm_state121_blk <= ap_const_logic_0;
    ap_ST_fsm_state122_blk <= ap_const_logic_0;
    ap_ST_fsm_state123_blk <= ap_const_logic_0;
    ap_ST_fsm_state124_blk <= ap_const_logic_0;
    ap_ST_fsm_state125_blk <= ap_const_logic_0;
    ap_ST_fsm_state126_blk <= ap_const_logic_0;
    ap_ST_fsm_state127_blk <= ap_const_logic_0;
    ap_ST_fsm_state128_blk <= ap_const_logic_0;
    ap_ST_fsm_state129_blk <= ap_const_logic_0;
    ap_ST_fsm_state12_blk <= ap_const_logic_0;
    ap_ST_fsm_state130_blk <= ap_const_logic_0;
    ap_ST_fsm_state131_blk <= ap_const_logic_0;
    ap_ST_fsm_state132_blk <= ap_const_logic_0;
    ap_ST_fsm_state133_blk <= ap_const_logic_0;
    ap_ST_fsm_state134_blk <= ap_const_logic_0;
    ap_ST_fsm_state135_blk <= ap_const_logic_0;
    ap_ST_fsm_state136_blk <= ap_const_logic_0;
    ap_ST_fsm_state137_blk <= ap_const_logic_0;
    ap_ST_fsm_state138_blk <= ap_const_logic_0;
    ap_ST_fsm_state139_blk <= ap_const_logic_0;

    ap_ST_fsm_state13_blk_assign_proc : process(grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_319_3_fu_280_ap_done)
    begin
        if ((grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_319_3_fu_280_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state13_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state13_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state140_blk <= ap_const_logic_0;

    ap_ST_fsm_state141_blk_assign_proc : process(grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_Col_Loop1_fu_323_ap_done)
    begin
        if ((grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_Col_Loop1_fu_323_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state141_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state141_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state14_blk <= ap_const_logic_0;

    ap_ST_fsm_state15_blk_assign_proc : process(grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_329_4_fu_301_ap_done)
    begin
        if ((grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_329_4_fu_301_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state15_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state15_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state16_blk <= ap_const_logic_0;
    ap_ST_fsm_state17_blk <= ap_const_logic_0;
    ap_ST_fsm_state18_blk <= ap_const_logic_0;
    ap_ST_fsm_state19_blk <= ap_const_logic_0;

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state20_blk <= ap_const_logic_0;
    ap_ST_fsm_state21_blk <= ap_const_logic_0;
    ap_ST_fsm_state22_blk <= ap_const_logic_0;
    ap_ST_fsm_state23_blk <= ap_const_logic_0;
    ap_ST_fsm_state24_blk <= ap_const_logic_0;
    ap_ST_fsm_state25_blk <= ap_const_logic_0;
    ap_ST_fsm_state26_blk <= ap_const_logic_0;
    ap_ST_fsm_state27_blk <= ap_const_logic_0;
    ap_ST_fsm_state28_blk <= ap_const_logic_0;
    ap_ST_fsm_state29_blk <= ap_const_logic_0;
    ap_ST_fsm_state2_blk <= ap_const_logic_0;
    ap_ST_fsm_state30_blk <= ap_const_logic_0;
    ap_ST_fsm_state31_blk <= ap_const_logic_0;
    ap_ST_fsm_state32_blk <= ap_const_logic_0;
    ap_ST_fsm_state33_blk <= ap_const_logic_0;
    ap_ST_fsm_state34_blk <= ap_const_logic_0;
    ap_ST_fsm_state35_blk <= ap_const_logic_0;
    ap_ST_fsm_state36_blk <= ap_const_logic_0;
    ap_ST_fsm_state37_blk <= ap_const_logic_0;
    ap_ST_fsm_state38_blk <= ap_const_logic_0;
    ap_ST_fsm_state39_blk <= ap_const_logic_0;
    ap_ST_fsm_state3_blk <= ap_const_logic_0;
    ap_ST_fsm_state40_blk <= ap_const_logic_0;
    ap_ST_fsm_state41_blk <= ap_const_logic_0;
    ap_ST_fsm_state42_blk <= ap_const_logic_0;
    ap_ST_fsm_state43_blk <= ap_const_logic_0;
    ap_ST_fsm_state44_blk <= ap_const_logic_0;
    ap_ST_fsm_state45_blk <= ap_const_logic_0;
    ap_ST_fsm_state46_blk <= ap_const_logic_0;
    ap_ST_fsm_state47_blk <= ap_const_logic_0;
    ap_ST_fsm_state48_blk <= ap_const_logic_0;
    ap_ST_fsm_state49_blk <= ap_const_logic_0;
    ap_ST_fsm_state4_blk <= ap_const_logic_0;
    ap_ST_fsm_state50_blk <= ap_const_logic_0;
    ap_ST_fsm_state51_blk <= ap_const_logic_0;
    ap_ST_fsm_state52_blk <= ap_const_logic_0;
    ap_ST_fsm_state53_blk <= ap_const_logic_0;
    ap_ST_fsm_state54_blk <= ap_const_logic_0;
    ap_ST_fsm_state55_blk <= ap_const_logic_0;
    ap_ST_fsm_state56_blk <= ap_const_logic_0;
    ap_ST_fsm_state57_blk <= ap_const_logic_0;
    ap_ST_fsm_state58_blk <= ap_const_logic_0;
    ap_ST_fsm_state59_blk <= ap_const_logic_0;
    ap_ST_fsm_state5_blk <= ap_const_logic_0;
    ap_ST_fsm_state60_blk <= ap_const_logic_0;
    ap_ST_fsm_state61_blk <= ap_const_logic_0;
    ap_ST_fsm_state62_blk <= ap_const_logic_0;
    ap_ST_fsm_state63_blk <= ap_const_logic_0;
    ap_ST_fsm_state64_blk <= ap_const_logic_0;
    ap_ST_fsm_state65_blk <= ap_const_logic_0;
    ap_ST_fsm_state66_blk <= ap_const_logic_0;
    ap_ST_fsm_state67_blk <= ap_const_logic_0;
    ap_ST_fsm_state68_blk <= ap_const_logic_0;
    ap_ST_fsm_state69_blk <= ap_const_logic_0;
    ap_ST_fsm_state6_blk <= ap_const_logic_0;
    ap_ST_fsm_state70_blk <= ap_const_logic_0;
    ap_ST_fsm_state71_blk <= ap_const_logic_0;
    ap_ST_fsm_state72_blk <= ap_const_logic_0;
    ap_ST_fsm_state73_blk <= ap_const_logic_0;
    ap_ST_fsm_state74_blk <= ap_const_logic_0;
    ap_ST_fsm_state75_blk <= ap_const_logic_0;
    ap_ST_fsm_state76_blk <= ap_const_logic_0;
    ap_ST_fsm_state77_blk <= ap_const_logic_0;
    ap_ST_fsm_state78_blk <= ap_const_logic_0;
    ap_ST_fsm_state79_blk <= ap_const_logic_0;
    ap_ST_fsm_state7_blk <= ap_const_logic_0;
    ap_ST_fsm_state80_blk <= ap_const_logic_0;
    ap_ST_fsm_state81_blk <= ap_const_logic_0;
    ap_ST_fsm_state82_blk <= ap_const_logic_0;
    ap_ST_fsm_state83_blk <= ap_const_logic_0;
    ap_ST_fsm_state84_blk <= ap_const_logic_0;
    ap_ST_fsm_state85_blk <= ap_const_logic_0;
    ap_ST_fsm_state86_blk <= ap_const_logic_0;
    ap_ST_fsm_state87_blk <= ap_const_logic_0;
    ap_ST_fsm_state88_blk <= ap_const_logic_0;
    ap_ST_fsm_state89_blk <= ap_const_logic_0;
    ap_ST_fsm_state8_blk <= ap_const_logic_0;
    ap_ST_fsm_state90_blk <= ap_const_logic_0;
    ap_ST_fsm_state91_blk <= ap_const_logic_0;
    ap_ST_fsm_state92_blk <= ap_const_logic_0;
    ap_ST_fsm_state93_blk <= ap_const_logic_0;
    ap_ST_fsm_state94_blk <= ap_const_logic_0;
    ap_ST_fsm_state95_blk <= ap_const_logic_0;
    ap_ST_fsm_state96_blk <= ap_const_logic_0;
    ap_ST_fsm_state97_blk <= ap_const_logic_0;
    ap_ST_fsm_state98_blk <= ap_const_logic_0;
    ap_ST_fsm_state99_blk <= ap_const_logic_0;
    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state140, icmp_ln371_fu_1020_p2)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0)) or ((icmp_ln371_fu_1020_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state140)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state140, icmp_ln371_fu_1020_p2)
    begin
        if (((icmp_ln371_fu_1020_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state140))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ashr_ln595_fu_600_p2 <= std_logic_vector(shift_right(signed(man_V_2_reg_1215),to_integer(unsigned('0' & zext_ln595_fu_596_p1(31-1 downto 0)))));
    bitcast_ln709_fu_609_p1 <= p;
    exp_tmp_fu_444_p4 <= ireg_fu_428_p1(62 downto 52);
    grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_Col_Loop1_fu_323_ap_start <= grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_Col_Loop1_fu_323_ap_start_reg;
    grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_319_3_fu_280_ap_start <= grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_319_3_fu_280_ap_start_reg;
    grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_329_4_fu_301_ap_start <= grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_329_4_fu_301_ap_start_reg;
    grp_fu_1030_p0 <= grp_fu_1030_p00(12 - 1 downto 0);
    grp_fu_1030_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_read),24));
    grp_fu_1030_p1 <= grp_fu_1030_p10(12 - 1 downto 0);
    grp_fu_1030_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_read1),24));
    grp_fu_1037_p1 <= grp_fu_1037_p10(24 - 1 downto 0);
    grp_fu_1037_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_1030_p2),48));
    grp_fu_720_p0 <= grp_fu_720_p00(51 - 1 downto 0);
    grp_fu_720_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_47_reg_1274),103));
    grp_fu_720_p1 <= ap_const_lv103_A3D70A3D70A3E(53 - 1 downto 0);
    grp_fu_729_p1 <= ap_const_lv97_147AE147AE148(50 - 1 downto 0);

    grp_fu_898_ap_start_assign_proc : process(ap_CS_fsm_state12, icmp_ln303_fu_859_p2, icmp_ln1552_fu_892_p2)
    begin
        if (((icmp_ln1552_fu_892_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state12) and (icmp_ln303_fu_859_p2 = ap_const_lv1_1))) then 
            grp_fu_898_ap_start <= ap_const_logic_1;
        else 
            grp_fu_898_ap_start <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_966_ap_start_assign_proc : process(ap_CS_fsm_state57, icmp_ln1552_1_fu_960_p2)
    begin
        if (((icmp_ln1552_1_fu_960_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state57))) then 
            grp_fu_966_ap_start <= ap_const_logic_1;
        else 
            grp_fu_966_ap_start <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_986_ap_start_assign_proc : process(ap_CS_fsm_state98, icmp_ln1552_2_fu_980_p2)
    begin
        if (((icmp_ln1552_2_fu_980_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state98))) then 
            grp_fu_986_ap_start <= ap_const_logic_1;
        else 
            grp_fu_986_ap_start <= ap_const_logic_0;
        end if; 
    end process;


    hist1_address0_assign_proc : process(grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_319_3_fu_280_hist1_address0, grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_329_4_fu_301_hist1_address0, ap_CS_fsm_state13, ap_CS_fsm_state15)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            hist1_address0 <= grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_329_4_fu_301_hist1_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            hist1_address0 <= grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_319_3_fu_280_hist1_address0;
        else 
            hist1_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    hist1_ce0_assign_proc : process(grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_319_3_fu_280_hist1_ce0, grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_329_4_fu_301_hist1_ce0, ap_CS_fsm_state13, ap_CS_fsm_state15)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            hist1_ce0 <= grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_329_4_fu_301_hist1_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            hist1_ce0 <= grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_319_3_fu_280_hist1_ce0;
        else 
            hist1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    hist2_address0_assign_proc : process(grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_319_3_fu_280_hist2_address0, grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_329_4_fu_301_hist2_address0, ap_CS_fsm_state13, ap_CS_fsm_state15)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            hist2_address0 <= grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_329_4_fu_301_hist2_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            hist2_address0 <= grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_319_3_fu_280_hist2_address0;
        else 
            hist2_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    hist2_ce0_assign_proc : process(grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_319_3_fu_280_hist2_ce0, grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_329_4_fu_301_hist2_ce0, ap_CS_fsm_state13, ap_CS_fsm_state15)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            hist2_ce0 <= grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_329_4_fu_301_hist2_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            hist2_ce0 <= grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_319_3_fu_280_hist2_ce0;
        else 
            hist2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    hist_address0_assign_proc : process(grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_319_3_fu_280_hist_address0, grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_329_4_fu_301_hist_address0, ap_CS_fsm_state13, ap_CS_fsm_state15)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            hist_address0 <= grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_329_4_fu_301_hist_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            hist_address0 <= grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_319_3_fu_280_hist_address0;
        else 
            hist_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    hist_ce0_assign_proc : process(grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_319_3_fu_280_hist_ce0, grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_329_4_fu_301_hist_ce0, ap_CS_fsm_state13, ap_CS_fsm_state15)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            hist_ce0 <= grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_329_4_fu_301_hist_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            hist_ce0 <= grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_VITIS_LOOP_319_3_fu_280_hist_ce0;
        else 
            hist_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln1552_1_fu_960_p2 <= "1" when (maxValue_V_load_1_fu_158 = minValue_V_load_1_fu_162) else "0";
    icmp_ln1552_2_fu_980_p2 <= "1" when (maxValue_V_load_2_fu_166 = minValue_V_load_2_fu_170) else "0";
    icmp_ln1552_fu_892_p2 <= "1" when (maxValue_V_load_fu_150 = minValue_V_load_fu_154) else "0";
    icmp_ln303_fu_859_p2 <= "1" when (j_fu_146 = ap_const_lv2_3) else "0";
    icmp_ln371_fu_1020_p2 <= "1" when (row_V_fu_222 = p_read) else "0";
    icmp_ln580_fu_462_p2 <= "1" when (trunc_ln564_fu_432_p1 = ap_const_lv63_0) else "0";
    icmp_ln590_fu_533_p2 <= "1" when (signed(F2_reg_1207) > signed(ap_const_lv12_14)) else "0";
    icmp_ln591_fu_556_p2 <= "1" when (F2_reg_1207 = ap_const_lv12_14) else "0";
    icmp_ln594_fu_591_p2 <= "1" when (unsigned(sh_amt_reg_1220) < unsigned(ap_const_lv12_36)) else "0";
    icmp_ln612_fu_565_p2 <= "1" when (unsigned(sh_amt_fu_548_p3) < unsigned(ap_const_lv12_18)) else "0";
    icmp_ln902_fu_809_p2 <= "0" when (trunc_ln902_reg_1321 = ap_const_lv20_0) else "1";

    impop_41_read_assign_proc : process(grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_Col_Loop1_fu_323_impop_41_read, ap_CS_fsm_state141)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state141)) then 
            impop_41_read <= grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_Col_Loop1_fu_323_impop_41_read;
        else 
            impop_41_read <= ap_const_logic_0;
        end if; 
    end process;

    inv_val_V_2_fu_972_p1 <= grp_fu_966_p2(32 - 1 downto 0);
    inv_val_V_4_fu_992_p1 <= grp_fu_986_p2(32 - 1 downto 0);
    inv_val_V_fu_952_p1 <= grp_fu_898_p2(32 - 1 downto 0);
    ireg_fu_428_p1 <= d_fu_341_p1;
    ltm_in_4199_din <= grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_Col_Loop1_fu_323_ltm_in_4199_din;

    ltm_in_4199_write_assign_proc : process(grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_Col_Loop1_fu_323_ltm_in_4199_write, ap_CS_fsm_state141)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state141)) then 
            ltm_in_4199_write <= grp_AWBNormalizationkernel_10_10_2160_3840_2_20_1_4096_2_Pipeline_Col_Loop1_fu_323_ltm_in_4199_write;
        else 
            ltm_in_4199_write <= ap_const_logic_0;
        end if; 
    end process;

    man_V_1_fu_520_p2 <= std_logic_vector(unsigned(ap_const_lv54_0) - unsigned(zext_ln578_fu_516_p1));
    man_V_2_fu_526_p3 <= 
        man_V_1_fu_520_p2 when (p_Result_17_reg_1190(0) = '1') else 
        zext_ln578_fu_516_p1;
    or_ln591_fu_571_p2 <= (icmp_ln591_fu_556_p2 or icmp_ln580_reg_1200);
    p_Result_18_fu_509_p3 <= (ap_const_lv1_1 & trunc_ln574_reg_1195);
    p_Result_s_fu_735_p2 <= "1" when (signed(r_V_reg_1279) < signed(ap_const_lv48_FFFFFFFFFF9D)) else "0";
    r_V_47_fu_704_p0 <= r_V_47_fu_704_p00(27 - 1 downto 0);
    r_V_47_fu_704_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ret_V_53_reg_1269),51));
    r_V_47_fu_704_p1 <= r_V_47_fu_704_p10(24 - 1 downto 0);
    r_V_47_fu_704_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(total_reg_1253),51));
    ret_V_53_fu_692_p2 <= std_logic_vector(signed(ap_const_lv27_6400000) - signed(sext_ln1246_fu_689_p1));
    ret_V_fu_828_p3 <= 
        select_ln901_fu_820_p3 when (p_Result_s_reg_1301(0) = '1') else 
        sext_ln901_fu_806_p1;
    row_V_4_fu_1014_p2 <= std_logic_vector(unsigned(row_V_fu_222) + unsigned(ap_const_lv12_1));
    s2_V_fu_676_p3 <= 
        ap_const_lv24_0 when (icmp_ln580_reg_1200(0) = '1') else 
        select_ln590_fu_669_p3;
    select_ln1201_1_fu_785_p3 <= 
        sub_ln1201_1_fu_779_p2 when (tmp_104_reg_1285(0) = '1') else 
        sext_ln1201_2_fu_769_p1;
    select_ln1201_fu_772_p3 <= 
        sext_ln1201_1_fu_765_p1 when (tmp_104_reg_1285(0) = '1') else 
        sext_ln1201_2_fu_769_p1;
    select_ln590_fu_669_p3 <= 
        select_ln594_fu_628_p3 when (and_ln590_reg_1242(0) = '1') else 
        select_ln591_fu_662_p3;
    select_ln591_fu_662_p3 <= 
        trunc_ln592_reg_1231 when (and_ln591_fu_657_p2(0) = '1') else 
        select_ln612_fu_645_p3;
    select_ln594_fu_628_p3 <= 
        trunc_ln595_fu_605_p1 when (icmp_ln594_fu_591_p2(0) = '1') else 
        select_ln597_fu_620_p3;
    select_ln597_fu_620_p3 <= 
        ap_const_lv24_FFFFFF when (tmp_103_fu_612_p3(0) = '1') else 
        ap_const_lv24_0;
    select_ln612_fu_645_p3 <= 
        shl_ln613_fu_640_p2 when (icmp_ln612_reg_1237(0) = '1') else 
        ap_const_lv24_0;
    select_ln901_fu_820_p3 <= 
        add_ln870_fu_814_p2 when (icmp_ln902_fu_809_p2(0) = '1') else 
        sext_ln901_fu_806_p1;
        sext_ln1201_1_fu_765_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_105_fu_755_p4),48));

        sext_ln1201_2_fu_769_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_106_reg_1311),48));

        sext_ln1246_fu_689_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(s2_V_reg_1247),27));

        sext_ln590_fu_588_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sh_amt_reg_1220),32));

    sext_ln590cast_fu_636_p1 <= sext_ln590_fu_588_p1(24 - 1 downto 0);
        sext_ln901_fu_806_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_reg_1316),29));

    sh_amt_fu_548_p3 <= 
        add_ln590_fu_538_p2 when (icmp_ln590_fu_533_p2(0) = '1') else 
        sub_ln590_fu_543_p2;
    shl_ln613_fu_640_p2 <= std_logic_vector(shift_left(unsigned(trunc_ln592_reg_1231),to_integer(unsigned('0' & sext_ln590cast_fu_636_p1(24-1 downto 0)))));
    sub_ln1201_1_fu_779_p2 <= std_logic_vector(unsigned(ap_const_lv48_0) - unsigned(select_ln1201_fu_772_p3));
    sub_ln1201_fu_750_p2 <= std_logic_vector(unsigned(ap_const_lv97_0) - unsigned(mul_ln1201_reg_1306));
    sub_ln590_fu_543_p2 <= std_logic_vector(unsigned(ap_const_lv12_14) - unsigned(F2_reg_1207));
    sub_ln712_1_fu_876_p2 <= std_logic_vector(unsigned(maxValue_V_load_1_fu_158) - unsigned(minValue_V_load_1_fu_162));
    sub_ln712_2_fu_882_p2 <= std_logic_vector(unsigned(maxValue_V_load_2_fu_166) - unsigned(minValue_V_load_2_fu_170));
    sub_ln712_fu_870_p2 <= std_logic_vector(unsigned(maxValue_V_load_fu_150) - unsigned(minValue_V_load_fu_154));
    tmp_103_fu_612_p3 <= bitcast_ln709_fu_609_p1(31 downto 31);
    tmp_105_fu_755_p4 <= sub_ln1201_fu_750_p2(96 downto 55);
    tmp_107_fu_835_p4 <= grp_fu_720_p2(102 downto 78);
    trunc_ln564_fu_432_p1 <= ireg_fu_428_p1(63 - 1 downto 0);
    trunc_ln574_fu_458_p1 <= ireg_fu_428_p1(52 - 1 downto 0);
    trunc_ln592_fu_561_p1 <= man_V_2_fu_526_p3(24 - 1 downto 0);
    trunc_ln595_fu_605_p1 <= ashr_ln595_fu_600_p2(24 - 1 downto 0);
    trunc_ln902_fu_802_p1 <= select_ln1201_1_fu_785_p3(20 - 1 downto 0);
    xor_ln580_fu_652_p2 <= (icmp_ln580_reg_1200 xor ap_const_lv1_1);
    xor_ln591_fu_576_p2 <= (or_ln591_fu_571_p2 xor ap_const_lv1_1);
    zext_ln494_fu_454_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_tmp_fu_444_p4),12));
    zext_ln578_fu_516_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_18_fu_509_p3),54));
    zext_ln595_fu_596_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln590_fu_588_p1),54));
    zext_ln882_fu_845_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_107_fu_835_p4),31));
end behav;
