-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
-- Version: 2021.1
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity ISPPipeline_accel_rgr_bgb_kernel_ap_uint_16_6_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    p_read : IN STD_LOGIC_VECTOR (15 downto 0);
    p_read1 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_read2 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_read3 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_read4 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_read5 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_read6 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_read7 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_read8 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_read9 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_read10 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_read11 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_read12 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_read13 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_read14 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_read15 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_read16 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_read17 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_read18 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_read19 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_read20 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_read21 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_read22 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_read23 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_read24 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_read25 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_read26 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_read27 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_read28 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_read29 : IN STD_LOGIC_VECTOR (15 downto 0);
    loop_offset : IN STD_LOGIC_VECTOR (0 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (18 downto 0);
    ap_ce : IN STD_LOGIC );
end;


architecture behav of ISPPipeline_accel_rgr_bgb_kernel_ap_uint_16_6_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv21_0 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000000000";
    constant ap_const_lv20_0 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000000";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv19_0 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000000";

attribute shreg_extract : string;
    signal ret_5_fu_422_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal ret_5_reg_790 : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal add_ln1525_fu_484_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln1525_reg_795 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln1525_2_fu_534_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln1525_2_reg_800 : STD_LOGIC_VECTOR (16 downto 0);
    signal ret_4_fu_584_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal ret_4_reg_805 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_fu_590_p8 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_reg_810 : STD_LOGIC_VECTOR (15 downto 0);
    signal lshr_ln_reg_816 : STD_LOGIC_VECTOR (15 downto 0);
    signal lshr_ln_reg_816_pp0_iter1_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal ret_3_fu_637_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal ret_3_reg_821 : STD_LOGIC_VECTOR (18 downto 0);
    signal add_ln98_1_fu_678_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal add_ln98_1_reg_826 : STD_LOGIC_VECTOR (19 downto 0);
    signal add_ln98_fu_703_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal add_ln98_reg_831 : STD_LOGIC_VECTOR (20 downto 0);
    signal tmp_59_reg_836 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln98_2_reg_841 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal or_ln_fu_300_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln225_fu_308_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal lhs_fu_312_p8 : STD_LOGIC_VECTOR (15 downto 0);
    signal rhs_fu_334_p8 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln225_2_fu_352_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal zext_ln225_1_fu_330_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal select_ln225_fu_362_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal lhs_6_fu_370_p8 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln225_1_fu_392_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal rhs_1_fu_400_p8 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln225_4_fu_418_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal zext_ln225_3_fu_388_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal rhs_2_fu_432_p7 : STD_LOGIC_VECTOR (2 downto 0);
    signal rhs_2_fu_432_p8 : STD_LOGIC_VECTOR (15 downto 0);
    signal rhs_3_fu_462_p7 : STD_LOGIC_VECTOR (2 downto 0);
    signal rhs_3_fu_462_p8 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln1525_fu_450_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal zext_ln1525_13_fu_480_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal rhs_4_fu_490_p8 : STD_LOGIC_VECTOR (15 downto 0);
    signal rhs_5_fu_512_p8 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln1525_15_fu_508_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal zext_ln1525_16_fu_530_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal lhs_9_fu_540_p8 : STD_LOGIC_VECTOR (15 downto 0);
    signal rhs_6_fu_562_p8 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln225_9_fu_580_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal zext_ln225_8_fu_558_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal ret_fu_356_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal zext_ln1525_14_fu_621_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal zext_ln225_5_fu_618_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal ret_6_fu_624_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal zext_ln1525_17_fu_634_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal zext_ln1525_12_fu_630_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal shl_ln_fu_643_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal shl_ln1_fu_657_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal zext_ln97_fu_664_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal zext_ln96_fu_654_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal add_ln97_fu_668_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal zext_ln225_10_fu_650_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal zext_ln98_fu_674_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal zext_ln97_1_fu_687_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal zext_ln225_7_fu_684_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal sub_ln97_fu_690_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal zext_ln98_1_fu_700_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal sext_ln97_fu_696_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal sub_ln98_fu_727_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal trunc_ln98_1_fu_732_p4 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln98_fu_742_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal zext_ln98_2_fu_746_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal sext_ln98_1_fu_756_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal sub_ln98_1_fu_750_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal zext_ln98_3_fu_759_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal res_fu_763_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp_60_fu_774_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln97_fu_770_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal select_ln99_fu_782_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal ap_ce_reg : STD_LOGIC;
    signal p_read_int_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_read1_int_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_read2_int_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_read3_int_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_read4_int_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_read5_int_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_read6_int_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_read7_int_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_read8_int_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_read9_int_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_read10_int_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_read11_int_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_read12_int_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_read13_int_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_read14_int_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_read15_int_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_read16_int_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_read17_int_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_read18_int_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_read19_int_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_read20_int_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_read21_int_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_read22_int_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_read23_int_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_read24_int_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_read25_int_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_read26_int_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_read27_int_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_read28_int_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_read29_int_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal loop_offset_int_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_return_int_reg : STD_LOGIC_VECTOR (18 downto 0);

    component ISPPipeline_accel_mux_63_16_1_0 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        din2 : IN STD_LOGIC_VECTOR (15 downto 0);
        din3 : IN STD_LOGIC_VECTOR (15 downto 0);
        din4 : IN STD_LOGIC_VECTOR (15 downto 0);
        din5 : IN STD_LOGIC_VECTOR (15 downto 0);
        din6 : IN STD_LOGIC_VECTOR (2 downto 0);
        dout : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;



begin
    mux_63_16_1_0_U194 : component ISPPipeline_accel_mux_63_16_1_0
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 16,
        din3_WIDTH => 16,
        din4_WIDTH => 16,
        din5_WIDTH => 16,
        din6_WIDTH => 3,
        dout_WIDTH => 16)
    port map (
        din0 => p_read_int_reg,
        din1 => p_read1_int_reg,
        din2 => p_read2_int_reg,
        din3 => p_read3_int_reg,
        din4 => p_read4_int_reg,
        din5 => p_read5_int_reg,
        din6 => zext_ln225_fu_308_p1,
        dout => lhs_fu_312_p8);

    mux_63_16_1_0_U195 : component ISPPipeline_accel_mux_63_16_1_0
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 16,
        din3_WIDTH => 16,
        din4_WIDTH => 16,
        din5_WIDTH => 16,
        din6_WIDTH => 3,
        dout_WIDTH => 16)
    port map (
        din0 => p_read24_int_reg,
        din1 => p_read25_int_reg,
        din2 => p_read26_int_reg,
        din3 => p_read27_int_reg,
        din4 => p_read28_int_reg,
        din5 => p_read29_int_reg,
        din6 => zext_ln225_fu_308_p1,
        dout => rhs_fu_334_p8);

    mux_63_16_1_0_U196 : component ISPPipeline_accel_mux_63_16_1_0
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 16,
        din3_WIDTH => 16,
        din4_WIDTH => 16,
        din5_WIDTH => 16,
        din6_WIDTH => 3,
        dout_WIDTH => 16)
    port map (
        din0 => p_read6_int_reg,
        din1 => p_read7_int_reg,
        din2 => p_read8_int_reg,
        din3 => p_read9_int_reg,
        din4 => p_read10_int_reg,
        din5 => p_read11_int_reg,
        din6 => select_ln225_fu_362_p3,
        dout => lhs_6_fu_370_p8);

    mux_63_16_1_0_U197 : component ISPPipeline_accel_mux_63_16_1_0
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 16,
        din3_WIDTH => 16,
        din4_WIDTH => 16,
        din5_WIDTH => 16,
        din6_WIDTH => 3,
        dout_WIDTH => 16)
    port map (
        din0 => p_read6_int_reg,
        din1 => p_read7_int_reg,
        din2 => p_read8_int_reg,
        din3 => p_read9_int_reg,
        din4 => p_read10_int_reg,
        din5 => p_read11_int_reg,
        din6 => select_ln225_1_fu_392_p3,
        dout => rhs_1_fu_400_p8);

    mux_63_16_1_0_U198 : component ISPPipeline_accel_mux_63_16_1_0
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 16,
        din3_WIDTH => 16,
        din4_WIDTH => 16,
        din5_WIDTH => 16,
        din6_WIDTH => 3,
        dout_WIDTH => 16)
    port map (
        din0 => p_read12_int_reg,
        din1 => p_read13_int_reg,
        din2 => p_read14_int_reg,
        din3 => p_read15_int_reg,
        din4 => p_read16_int_reg,
        din5 => p_read17_int_reg,
        din6 => rhs_2_fu_432_p7,
        dout => rhs_2_fu_432_p8);

    mux_63_16_1_0_U199 : component ISPPipeline_accel_mux_63_16_1_0
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 16,
        din3_WIDTH => 16,
        din4_WIDTH => 16,
        din5_WIDTH => 16,
        din6_WIDTH => 3,
        dout_WIDTH => 16)
    port map (
        din0 => p_read12_int_reg,
        din1 => p_read13_int_reg,
        din2 => p_read14_int_reg,
        din3 => p_read15_int_reg,
        din4 => p_read16_int_reg,
        din5 => p_read17_int_reg,
        din6 => rhs_3_fu_462_p7,
        dout => rhs_3_fu_462_p8);

    mux_63_16_1_0_U200 : component ISPPipeline_accel_mux_63_16_1_0
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 16,
        din3_WIDTH => 16,
        din4_WIDTH => 16,
        din5_WIDTH => 16,
        din6_WIDTH => 3,
        dout_WIDTH => 16)
    port map (
        din0 => p_read18_int_reg,
        din1 => p_read19_int_reg,
        din2 => p_read20_int_reg,
        din3 => p_read21_int_reg,
        din4 => p_read22_int_reg,
        din5 => p_read23_int_reg,
        din6 => select_ln225_fu_362_p3,
        dout => rhs_4_fu_490_p8);

    mux_63_16_1_0_U201 : component ISPPipeline_accel_mux_63_16_1_0
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 16,
        din3_WIDTH => 16,
        din4_WIDTH => 16,
        din5_WIDTH => 16,
        din6_WIDTH => 3,
        dout_WIDTH => 16)
    port map (
        din0 => p_read18_int_reg,
        din1 => p_read19_int_reg,
        din2 => p_read20_int_reg,
        din3 => p_read21_int_reg,
        din4 => p_read22_int_reg,
        din5 => p_read23_int_reg,
        din6 => select_ln225_1_fu_392_p3,
        dout => rhs_5_fu_512_p8);

    mux_63_16_1_0_U202 : component ISPPipeline_accel_mux_63_16_1_0
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 16,
        din3_WIDTH => 16,
        din4_WIDTH => 16,
        din5_WIDTH => 16,
        din6_WIDTH => 3,
        dout_WIDTH => 16)
    port map (
        din0 => p_read12_int_reg,
        din1 => p_read13_int_reg,
        din2 => p_read14_int_reg,
        din3 => p_read15_int_reg,
        din4 => p_read16_int_reg,
        din5 => p_read17_int_reg,
        din6 => select_ln225_fu_362_p3,
        dout => lhs_9_fu_540_p8);

    mux_63_16_1_0_U203 : component ISPPipeline_accel_mux_63_16_1_0
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 16,
        din3_WIDTH => 16,
        din4_WIDTH => 16,
        din5_WIDTH => 16,
        din6_WIDTH => 3,
        dout_WIDTH => 16)
    port map (
        din0 => p_read12_int_reg,
        din1 => p_read13_int_reg,
        din2 => p_read14_int_reg,
        din3 => p_read15_int_reg,
        din4 => p_read16_int_reg,
        din5 => p_read17_int_reg,
        din6 => select_ln225_1_fu_392_p3,
        dout => rhs_6_fu_562_p8);

    mux_63_16_1_0_U204 : component ISPPipeline_accel_mux_63_16_1_0
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 16,
        din3_WIDTH => 16,
        din4_WIDTH => 16,
        din5_WIDTH => 16,
        din6_WIDTH => 3,
        dout_WIDTH => 16)
    port map (
        din0 => p_read12_int_reg,
        din1 => p_read13_int_reg,
        din2 => p_read14_int_reg,
        din3 => p_read15_int_reg,
        din4 => p_read16_int_reg,
        din5 => p_read17_int_reg,
        din6 => zext_ln225_fu_308_p1,
        dout => tmp_fu_590_p8);





    ap_ce_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            ap_ce_reg <= ap_ce;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then
                add_ln1525_2_reg_800 <= add_ln1525_2_fu_534_p2;
                add_ln1525_reg_795 <= add_ln1525_fu_484_p2;
                add_ln98_1_reg_826 <= add_ln98_1_fu_678_p2;
                add_ln98_reg_831 <= add_ln98_fu_703_p2;
                lshr_ln_reg_816 <= ret_fu_356_p2(16 downto 1);
                lshr_ln_reg_816_pp0_iter1_reg <= lshr_ln_reg_816;
                ret_3_reg_821 <= ret_3_fu_637_p2;
                ret_4_reg_805 <= ret_4_fu_584_p2;
                ret_5_reg_790 <= ret_5_fu_422_p2;
                tmp_59_reg_836 <= add_ln98_fu_703_p2(20 downto 20);
                tmp_reg_810 <= tmp_fu_590_p8;
                trunc_ln98_2_reg_841 <= add_ln98_fu_703_p2(20 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_ce_reg)) then
                ap_return_int_reg <= select_ln99_fu_782_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_ce)) then
                loop_offset_int_reg <= loop_offset;
                p_read10_int_reg <= p_read10;
                p_read11_int_reg <= p_read11;
                p_read12_int_reg <= p_read12;
                p_read13_int_reg <= p_read13;
                p_read14_int_reg <= p_read14;
                p_read15_int_reg <= p_read15;
                p_read16_int_reg <= p_read16;
                p_read17_int_reg <= p_read17;
                p_read18_int_reg <= p_read18;
                p_read19_int_reg <= p_read19;
                p_read1_int_reg <= p_read1;
                p_read20_int_reg <= p_read20;
                p_read21_int_reg <= p_read21;
                p_read22_int_reg <= p_read22;
                p_read23_int_reg <= p_read23;
                p_read24_int_reg <= p_read24;
                p_read25_int_reg <= p_read25;
                p_read26_int_reg <= p_read26;
                p_read27_int_reg <= p_read27;
                p_read28_int_reg <= p_read28;
                p_read29_int_reg <= p_read29;
                p_read2_int_reg <= p_read2;
                p_read3_int_reg <= p_read3;
                p_read4_int_reg <= p_read4;
                p_read5_int_reg <= p_read5;
                p_read6_int_reg <= p_read6;
                p_read7_int_reg <= p_read7;
                p_read8_int_reg <= p_read8;
                p_read9_int_reg <= p_read9;
                p_read_int_reg <= p_read;
            end if;
        end if;
    end process;
    add_ln1525_2_fu_534_p2 <= std_logic_vector(unsigned(zext_ln1525_15_fu_508_p1) + unsigned(zext_ln1525_16_fu_530_p1));
    add_ln1525_fu_484_p2 <= std_logic_vector(unsigned(zext_ln1525_fu_450_p1) + unsigned(zext_ln1525_13_fu_480_p1));
    add_ln97_fu_668_p2 <= std_logic_vector(unsigned(zext_ln97_fu_664_p1) + unsigned(zext_ln96_fu_654_p1));
    add_ln98_1_fu_678_p2 <= std_logic_vector(unsigned(zext_ln225_10_fu_650_p1) + unsigned(zext_ln98_fu_674_p1));
    add_ln98_fu_703_p2 <= std_logic_vector(unsigned(zext_ln98_1_fu_700_p1) + unsigned(sext_ln97_fu_696_p1));
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_return_assign_proc : process(select_ln99_fu_782_p3, ap_ce_reg, ap_return_int_reg)
    begin
        if ((ap_const_logic_0 = ap_ce_reg)) then 
            ap_return <= ap_return_int_reg;
        elsif ((ap_const_logic_1 = ap_ce_reg)) then 
            ap_return <= select_ln99_fu_782_p3;
        else 
            ap_return <= "XXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    or_ln_fu_300_p3 <= (ap_const_lv1_1 & loop_offset_int_reg);
    res_fu_763_p3 <= 
        sub_ln98_1_fu_750_p2 when (tmp_59_reg_836(0) = '1') else 
        zext_ln98_3_fu_759_p1;
    ret_3_fu_637_p2 <= std_logic_vector(unsigned(zext_ln1525_17_fu_634_p1) + unsigned(zext_ln1525_12_fu_630_p1));
    ret_4_fu_584_p2 <= std_logic_vector(unsigned(zext_ln225_9_fu_580_p1) + unsigned(zext_ln225_8_fu_558_p1));
    ret_5_fu_422_p2 <= std_logic_vector(unsigned(zext_ln225_4_fu_418_p1) + unsigned(zext_ln225_3_fu_388_p1));
    ret_6_fu_624_p2 <= std_logic_vector(unsigned(zext_ln1525_14_fu_621_p1) + unsigned(zext_ln225_5_fu_618_p1));
    ret_fu_356_p2 <= std_logic_vector(unsigned(zext_ln225_2_fu_352_p1) + unsigned(zext_ln225_1_fu_330_p1));
    rhs_2_fu_432_p7 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(loop_offset_int_reg),3));
    rhs_3_fu_462_p7 <= (ap_const_lv2_2 & loop_offset_int_reg);
    select_ln225_1_fu_392_p3 <= 
        ap_const_lv3_4 when (loop_offset_int_reg(0) = '1') else 
        ap_const_lv3_3;
    select_ln225_fu_362_p3 <= 
        ap_const_lv3_2 when (loop_offset_int_reg(0) = '1') else 
        ap_const_lv3_1;
    select_ln99_fu_782_p3 <= 
        ap_const_lv19_0 when (tmp_60_fu_774_p3(0) = '1') else 
        trunc_ln97_fu_770_p1;
        sext_ln97_fu_696_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln97_fu_690_p2),21));

        sext_ln98_1_fu_756_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln98_2_reg_841),19));

        sext_ln98_fu_742_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln98_1_fu_732_p4),19));

    shl_ln1_fu_657_p3 <= (tmp_reg_810 & ap_const_lv2_0);
    shl_ln_fu_643_p3 <= (ret_4_reg_805 & ap_const_lv2_0);
    sub_ln97_fu_690_p2 <= std_logic_vector(unsigned(zext_ln97_1_fu_687_p1) - unsigned(zext_ln225_7_fu_684_p1));
    sub_ln98_1_fu_750_p2 <= std_logic_vector(unsigned(ap_const_lv20_0) - unsigned(zext_ln98_2_fu_746_p1));
    sub_ln98_fu_727_p2 <= std_logic_vector(unsigned(ap_const_lv21_0) - unsigned(add_ln98_reg_831));
    tmp_60_fu_774_p3 <= res_fu_763_p3(19 downto 19);
    trunc_ln97_fu_770_p1 <= res_fu_763_p3(19 - 1 downto 0);
    trunc_ln98_1_fu_732_p4 <= sub_ln98_fu_727_p2(20 downto 3);
    zext_ln1525_12_fu_630_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ret_6_fu_624_p2),19));
    zext_ln1525_13_fu_480_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(rhs_3_fu_462_p8),17));
    zext_ln1525_14_fu_621_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1525_reg_795),18));
    zext_ln1525_15_fu_508_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(rhs_4_fu_490_p8),17));
    zext_ln1525_16_fu_530_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(rhs_5_fu_512_p8),17));
    zext_ln1525_17_fu_634_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1525_2_reg_800),19));
    zext_ln1525_fu_450_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(rhs_2_fu_432_p8),17));
    zext_ln225_10_fu_650_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln_fu_643_p3),20));
    zext_ln225_1_fu_330_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lhs_fu_312_p8),17));
    zext_ln225_2_fu_352_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(rhs_fu_334_p8),17));
    zext_ln225_3_fu_388_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lhs_6_fu_370_p8),17));
    zext_ln225_4_fu_418_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(rhs_1_fu_400_p8),17));
    zext_ln225_5_fu_618_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ret_5_reg_790),18));
    zext_ln225_7_fu_684_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ret_3_reg_821),20));
    zext_ln225_8_fu_558_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lhs_9_fu_540_p8),17));
    zext_ln225_9_fu_580_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(rhs_6_fu_562_p8),17));
    zext_ln225_fu_308_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln_fu_300_p3),3));
    zext_ln96_fu_654_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_reg_810),19));
    zext_ln97_1_fu_687_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln_reg_816_pp0_iter1_reg),20));
    zext_ln97_fu_664_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln1_fu_657_p3),19));
    zext_ln98_1_fu_700_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln98_1_reg_826),21));
    zext_ln98_2_fu_746_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln98_fu_742_p1),20));
    zext_ln98_3_fu_759_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln98_1_fu_756_p1),20));
    zext_ln98_fu_674_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln97_fu_668_p2),20));
end behav;
