-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
-- Version: 2021.1
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity ISPPipeline_accel_xfccmkernel_10_2160_3840_20_2_23_23_1920_2_Pipeline_colLoop is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ltm_in_4199_dout : IN STD_LOGIC_VECTOR (95 downto 0);
    ltm_in_4199_empty_n : IN STD_LOGIC;
    ltm_in_4199_read : OUT STD_LOGIC;
    lsc_out_4200_din : OUT STD_LOGIC_VECTOR (95 downto 0);
    lsc_out_4200_full_n : IN STD_LOGIC;
    lsc_out_4200_write : OUT STD_LOGIC;
    width : IN STD_LOGIC_VECTOR (10 downto 0) );
end;


architecture behav of ISPPipeline_accel_xfccmkernel_10_2160_3840_20_2_23_23_1920_2_Pipeline_colLoop is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_4F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001111";
    constant ap_const_lv32_50 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010000";
    constant ap_const_lv32_5F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011111";
    constant ap_const_lv45_1A916872 : STD_LOGIC_VECTOR (44 downto 0) := "000000000000000011010100100010110100001110010";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_2C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101100";
    constant ap_const_lv45_1FFFF69930BE : STD_LOGIC_VECTOR (44 downto 0) := "111111111111111110110100110010011000010111110";
    constant ap_const_lv45_12205BC0 : STD_LOGIC_VECTOR (44 downto 0) := "000000000000000010010001000000101101111000000";
    constant ap_const_lv32_29 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101001";
    constant ap_const_lv32_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100110";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv45_11E631F8 : STD_LOGIC_VECTOR (44 downto 0) := "000000000000000010001111001100011000111111000";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv20_0 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000000";
    constant ap_const_lv28_0 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000000000000000";
    constant ap_const_lv21_1 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000000001";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv22_FFFF : STD_LOGIC_VECTOR (21 downto 0) := "0000001111111111111111";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv42_3FFFED5CFAA : STD_LOGIC_VECTOR (41 downto 0) := "111111111111111110110101011100111110101010";
    constant ap_const_lv42_3FFFE01A36E : STD_LOGIC_VECTOR (41 downto 0) := "111111111111111110000000011010001101101110";
    constant ap_const_lv39_7FFFDE00D1 : STD_LOGIC_VECTOR (38 downto 0) := "111111111111111110111100000000011010001";
    constant ap_const_lv40_FFFFB573EA : STD_LOGIC_VECTOR (39 downto 0) := "1111111111111111101101010111001111101010";
    constant ap_const_lv42_3FFFE63F141 : STD_LOGIC_VECTOR (41 downto 0) := "111111111111111110011000111111000101000001";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal icmp_ln245_fu_163_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal ltm_in_4199_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal lsc_out_4200_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal r_V_fu_174_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_reg_1400 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_reg_1400_pp0_iter2_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal g_V_fu_178_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal g_V_reg_1405 : STD_LOGIC_VECTOR (15 downto 0);
    signal g_V_reg_1405_pp0_iter2_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal b_V_fu_188_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal b_V_reg_1410 : STD_LOGIC_VECTOR (15 downto 0);
    signal b_V_reg_1410_pp0_iter2_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal b_V_reg_1410_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_12_fu_218_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_12_reg_1440 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_12_reg_1440_pp0_iter2_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal g_V_1_fu_228_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal g_V_1_reg_1445 : STD_LOGIC_VECTOR (15 downto 0);
    signal g_V_1_reg_1445_pp0_iter2_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal b_V_1_fu_238_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal b_V_1_reg_1450 : STD_LOGIC_VECTOR (15 downto 0);
    signal b_V_1_reg_1450_pp0_iter2_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal b_V_1_reg_1450_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_reg_1480 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_2_reg_1485 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_6_reg_1490 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_23_reg_1495 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_24_reg_1500 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_27_reg_1505 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_3_reg_1510 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_8_reg_1515 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_11_reg_1520 : STD_LOGIC_VECTOR (24 downto 0);
    signal ret_V_24_fu_446_p2 : STD_LOGIC_VECTOR (26 downto 0);
    signal ret_V_24_reg_1525 : STD_LOGIC_VECTOR (26 downto 0);
    signal ret_V_27_fu_459_p2 : STD_LOGIC_VECTOR (26 downto 0);
    signal ret_V_27_reg_1530 : STD_LOGIC_VECTOR (26 downto 0);
    signal ret_V_30_fu_473_p2 : STD_LOGIC_VECTOR (26 downto 0);
    signal ret_V_30_reg_1535 : STD_LOGIC_VECTOR (26 downto 0);
    signal tmp_25_reg_1540 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_28_reg_1545 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_31_reg_1550 : STD_LOGIC_VECTOR (24 downto 0);
    signal ret_V_33_fu_549_p2 : STD_LOGIC_VECTOR (26 downto 0);
    signal ret_V_33_reg_1555 : STD_LOGIC_VECTOR (26 downto 0);
    signal ret_V_36_fu_562_p2 : STD_LOGIC_VECTOR (26 downto 0);
    signal ret_V_36_reg_1560 : STD_LOGIC_VECTOR (26 downto 0);
    signal ret_V_39_fu_576_p2 : STD_LOGIC_VECTOR (26 downto 0);
    signal ret_V_39_reg_1565 : STD_LOGIC_VECTOR (26 downto 0);
    signal ret_V_26_fu_648_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal ret_V_26_reg_1570 : STD_LOGIC_VECTOR (20 downto 0);
    signal ret_V_29_fu_722_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal ret_V_29_reg_1575 : STD_LOGIC_VECTOR (20 downto 0);
    signal ret_V_32_fu_796_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal ret_V_32_reg_1580 : STD_LOGIC_VECTOR (20 downto 0);
    signal icmp_ln109_fu_814_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln109_reg_1585 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln109_1_fu_830_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln109_1_reg_1590 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln109_2_fu_846_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln109_2_reg_1595 : STD_LOGIC_VECTOR (0 downto 0);
    signal ret_V_35_fu_918_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal ret_V_35_reg_1600 : STD_LOGIC_VECTOR (20 downto 0);
    signal ret_V_38_fu_992_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal ret_V_38_reg_1605 : STD_LOGIC_VECTOR (20 downto 0);
    signal ret_V_41_fu_1066_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal ret_V_41_reg_1610 : STD_LOGIC_VECTOR (20 downto 0);
    signal icmp_ln109_3_fu_1084_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln109_3_reg_1615 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln109_4_fu_1100_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln109_4_reg_1620 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln109_5_fu_1116_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln109_5_reg_1625 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_V_fu_126 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_j_V_1 : STD_LOGIC_VECTOR (10 downto 0);
    signal j_V_2_fu_157_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal r_V_1_fu_271_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_1_fu_271_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal r_V_1_fu_271_p2 : STD_LOGIC_VECTOR (44 downto 0);
    signal r_V_3_fu_290_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln1168_4_fu_287_p1 : STD_LOGIC_VECTOR (44 downto 0);
    signal r_V_3_fu_290_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal r_V_3_fu_290_p2 : STD_LOGIC_VECTOR (44 downto 0);
    signal r_V_7_fu_306_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_7_fu_306_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal r_V_7_fu_306_p2 : STD_LOGIC_VECTOR (44 downto 0);
    signal r_V_13_fu_325_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_13_fu_325_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal r_V_13_fu_325_p2 : STD_LOGIC_VECTOR (44 downto 0);
    signal r_V_15_fu_344_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln1168_12_fu_341_p1 : STD_LOGIC_VECTOR (44 downto 0);
    signal r_V_15_fu_344_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal r_V_15_fu_344_p2 : STD_LOGIC_VECTOR (44 downto 0);
    signal r_V_19_fu_360_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_19_fu_360_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal r_V_19_fu_360_p2 : STD_LOGIC_VECTOR (44 downto 0);
    signal grp_fu_1319_p2 : STD_LOGIC_VECTOR (41 downto 0);
    signal grp_fu_1326_p2 : STD_LOGIC_VECTOR (41 downto 0);
    signal grp_fu_1333_p2 : STD_LOGIC_VECTOR (38 downto 0);
    signal grp_fu_1340_p2 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_fu_1347_p2 : STD_LOGIC_VECTOR (41 downto 0);
    signal r_V_11_fu_424_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_11_fu_424_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal r_V_11_fu_424_p2 : STD_LOGIC_VECTOR (44 downto 0);
    signal sext_ln1245_fu_443_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal zext_ln1245_fu_440_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal tmp_5_fu_388_p4 : STD_LOGIC_VECTOR (21 downto 0);
    signal zext_ln1245_1_fu_456_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal sext_ln1245_3_fu_452_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal tmp_9_fu_406_p4 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp_10_fu_415_p4 : STD_LOGIC_VECTOR (21 downto 0);
    signal sext_ln1245_7_fu_469_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal sext_ln1245_6_fu_465_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal grp_fu_1354_p2 : STD_LOGIC_VECTOR (41 downto 0);
    signal grp_fu_1361_p2 : STD_LOGIC_VECTOR (41 downto 0);
    signal grp_fu_1368_p2 : STD_LOGIC_VECTOR (38 downto 0);
    signal grp_fu_1375_p2 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_fu_1382_p2 : STD_LOGIC_VECTOR (41 downto 0);
    signal r_V_23_fu_527_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_23_fu_527_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal r_V_23_fu_527_p2 : STD_LOGIC_VECTOR (44 downto 0);
    signal sext_ln1245_9_fu_546_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal zext_ln1245_3_fu_543_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal tmp_26_fu_491_p4 : STD_LOGIC_VECTOR (21 downto 0);
    signal zext_ln1245_4_fu_559_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal sext_ln1245_12_fu_555_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal tmp_29_fu_509_p4 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp_30_fu_518_p4 : STD_LOGIC_VECTOR (21 downto 0);
    signal sext_ln1245_16_fu_572_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal sext_ln1245_15_fu_568_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal sext_ln1245_1_fu_582_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal sext_ln1245_2_fu_585_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal ret_V_25_fu_588_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_1_fu_594_p4 : STD_LOGIC_VECTOR (19 downto 0);
    signal trunc_ln902_fu_616_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_mask_fu_620_p3 : STD_LOGIC_VECTOR (27 downto 0);
    signal sext_ln901_fu_604_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal icmp_ln902_fu_628_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ret_V_fu_634_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal p_Result_s_fu_608_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln901_fu_640_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal sext_ln1245_4_fu_656_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal sext_ln1245_5_fu_659_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal ret_V_28_fu_662_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_4_fu_668_p4 : STD_LOGIC_VECTOR (19 downto 0);
    signal trunc_ln902_1_fu_690_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_mask1_fu_694_p3 : STD_LOGIC_VECTOR (27 downto 0);
    signal sext_ln901_1_fu_678_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal icmp_ln902_1_fu_702_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ret_V_6_fu_708_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal p_Result_1_fu_682_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln901_1_fu_714_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal sext_ln1245_8_fu_730_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal zext_ln1245_2_fu_733_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal ret_V_31_fu_736_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_7_fu_742_p4 : STD_LOGIC_VECTOR (19 downto 0);
    signal trunc_ln902_2_fu_764_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_mask2_fu_768_p3 : STD_LOGIC_VECTOR (27 downto 0);
    signal sext_ln901_2_fu_752_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal icmp_ln902_2_fu_776_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ret_V_10_fu_782_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal p_Result_2_fu_756_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln901_2_fu_788_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal tmp_17_fu_804_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_19_fu_820_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_21_fu_836_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal sext_ln1245_10_fu_852_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal sext_ln1245_11_fu_855_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal ret_V_34_fu_858_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_s_fu_864_p4 : STD_LOGIC_VECTOR (19 downto 0);
    signal trunc_ln902_3_fu_886_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_mask3_fu_890_p3 : STD_LOGIC_VECTOR (27 downto 0);
    signal sext_ln901_3_fu_874_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal icmp_ln902_3_fu_898_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ret_V_14_fu_904_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal p_Result_3_fu_878_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln901_3_fu_910_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal sext_ln1245_13_fu_926_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal sext_ln1245_14_fu_929_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal ret_V_37_fu_932_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_12_fu_938_p4 : STD_LOGIC_VECTOR (19 downto 0);
    signal trunc_ln902_4_fu_960_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_mask4_fu_964_p3 : STD_LOGIC_VECTOR (27 downto 0);
    signal sext_ln901_4_fu_948_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal icmp_ln902_4_fu_972_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ret_V_18_fu_978_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal p_Result_4_fu_952_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln901_4_fu_984_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal sext_ln1245_17_fu_1000_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal zext_ln1245_5_fu_1003_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal ret_V_40_fu_1006_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_13_fu_1012_p4 : STD_LOGIC_VECTOR (19 downto 0);
    signal trunc_ln902_5_fu_1034_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_mask5_fu_1038_p3 : STD_LOGIC_VECTOR (27 downto 0);
    signal sext_ln901_5_fu_1022_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal icmp_ln902_5_fu_1046_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ret_V_22_fu_1052_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal p_Result_5_fu_1026_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln901_5_fu_1058_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal tmp_35_fu_1074_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_37_fu_1090_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_39_fu_1106_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal sext_ln882_fu_1122_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal select_ln109_fu_1131_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_18_fu_1138_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln315_fu_1146_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln882_1_fu_1125_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal select_ln109_1_fu_1158_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_20_fu_1165_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln315_1_fu_1173_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln882_2_fu_1128_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal select_ln109_2_fu_1185_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_22_fu_1192_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln315_2_fu_1200_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln882_3_fu_1212_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal select_ln109_3_fu_1221_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_36_fu_1228_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln315_3_fu_1236_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln882_4_fu_1215_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal select_ln109_4_fu_1248_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_38_fu_1255_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln315_4_fu_1263_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln882_5_fu_1218_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal select_ln109_5_fu_1275_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_40_fu_1282_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln315_5_fu_1290_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln315_5_fu_1294_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln315_4_fu_1267_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln315_3_fu_1240_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln315_2_fu_1204_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln315_1_fu_1177_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln315_fu_1150_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1319_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1319_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_1326_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1326_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_1333_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1333_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal grp_fu_1340_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1340_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_1347_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1347_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_1354_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1354_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_1361_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1361_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_1368_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1368_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal grp_fu_1375_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1375_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_1382_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1382_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_1319_ce : STD_LOGIC;
    signal grp_fu_1326_ce : STD_LOGIC;
    signal grp_fu_1333_ce : STD_LOGIC;
    signal grp_fu_1340_ce : STD_LOGIC;
    signal grp_fu_1347_ce : STD_LOGIC;
    signal grp_fu_1354_ce : STD_LOGIC;
    signal grp_fu_1361_ce : STD_LOGIC;
    signal grp_fu_1368_ce : STD_LOGIC;
    signal grp_fu_1375_ce : STD_LOGIC;
    signal grp_fu_1382_ce : STD_LOGIC;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter2_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter3_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter4_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter5_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal grp_fu_1319_p00 : STD_LOGIC_VECTOR (41 downto 0);
    signal grp_fu_1326_p00 : STD_LOGIC_VECTOR (41 downto 0);
    signal grp_fu_1333_p00 : STD_LOGIC_VECTOR (38 downto 0);
    signal grp_fu_1340_p00 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_fu_1347_p00 : STD_LOGIC_VECTOR (41 downto 0);
    signal grp_fu_1354_p00 : STD_LOGIC_VECTOR (41 downto 0);
    signal grp_fu_1361_p00 : STD_LOGIC_VECTOR (41 downto 0);
    signal grp_fu_1368_p00 : STD_LOGIC_VECTOR (38 downto 0);
    signal grp_fu_1375_p00 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_fu_1382_p00 : STD_LOGIC_VECTOR (41 downto 0);
    signal r_V_11_fu_424_p00 : STD_LOGIC_VECTOR (44 downto 0);
    signal r_V_13_fu_325_p00 : STD_LOGIC_VECTOR (44 downto 0);
    signal r_V_1_fu_271_p00 : STD_LOGIC_VECTOR (44 downto 0);
    signal r_V_23_fu_527_p00 : STD_LOGIC_VECTOR (44 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component ISPPipeline_accel_mul_16ns_30ns_45_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (29 downto 0);
        dout : OUT STD_LOGIC_VECTOR (44 downto 0) );
    end component;


    component ISPPipeline_accel_mul_16ns_29s_45_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (28 downto 0);
        dout : OUT STD_LOGIC_VECTOR (44 downto 0) );
    end component;


    component ISPPipeline_accel_mul_mul_16ns_26s_42_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (25 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (41 downto 0) );
    end component;


    component ISPPipeline_accel_mul_mul_16ns_23s_39_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (22 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (38 downto 0) );
    end component;


    component ISPPipeline_accel_mul_mul_16ns_24s_40_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (23 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (39 downto 0) );
    end component;


    component ISPPipeline_accel_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    mul_16ns_30ns_45_1_1_U565 : component ISPPipeline_accel_mul_16ns_30ns_45_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 30,
        dout_WIDTH => 45)
    port map (
        din0 => r_V_1_fu_271_p0,
        din1 => r_V_1_fu_271_p1,
        dout => r_V_1_fu_271_p2);

    mul_16ns_29s_45_1_1_U566 : component ISPPipeline_accel_mul_16ns_29s_45_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 29,
        dout_WIDTH => 45)
    port map (
        din0 => r_V_3_fu_290_p0,
        din1 => r_V_3_fu_290_p1,
        dout => r_V_3_fu_290_p2);

    mul_16ns_30ns_45_1_1_U567 : component ISPPipeline_accel_mul_16ns_30ns_45_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 30,
        dout_WIDTH => 45)
    port map (
        din0 => r_V_7_fu_306_p0,
        din1 => r_V_7_fu_306_p1,
        dout => r_V_7_fu_306_p2);

    mul_16ns_30ns_45_1_1_U568 : component ISPPipeline_accel_mul_16ns_30ns_45_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 30,
        dout_WIDTH => 45)
    port map (
        din0 => r_V_13_fu_325_p0,
        din1 => r_V_13_fu_325_p1,
        dout => r_V_13_fu_325_p2);

    mul_16ns_29s_45_1_1_U569 : component ISPPipeline_accel_mul_16ns_29s_45_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 29,
        dout_WIDTH => 45)
    port map (
        din0 => r_V_15_fu_344_p0,
        din1 => r_V_15_fu_344_p1,
        dout => r_V_15_fu_344_p2);

    mul_16ns_30ns_45_1_1_U570 : component ISPPipeline_accel_mul_16ns_30ns_45_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 30,
        dout_WIDTH => 45)
    port map (
        din0 => r_V_19_fu_360_p0,
        din1 => r_V_19_fu_360_p1,
        dout => r_V_19_fu_360_p2);

    mul_16ns_30ns_45_1_1_U571 : component ISPPipeline_accel_mul_16ns_30ns_45_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 30,
        dout_WIDTH => 45)
    port map (
        din0 => r_V_11_fu_424_p0,
        din1 => r_V_11_fu_424_p1,
        dout => r_V_11_fu_424_p2);

    mul_16ns_30ns_45_1_1_U572 : component ISPPipeline_accel_mul_16ns_30ns_45_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 30,
        dout_WIDTH => 45)
    port map (
        din0 => r_V_23_fu_527_p0,
        din1 => r_V_23_fu_527_p1,
        dout => r_V_23_fu_527_p2);

    mul_mul_16ns_26s_42_4_1_U573 : component ISPPipeline_accel_mul_mul_16ns_26s_42_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 26,
        dout_WIDTH => 42)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1319_p0,
        din1 => grp_fu_1319_p1,
        ce => grp_fu_1319_ce,
        dout => grp_fu_1319_p2);

    mul_mul_16ns_26s_42_4_1_U574 : component ISPPipeline_accel_mul_mul_16ns_26s_42_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 26,
        dout_WIDTH => 42)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1326_p0,
        din1 => grp_fu_1326_p1,
        ce => grp_fu_1326_ce,
        dout => grp_fu_1326_p2);

    mul_mul_16ns_23s_39_4_1_U575 : component ISPPipeline_accel_mul_mul_16ns_23s_39_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 23,
        dout_WIDTH => 39)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1333_p0,
        din1 => grp_fu_1333_p1,
        ce => grp_fu_1333_ce,
        dout => grp_fu_1333_p2);

    mul_mul_16ns_24s_40_4_1_U576 : component ISPPipeline_accel_mul_mul_16ns_24s_40_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 24,
        dout_WIDTH => 40)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1340_p0,
        din1 => grp_fu_1340_p1,
        ce => grp_fu_1340_ce,
        dout => grp_fu_1340_p2);

    mul_mul_16ns_26s_42_4_1_U577 : component ISPPipeline_accel_mul_mul_16ns_26s_42_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 26,
        dout_WIDTH => 42)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1347_p0,
        din1 => grp_fu_1347_p1,
        ce => grp_fu_1347_ce,
        dout => grp_fu_1347_p2);

    mul_mul_16ns_26s_42_4_1_U578 : component ISPPipeline_accel_mul_mul_16ns_26s_42_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 26,
        dout_WIDTH => 42)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1354_p0,
        din1 => grp_fu_1354_p1,
        ce => grp_fu_1354_ce,
        dout => grp_fu_1354_p2);

    mul_mul_16ns_26s_42_4_1_U579 : component ISPPipeline_accel_mul_mul_16ns_26s_42_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 26,
        dout_WIDTH => 42)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1361_p0,
        din1 => grp_fu_1361_p1,
        ce => grp_fu_1361_ce,
        dout => grp_fu_1361_p2);

    mul_mul_16ns_23s_39_4_1_U580 : component ISPPipeline_accel_mul_mul_16ns_23s_39_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 23,
        dout_WIDTH => 39)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1368_p0,
        din1 => grp_fu_1368_p1,
        ce => grp_fu_1368_ce,
        dout => grp_fu_1368_p2);

    mul_mul_16ns_24s_40_4_1_U581 : component ISPPipeline_accel_mul_mul_16ns_24s_40_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 24,
        dout_WIDTH => 40)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1375_p0,
        din1 => grp_fu_1375_p1,
        ce => grp_fu_1375_ce,
        dout => grp_fu_1375_p2);

    mul_mul_16ns_26s_42_4_1_U582 : component ISPPipeline_accel_mul_mul_16ns_26s_42_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 26,
        dout_WIDTH => 42)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1382_p0,
        din1 => grp_fu_1382_p1,
        ce => grp_fu_1382_ce,
        dout => grp_fu_1382_p2);

    flow_control_loop_pipe_sequential_init_U : component ISPPipeline_accel_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter5_reg = ap_const_logic_1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage0)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    j_V_fu_126_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((icmp_ln245_fu_163_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                    j_V_fu_126 <= j_V_2_fu_157_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    j_V_fu_126 <= ap_const_lv11_0;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
                ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
                b_V_1_reg_1450 <= ltm_in_4199_dout(95 downto 80);
                b_V_reg_1410 <= ltm_in_4199_dout(47 downto 32);
                g_V_1_reg_1445 <= ltm_in_4199_dout(79 downto 64);
                g_V_reg_1405 <= ltm_in_4199_dout(31 downto 16);
                r_V_12_reg_1440 <= ltm_in_4199_dout(63 downto 48);
                r_V_reg_1400 <= r_V_fu_174_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
                ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
                ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
                b_V_1_reg_1450_pp0_iter2_reg <= b_V_1_reg_1450;
                b_V_1_reg_1450_pp0_iter3_reg <= b_V_1_reg_1450_pp0_iter2_reg;
                b_V_reg_1410_pp0_iter2_reg <= b_V_reg_1410;
                b_V_reg_1410_pp0_iter3_reg <= b_V_reg_1410_pp0_iter2_reg;
                g_V_1_reg_1445_pp0_iter2_reg <= g_V_1_reg_1445;
                g_V_reg_1405_pp0_iter2_reg <= g_V_reg_1405;
                icmp_ln109_1_reg_1590 <= icmp_ln109_1_fu_830_p2;
                icmp_ln109_2_reg_1595 <= icmp_ln109_2_fu_846_p2;
                icmp_ln109_3_reg_1615 <= icmp_ln109_3_fu_1084_p2;
                icmp_ln109_4_reg_1620 <= icmp_ln109_4_fu_1100_p2;
                icmp_ln109_5_reg_1625 <= icmp_ln109_5_fu_1116_p2;
                icmp_ln109_reg_1585 <= icmp_ln109_fu_814_p2;
                r_V_12_reg_1440_pp0_iter2_reg <= r_V_12_reg_1440;
                r_V_reg_1400_pp0_iter2_reg <= r_V_reg_1400;
                ret_V_24_reg_1525 <= ret_V_24_fu_446_p2;
                ret_V_26_reg_1570 <= ret_V_26_fu_648_p3;
                ret_V_27_reg_1530 <= ret_V_27_fu_459_p2;
                ret_V_29_reg_1575 <= ret_V_29_fu_722_p3;
                ret_V_30_reg_1535 <= ret_V_30_fu_473_p2;
                ret_V_32_reg_1580 <= ret_V_32_fu_796_p3;
                ret_V_33_reg_1555 <= ret_V_33_fu_549_p2;
                ret_V_35_reg_1600 <= ret_V_35_fu_918_p3;
                ret_V_36_reg_1560 <= ret_V_36_fu_562_p2;
                ret_V_38_reg_1605 <= ret_V_38_fu_992_p3;
                ret_V_39_reg_1565 <= ret_V_39_fu_576_p2;
                ret_V_41_reg_1610 <= ret_V_41_fu_1066_p3;
                tmp_11_reg_1520 <= r_V_11_fu_424_p2(44 downto 20);
                tmp_23_reg_1495 <= r_V_13_fu_325_p2(44 downto 20);
                tmp_24_reg_1500 <= r_V_15_fu_344_p2(44 downto 20);
                tmp_25_reg_1540 <= grp_fu_1354_p2(41 downto 20);
                tmp_27_reg_1505 <= r_V_19_fu_360_p2(44 downto 20);
                tmp_28_reg_1545 <= grp_fu_1368_p2(38 downto 20);
                tmp_2_reg_1485 <= r_V_3_fu_290_p2(44 downto 20);
                tmp_31_reg_1550 <= r_V_23_fu_527_p2(44 downto 20);
                tmp_3_reg_1510 <= grp_fu_1319_p2(41 downto 20);
                tmp_6_reg_1490 <= r_V_7_fu_306_p2(44 downto 20);
                tmp_8_reg_1515 <= grp_fu_1333_p2(38 downto 20);
                tmp_reg_1480 <= r_V_1_fu_271_p2(44 downto 20);
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter6, ltm_in_4199_empty_n, lsc_out_4200_full_n)
    begin
                ap_block_pp0_stage0_01001 <= (((lsc_out_4200_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1)) or ((ltm_in_4199_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter6, ltm_in_4199_empty_n, lsc_out_4200_full_n)
    begin
                ap_block_pp0_stage0_11001 <= (((lsc_out_4200_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1)) or ((ltm_in_4199_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter6, ltm_in_4199_empty_n, lsc_out_4200_full_n)
    begin
                ap_block_pp0_stage0_subdone <= (((lsc_out_4200_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1)) or ((ltm_in_4199_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;

        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state2_pp0_stage0_iter1_assign_proc : process(ltm_in_4199_empty_n)
    begin
                ap_block_state2_pp0_stage0_iter1 <= (ltm_in_4199_empty_n = ap_const_logic_0);
    end process;

        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state7_pp0_stage0_iter6_assign_proc : process(lsc_out_4200_full_n)
    begin
                ap_block_state7_pp0_stage0_iter6 <= (lsc_out_4200_full_n = ap_const_logic_0);
    end process;


    ap_condition_exit_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, icmp_ln245_fu_163_p2)
    begin
        if (((icmp_ln245_fu_163_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_block_pp0_stage0_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter5_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter5_reg = ap_const_logic_1))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_start_int = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6)
    begin
        if (((ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage0;

    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_j_V_1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, j_V_fu_126, ap_loop_init)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_j_V_1 <= ap_const_lv11_0;
        else 
            ap_sig_allocacmp_j_V_1 <= j_V_fu_126;
        end if; 
    end process;

    b_V_1_fu_238_p4 <= ltm_in_4199_dout(95 downto 80);
    b_V_fu_188_p4 <= ltm_in_4199_dout(47 downto 32);
    g_V_1_fu_228_p4 <= ltm_in_4199_dout(79 downto 64);
    g_V_fu_178_p4 <= ltm_in_4199_dout(31 downto 16);

    grp_fu_1319_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1319_ce <= ap_const_logic_1;
        else 
            grp_fu_1319_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1319_p0 <= grp_fu_1319_p00(16 - 1 downto 0);
    grp_fu_1319_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(b_V_fu_188_p4),42));
    grp_fu_1319_p1 <= ap_const_lv42_3FFFED5CFAA(26 - 1 downto 0);

    grp_fu_1326_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1326_ce <= ap_const_logic_1;
        else 
            grp_fu_1326_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1326_p0 <= grp_fu_1326_p00(16 - 1 downto 0);
    grp_fu_1326_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_fu_174_p1),42));
    grp_fu_1326_p1 <= ap_const_lv42_3FFFE01A36E(26 - 1 downto 0);

    grp_fu_1333_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1333_ce <= ap_const_logic_1;
        else 
            grp_fu_1333_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1333_p0 <= grp_fu_1333_p00(16 - 1 downto 0);
    grp_fu_1333_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(b_V_fu_188_p4),39));
    grp_fu_1333_p1 <= ap_const_lv39_7FFFDE00D1(23 - 1 downto 0);

    grp_fu_1340_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1340_ce <= ap_const_logic_1;
        else 
            grp_fu_1340_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1340_p0 <= grp_fu_1340_p00(16 - 1 downto 0);
    grp_fu_1340_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_fu_174_p1),40));
    grp_fu_1340_p1 <= ap_const_lv40_FFFFB573EA(24 - 1 downto 0);

    grp_fu_1347_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1347_ce <= ap_const_logic_1;
        else 
            grp_fu_1347_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1347_p0 <= grp_fu_1347_p00(16 - 1 downto 0);
    grp_fu_1347_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(g_V_fu_178_p4),42));
    grp_fu_1347_p1 <= ap_const_lv42_3FFFE63F141(26 - 1 downto 0);

    grp_fu_1354_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1354_ce <= ap_const_logic_1;
        else 
            grp_fu_1354_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1354_p0 <= grp_fu_1354_p00(16 - 1 downto 0);
    grp_fu_1354_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(b_V_1_fu_238_p4),42));
    grp_fu_1354_p1 <= ap_const_lv42_3FFFED5CFAA(26 - 1 downto 0);

    grp_fu_1361_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1361_ce <= ap_const_logic_1;
        else 
            grp_fu_1361_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1361_p0 <= grp_fu_1361_p00(16 - 1 downto 0);
    grp_fu_1361_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_12_fu_218_p4),42));
    grp_fu_1361_p1 <= ap_const_lv42_3FFFE01A36E(26 - 1 downto 0);

    grp_fu_1368_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1368_ce <= ap_const_logic_1;
        else 
            grp_fu_1368_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1368_p0 <= grp_fu_1368_p00(16 - 1 downto 0);
    grp_fu_1368_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(b_V_1_fu_238_p4),39));
    grp_fu_1368_p1 <= ap_const_lv39_7FFFDE00D1(23 - 1 downto 0);

    grp_fu_1375_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1375_ce <= ap_const_logic_1;
        else 
            grp_fu_1375_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1375_p0 <= grp_fu_1375_p00(16 - 1 downto 0);
    grp_fu_1375_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_12_fu_218_p4),40));
    grp_fu_1375_p1 <= ap_const_lv40_FFFFB573EA(24 - 1 downto 0);

    grp_fu_1382_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1382_ce <= ap_const_logic_1;
        else 
            grp_fu_1382_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1382_p0 <= grp_fu_1382_p00(16 - 1 downto 0);
    grp_fu_1382_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(g_V_1_fu_228_p4),42));
    grp_fu_1382_p1 <= ap_const_lv42_3FFFE63F141(26 - 1 downto 0);
    icmp_ln109_1_fu_830_p2 <= "1" when (signed(tmp_19_fu_820_p4) > signed(ap_const_lv5_0)) else "0";
    icmp_ln109_2_fu_846_p2 <= "1" when (signed(tmp_21_fu_836_p4) > signed(ap_const_lv5_0)) else "0";
    icmp_ln109_3_fu_1084_p2 <= "1" when (signed(tmp_35_fu_1074_p4) > signed(ap_const_lv5_0)) else "0";
    icmp_ln109_4_fu_1100_p2 <= "1" when (signed(tmp_37_fu_1090_p4) > signed(ap_const_lv5_0)) else "0";
    icmp_ln109_5_fu_1116_p2 <= "1" when (signed(tmp_39_fu_1106_p4) > signed(ap_const_lv5_0)) else "0";
    icmp_ln109_fu_814_p2 <= "1" when (signed(tmp_17_fu_804_p4) > signed(ap_const_lv5_0)) else "0";
    icmp_ln245_fu_163_p2 <= "1" when (ap_sig_allocacmp_j_V_1 = width) else "0";
    icmp_ln902_1_fu_702_p2 <= "1" when (p_mask1_fu_694_p3 = ap_const_lv28_0) else "0";
    icmp_ln902_2_fu_776_p2 <= "1" when (p_mask2_fu_768_p3 = ap_const_lv28_0) else "0";
    icmp_ln902_3_fu_898_p2 <= "1" when (p_mask3_fu_890_p3 = ap_const_lv28_0) else "0";
    icmp_ln902_4_fu_972_p2 <= "1" when (p_mask4_fu_964_p3 = ap_const_lv28_0) else "0";
    icmp_ln902_5_fu_1046_p2 <= "1" when (p_mask5_fu_1038_p3 = ap_const_lv28_0) else "0";
    icmp_ln902_fu_628_p2 <= "1" when (p_mask_fu_620_p3 = ap_const_lv28_0) else "0";
    j_V_2_fu_157_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_j_V_1) + unsigned(ap_const_lv11_1));

    lsc_out_4200_blk_n_assign_proc : process(ap_enable_reg_pp0_iter6, lsc_out_4200_full_n, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then 
            lsc_out_4200_blk_n <= lsc_out_4200_full_n;
        else 
            lsc_out_4200_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    lsc_out_4200_din <= (((((select_ln315_5_fu_1294_p3 & select_ln315_4_fu_1267_p3) & select_ln315_3_fu_1240_p3) & select_ln315_2_fu_1204_p3) & select_ln315_1_fu_1177_p3) & select_ln315_fu_1150_p3);

    lsc_out_4200_write_assign_proc : process(ap_enable_reg_pp0_iter6, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then 
            lsc_out_4200_write <= ap_const_logic_1;
        else 
            lsc_out_4200_write <= ap_const_logic_0;
        end if; 
    end process;


    ltm_in_4199_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ltm_in_4199_empty_n, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ltm_in_4199_blk_n <= ltm_in_4199_empty_n;
        else 
            ltm_in_4199_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    ltm_in_4199_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ltm_in_4199_read <= ap_const_logic_1;
        else 
            ltm_in_4199_read <= ap_const_logic_0;
        end if; 
    end process;

    p_Result_1_fu_682_p3 <= ret_V_28_fu_662_p2(27 downto 27);
    p_Result_2_fu_756_p3 <= ret_V_31_fu_736_p2(27 downto 27);
    p_Result_3_fu_878_p3 <= ret_V_34_fu_858_p2(27 downto 27);
    p_Result_4_fu_952_p3 <= ret_V_37_fu_932_p2(27 downto 27);
    p_Result_5_fu_1026_p3 <= ret_V_40_fu_1006_p2(27 downto 27);
    p_Result_s_fu_608_p3 <= ret_V_25_fu_588_p2(27 downto 27);
    p_mask1_fu_694_p3 <= (ap_const_lv20_0 & trunc_ln902_1_fu_690_p1);
    p_mask2_fu_768_p3 <= (ap_const_lv20_0 & trunc_ln902_2_fu_764_p1);
    p_mask3_fu_890_p3 <= (ap_const_lv20_0 & trunc_ln902_3_fu_886_p1);
    p_mask4_fu_964_p3 <= (ap_const_lv20_0 & trunc_ln902_4_fu_960_p1);
    p_mask5_fu_1038_p3 <= (ap_const_lv20_0 & trunc_ln902_5_fu_1034_p1);
    p_mask_fu_620_p3 <= (ap_const_lv20_0 & trunc_ln902_fu_616_p1);
    r_V_11_fu_424_p0 <= r_V_11_fu_424_p00(16 - 1 downto 0);
    r_V_11_fu_424_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(b_V_reg_1410_pp0_iter3_reg),45));
    r_V_11_fu_424_p1 <= ap_const_lv45_11E631F8(30 - 1 downto 0);
    r_V_12_fu_218_p4 <= ltm_in_4199_dout(63 downto 48);
    r_V_13_fu_325_p0 <= r_V_13_fu_325_p00(16 - 1 downto 0);
    r_V_13_fu_325_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_12_reg_1440_pp0_iter2_reg),45));
    r_V_13_fu_325_p1 <= ap_const_lv45_1A916872(30 - 1 downto 0);
    r_V_15_fu_344_p0 <= zext_ln1168_12_fu_341_p1(16 - 1 downto 0);
    r_V_15_fu_344_p1 <= ap_const_lv45_1FFFF69930BE(29 - 1 downto 0);
    r_V_19_fu_360_p0 <= zext_ln1168_12_fu_341_p1(16 - 1 downto 0);
    r_V_19_fu_360_p1 <= ap_const_lv45_12205BC0(30 - 1 downto 0);
    r_V_1_fu_271_p0 <= r_V_1_fu_271_p00(16 - 1 downto 0);
    r_V_1_fu_271_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_reg_1400_pp0_iter2_reg),45));
    r_V_1_fu_271_p1 <= ap_const_lv45_1A916872(30 - 1 downto 0);
    r_V_23_fu_527_p0 <= r_V_23_fu_527_p00(16 - 1 downto 0);
    r_V_23_fu_527_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(b_V_1_reg_1450_pp0_iter3_reg),45));
    r_V_23_fu_527_p1 <= ap_const_lv45_11E631F8(30 - 1 downto 0);
    r_V_3_fu_290_p0 <= zext_ln1168_4_fu_287_p1(16 - 1 downto 0);
    r_V_3_fu_290_p1 <= ap_const_lv45_1FFFF69930BE(29 - 1 downto 0);
    r_V_7_fu_306_p0 <= zext_ln1168_4_fu_287_p1(16 - 1 downto 0);
    r_V_7_fu_306_p1 <= ap_const_lv45_12205BC0(30 - 1 downto 0);
    r_V_fu_174_p1 <= ltm_in_4199_dout(16 - 1 downto 0);
    ret_V_10_fu_782_p2 <= std_logic_vector(signed(sext_ln901_2_fu_752_p1) + signed(ap_const_lv21_1));
    ret_V_14_fu_904_p2 <= std_logic_vector(signed(sext_ln901_3_fu_874_p1) + signed(ap_const_lv21_1));
    ret_V_18_fu_978_p2 <= std_logic_vector(signed(sext_ln901_4_fu_948_p1) + signed(ap_const_lv21_1));
    ret_V_22_fu_1052_p2 <= std_logic_vector(signed(sext_ln901_5_fu_1022_p1) + signed(ap_const_lv21_1));
    ret_V_24_fu_446_p2 <= std_logic_vector(signed(sext_ln1245_fu_443_p1) + signed(zext_ln1245_fu_440_p1));
    ret_V_25_fu_588_p2 <= std_logic_vector(signed(sext_ln1245_1_fu_582_p1) + signed(sext_ln1245_2_fu_585_p1));
    ret_V_26_fu_648_p3 <= 
        select_ln901_fu_640_p3 when (p_Result_s_fu_608_p3(0) = '1') else 
        sext_ln901_fu_604_p1;
    ret_V_27_fu_459_p2 <= std_logic_vector(unsigned(zext_ln1245_1_fu_456_p1) + unsigned(sext_ln1245_3_fu_452_p1));
    ret_V_28_fu_662_p2 <= std_logic_vector(signed(sext_ln1245_4_fu_656_p1) + signed(sext_ln1245_5_fu_659_p1));
    ret_V_29_fu_722_p3 <= 
        select_ln901_1_fu_714_p3 when (p_Result_1_fu_682_p3(0) = '1') else 
        sext_ln901_1_fu_678_p1;
    ret_V_30_fu_473_p2 <= std_logic_vector(signed(sext_ln1245_7_fu_469_p1) + signed(sext_ln1245_6_fu_465_p1));
    ret_V_31_fu_736_p2 <= std_logic_vector(signed(sext_ln1245_8_fu_730_p1) + signed(zext_ln1245_2_fu_733_p1));
    ret_V_32_fu_796_p3 <= 
        select_ln901_2_fu_788_p3 when (p_Result_2_fu_756_p3(0) = '1') else 
        sext_ln901_2_fu_752_p1;
    ret_V_33_fu_549_p2 <= std_logic_vector(signed(sext_ln1245_9_fu_546_p1) + signed(zext_ln1245_3_fu_543_p1));
    ret_V_34_fu_858_p2 <= std_logic_vector(signed(sext_ln1245_10_fu_852_p1) + signed(sext_ln1245_11_fu_855_p1));
    ret_V_35_fu_918_p3 <= 
        select_ln901_3_fu_910_p3 when (p_Result_3_fu_878_p3(0) = '1') else 
        sext_ln901_3_fu_874_p1;
    ret_V_36_fu_562_p2 <= std_logic_vector(unsigned(zext_ln1245_4_fu_559_p1) + unsigned(sext_ln1245_12_fu_555_p1));
    ret_V_37_fu_932_p2 <= std_logic_vector(signed(sext_ln1245_13_fu_926_p1) + signed(sext_ln1245_14_fu_929_p1));
    ret_V_38_fu_992_p3 <= 
        select_ln901_4_fu_984_p3 when (p_Result_4_fu_952_p3(0) = '1') else 
        sext_ln901_4_fu_948_p1;
    ret_V_39_fu_576_p2 <= std_logic_vector(signed(sext_ln1245_16_fu_572_p1) + signed(sext_ln1245_15_fu_568_p1));
    ret_V_40_fu_1006_p2 <= std_logic_vector(signed(sext_ln1245_17_fu_1000_p1) + signed(zext_ln1245_5_fu_1003_p1));
    ret_V_41_fu_1066_p3 <= 
        select_ln901_5_fu_1058_p3 when (p_Result_5_fu_1026_p3(0) = '1') else 
        sext_ln901_5_fu_1022_p1;
    ret_V_6_fu_708_p2 <= std_logic_vector(signed(sext_ln901_1_fu_678_p1) + signed(ap_const_lv21_1));
    ret_V_fu_634_p2 <= std_logic_vector(signed(sext_ln901_fu_604_p1) + signed(ap_const_lv21_1));
    select_ln109_1_fu_1158_p3 <= 
        ap_const_lv22_FFFF when (icmp_ln109_1_reg_1590(0) = '1') else 
        sext_ln882_1_fu_1125_p1;
    select_ln109_2_fu_1185_p3 <= 
        ap_const_lv22_FFFF when (icmp_ln109_2_reg_1595(0) = '1') else 
        sext_ln882_2_fu_1128_p1;
    select_ln109_3_fu_1221_p3 <= 
        ap_const_lv22_FFFF when (icmp_ln109_3_reg_1615(0) = '1') else 
        sext_ln882_3_fu_1212_p1;
    select_ln109_4_fu_1248_p3 <= 
        ap_const_lv22_FFFF when (icmp_ln109_4_reg_1620(0) = '1') else 
        sext_ln882_4_fu_1215_p1;
    select_ln109_5_fu_1275_p3 <= 
        ap_const_lv22_FFFF when (icmp_ln109_5_reg_1625(0) = '1') else 
        sext_ln882_5_fu_1218_p1;
    select_ln109_fu_1131_p3 <= 
        ap_const_lv22_FFFF when (icmp_ln109_reg_1585(0) = '1') else 
        sext_ln882_fu_1122_p1;
    select_ln315_1_fu_1177_p3 <= 
        ap_const_lv16_0 when (tmp_20_fu_1165_p3(0) = '1') else 
        trunc_ln315_1_fu_1173_p1;
    select_ln315_2_fu_1204_p3 <= 
        ap_const_lv16_0 when (tmp_22_fu_1192_p3(0) = '1') else 
        trunc_ln315_2_fu_1200_p1;
    select_ln315_3_fu_1240_p3 <= 
        ap_const_lv16_0 when (tmp_36_fu_1228_p3(0) = '1') else 
        trunc_ln315_3_fu_1236_p1;
    select_ln315_4_fu_1267_p3 <= 
        ap_const_lv16_0 when (tmp_38_fu_1255_p3(0) = '1') else 
        trunc_ln315_4_fu_1263_p1;
    select_ln315_5_fu_1294_p3 <= 
        ap_const_lv16_0 when (tmp_40_fu_1282_p3(0) = '1') else 
        trunc_ln315_5_fu_1290_p1;
    select_ln315_fu_1150_p3 <= 
        ap_const_lv16_0 when (tmp_18_fu_1138_p3(0) = '1') else 
        trunc_ln315_fu_1146_p1;
    select_ln901_1_fu_714_p3 <= 
        sext_ln901_1_fu_678_p1 when (icmp_ln902_1_fu_702_p2(0) = '1') else 
        ret_V_6_fu_708_p2;
    select_ln901_2_fu_788_p3 <= 
        sext_ln901_2_fu_752_p1 when (icmp_ln902_2_fu_776_p2(0) = '1') else 
        ret_V_10_fu_782_p2;
    select_ln901_3_fu_910_p3 <= 
        sext_ln901_3_fu_874_p1 when (icmp_ln902_3_fu_898_p2(0) = '1') else 
        ret_V_14_fu_904_p2;
    select_ln901_4_fu_984_p3 <= 
        sext_ln901_4_fu_948_p1 when (icmp_ln902_4_fu_972_p2(0) = '1') else 
        ret_V_18_fu_978_p2;
    select_ln901_5_fu_1058_p3 <= 
        sext_ln901_5_fu_1022_p1 when (icmp_ln902_5_fu_1046_p2(0) = '1') else 
        ret_V_22_fu_1052_p2;
    select_ln901_fu_640_p3 <= 
        sext_ln901_fu_604_p1 when (icmp_ln902_fu_628_p2(0) = '1') else 
        ret_V_fu_634_p2;
        sext_ln1245_10_fu_852_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_V_33_reg_1555),28));

        sext_ln1245_11_fu_855_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_25_reg_1540),28));

        sext_ln1245_12_fu_555_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_26_fu_491_p4),27));

        sext_ln1245_13_fu_926_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_V_36_reg_1560),28));

        sext_ln1245_14_fu_929_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_28_reg_1545),28));

        sext_ln1245_15_fu_568_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_29_fu_509_p4),27));

        sext_ln1245_16_fu_572_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_30_fu_518_p4),27));

        sext_ln1245_17_fu_1000_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_V_39_reg_1565),28));

        sext_ln1245_1_fu_582_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_V_24_reg_1525),28));

        sext_ln1245_2_fu_585_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_3_reg_1510),28));

        sext_ln1245_3_fu_452_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_5_fu_388_p4),27));

        sext_ln1245_4_fu_656_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_V_27_reg_1530),28));

        sext_ln1245_5_fu_659_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_8_reg_1515),28));

        sext_ln1245_6_fu_465_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_9_fu_406_p4),27));

        sext_ln1245_7_fu_469_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_10_fu_415_p4),27));

        sext_ln1245_8_fu_730_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_V_30_reg_1535),28));

        sext_ln1245_9_fu_546_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_24_reg_1500),27));

        sext_ln1245_fu_443_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_2_reg_1485),27));

        sext_ln882_1_fu_1125_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_V_29_reg_1575),22));

        sext_ln882_2_fu_1128_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_V_32_reg_1580),22));

        sext_ln882_3_fu_1212_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_V_35_reg_1600),22));

        sext_ln882_4_fu_1215_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_V_38_reg_1605),22));

        sext_ln882_5_fu_1218_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_V_41_reg_1610),22));

        sext_ln882_fu_1122_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_V_26_reg_1570),22));

        sext_ln901_1_fu_678_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_4_fu_668_p4),21));

        sext_ln901_2_fu_752_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_7_fu_742_p4),21));

        sext_ln901_3_fu_874_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_s_fu_864_p4),21));

        sext_ln901_4_fu_948_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_12_fu_938_p4),21));

        sext_ln901_5_fu_1022_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_13_fu_1012_p4),21));

        sext_ln901_fu_604_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_1_fu_594_p4),21));

    tmp_10_fu_415_p4 <= grp_fu_1347_p2(41 downto 20);
    tmp_12_fu_938_p4 <= ret_V_37_fu_932_p2(27 downto 8);
    tmp_13_fu_1012_p4 <= ret_V_40_fu_1006_p2(27 downto 8);
    tmp_17_fu_804_p4 <= ret_V_26_fu_648_p3(20 downto 16);
    tmp_18_fu_1138_p3 <= select_ln109_fu_1131_p3(21 downto 21);
    tmp_19_fu_820_p4 <= ret_V_29_fu_722_p3(20 downto 16);
    tmp_1_fu_594_p4 <= ret_V_25_fu_588_p2(27 downto 8);
    tmp_20_fu_1165_p3 <= select_ln109_1_fu_1158_p3(21 downto 21);
    tmp_21_fu_836_p4 <= ret_V_32_fu_796_p3(20 downto 16);
    tmp_22_fu_1192_p3 <= select_ln109_2_fu_1185_p3(21 downto 21);
    tmp_26_fu_491_p4 <= grp_fu_1361_p2(41 downto 20);
    tmp_29_fu_509_p4 <= grp_fu_1375_p2(39 downto 20);
    tmp_30_fu_518_p4 <= grp_fu_1382_p2(41 downto 20);
    tmp_35_fu_1074_p4 <= ret_V_35_fu_918_p3(20 downto 16);
    tmp_36_fu_1228_p3 <= select_ln109_3_fu_1221_p3(21 downto 21);
    tmp_37_fu_1090_p4 <= ret_V_38_fu_992_p3(20 downto 16);
    tmp_38_fu_1255_p3 <= select_ln109_4_fu_1248_p3(21 downto 21);
    tmp_39_fu_1106_p4 <= ret_V_41_fu_1066_p3(20 downto 16);
    tmp_40_fu_1282_p3 <= select_ln109_5_fu_1275_p3(21 downto 21);
    tmp_4_fu_668_p4 <= ret_V_28_fu_662_p2(27 downto 8);
    tmp_5_fu_388_p4 <= grp_fu_1326_p2(41 downto 20);
    tmp_7_fu_742_p4 <= ret_V_31_fu_736_p2(27 downto 8);
    tmp_9_fu_406_p4 <= grp_fu_1340_p2(39 downto 20);
    tmp_s_fu_864_p4 <= ret_V_34_fu_858_p2(27 downto 8);
    trunc_ln315_1_fu_1173_p1 <= select_ln109_1_fu_1158_p3(16 - 1 downto 0);
    trunc_ln315_2_fu_1200_p1 <= select_ln109_2_fu_1185_p3(16 - 1 downto 0);
    trunc_ln315_3_fu_1236_p1 <= select_ln109_3_fu_1221_p3(16 - 1 downto 0);
    trunc_ln315_4_fu_1263_p1 <= select_ln109_4_fu_1248_p3(16 - 1 downto 0);
    trunc_ln315_5_fu_1290_p1 <= select_ln109_5_fu_1275_p3(16 - 1 downto 0);
    trunc_ln315_fu_1146_p1 <= select_ln109_fu_1131_p3(16 - 1 downto 0);
    trunc_ln902_1_fu_690_p1 <= ret_V_28_fu_662_p2(8 - 1 downto 0);
    trunc_ln902_2_fu_764_p1 <= ret_V_31_fu_736_p2(8 - 1 downto 0);
    trunc_ln902_3_fu_886_p1 <= ret_V_34_fu_858_p2(8 - 1 downto 0);
    trunc_ln902_4_fu_960_p1 <= ret_V_37_fu_932_p2(8 - 1 downto 0);
    trunc_ln902_5_fu_1034_p1 <= ret_V_40_fu_1006_p2(8 - 1 downto 0);
    trunc_ln902_fu_616_p1 <= ret_V_25_fu_588_p2(8 - 1 downto 0);
    zext_ln1168_12_fu_341_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(g_V_1_reg_1445_pp0_iter2_reg),45));
    zext_ln1168_4_fu_287_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(g_V_reg_1405_pp0_iter2_reg),45));
    zext_ln1245_1_fu_456_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_6_reg_1490),27));
    zext_ln1245_2_fu_733_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_11_reg_1520),28));
    zext_ln1245_3_fu_543_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_23_reg_1495),27));
    zext_ln1245_4_fu_559_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_27_reg_1505),27));
    zext_ln1245_5_fu_1003_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_31_reg_1550),28));
    zext_ln1245_fu_440_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_reg_1480),27));
end behav;
