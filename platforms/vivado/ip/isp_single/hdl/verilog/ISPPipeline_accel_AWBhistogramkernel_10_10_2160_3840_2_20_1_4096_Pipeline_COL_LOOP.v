// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
// Version: 2021.1
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module ISPPipeline_accel_AWBhistogramkernel_10_10_2160_3840_2_20_1_4096_Pipeline_COL_LOOP (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        demosaic_out_4198_dout,
        demosaic_out_4198_empty_n,
        demosaic_out_4198_read,
        impop_41_din,
        impop_41_full_n,
        impop_41_write,
        acc1_5_load_1,
        acc_5_load_1,
        old1_5_load,
        old_5_load,
        acc1_4_load_1,
        acc_4_load_1,
        old1_4_load,
        old_4_load,
        acc1_3_load_1,
        acc_3_load_1,
        old1_3_load,
        old_3_load,
        acc1_2_load_1,
        acc_2_load_1,
        old1_2_load,
        old_2_load,
        acc1_1_load_1,
        acc_1_load_1,
        old1_1_load,
        old_1_load,
        acc1_0_load_1,
        acc_0_load_1,
        old1_0_load,
        old_0_load,
        empty,
        tmp_hist_V_0_address0,
        tmp_hist_V_0_ce0,
        tmp_hist_V_0_we0,
        tmp_hist_V_0_d0,
        tmp_hist_V_0_q0,
        tmp_hist_V_1_address0,
        tmp_hist_V_1_ce0,
        tmp_hist_V_1_we0,
        tmp_hist_V_1_d0,
        tmp_hist_V_1_q0,
        tmp_hist_V_2_address0,
        tmp_hist_V_2_ce0,
        tmp_hist_V_2_we0,
        tmp_hist_V_2_d0,
        tmp_hist_V_2_q0,
        tmp_hist_V_3_address0,
        tmp_hist_V_3_ce0,
        tmp_hist_V_3_we0,
        tmp_hist_V_3_d0,
        tmp_hist_V_3_q0,
        tmp_hist_V_4_address0,
        tmp_hist_V_4_ce0,
        tmp_hist_V_4_we0,
        tmp_hist_V_4_d0,
        tmp_hist_V_4_q0,
        tmp_hist_V_5_address0,
        tmp_hist_V_5_ce0,
        tmp_hist_V_5_we0,
        tmp_hist_V_5_d0,
        tmp_hist_V_5_q0,
        tmp_hist1_V_0_address0,
        tmp_hist1_V_0_ce0,
        tmp_hist1_V_0_we0,
        tmp_hist1_V_0_d0,
        tmp_hist1_V_0_q0,
        tmp_hist1_V_1_address0,
        tmp_hist1_V_1_ce0,
        tmp_hist1_V_1_we0,
        tmp_hist1_V_1_d0,
        tmp_hist1_V_1_q0,
        tmp_hist1_V_2_address0,
        tmp_hist1_V_2_ce0,
        tmp_hist1_V_2_we0,
        tmp_hist1_V_2_d0,
        tmp_hist1_V_2_q0,
        tmp_hist1_V_3_address0,
        tmp_hist1_V_3_ce0,
        tmp_hist1_V_3_we0,
        tmp_hist1_V_3_d0,
        tmp_hist1_V_3_q0,
        tmp_hist1_V_4_address0,
        tmp_hist1_V_4_ce0,
        tmp_hist1_V_4_we0,
        tmp_hist1_V_4_d0,
        tmp_hist1_V_4_q0,
        tmp_hist1_V_5_address0,
        tmp_hist1_V_5_ce0,
        tmp_hist1_V_5_we0,
        tmp_hist1_V_5_d0,
        tmp_hist1_V_5_q0,
        tmp_acc1_10_out,
        tmp_acc1_10_out_ap_vld,
        tmp_acc_10_out,
        tmp_acc_10_out_ap_vld,
        tmp1_11_out,
        tmp1_11_out_ap_vld,
        tmp_11_out,
        tmp_11_out_ap_vld,
        tmp_acc1_8_out,
        tmp_acc1_8_out_ap_vld,
        tmp_acc_8_out,
        tmp_acc_8_out_ap_vld,
        tmp1_10_out,
        tmp1_10_out_ap_vld,
        tmp_10_out,
        tmp_10_out_ap_vld,
        tmp_acc1_6_out,
        tmp_acc1_6_out_ap_vld,
        tmp_acc_6_out,
        tmp_acc_6_out_ap_vld,
        tmp1_9_out,
        tmp1_9_out_ap_vld,
        tmp_9_out,
        tmp_9_out_ap_vld,
        tmp_acc1_4_out,
        tmp_acc1_4_out_ap_vld,
        tmp_acc_4_out,
        tmp_acc_4_out_ap_vld,
        tmp1_8_out,
        tmp1_8_out_ap_vld,
        tmp_8_out,
        tmp_8_out_ap_vld,
        tmp_acc1_2_out,
        tmp_acc1_2_out_ap_vld,
        tmp_acc_2_out,
        tmp_acc_2_out_ap_vld,
        tmp1_7_out,
        tmp1_7_out_ap_vld,
        tmp_7_out,
        tmp_7_out_ap_vld,
        tmp_acc1_out,
        tmp_acc1_out_ap_vld,
        tmp_acc_out,
        tmp_acc_out_ap_vld,
        tmp1_6_out,
        tmp1_6_out_ap_vld,
        tmp_6_out,
        tmp_6_out_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 2'd1;
parameter    ap_ST_fsm_pp0_stage1 = 2'd2;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [95:0] demosaic_out_4198_dout;
input   demosaic_out_4198_empty_n;
output   demosaic_out_4198_read;
output  [95:0] impop_41_din;
input   impop_41_full_n;
output   impop_41_write;
input  [31:0] acc1_5_load_1;
input  [31:0] acc_5_load_1;
input  [31:0] old1_5_load;
input  [31:0] old_5_load;
input  [31:0] acc1_4_load_1;
input  [31:0] acc_4_load_1;
input  [31:0] old1_4_load;
input  [31:0] old_4_load;
input  [31:0] acc1_3_load_1;
input  [31:0] acc_3_load_1;
input  [31:0] old1_3_load;
input  [31:0] old_3_load;
input  [31:0] acc1_2_load_1;
input  [31:0] acc_2_load_1;
input  [31:0] old1_2_load;
input  [31:0] old_2_load;
input  [31:0] acc1_1_load_1;
input  [31:0] acc_1_load_1;
input  [31:0] old1_1_load;
input  [31:0] old_1_load;
input  [31:0] acc1_0_load_1;
input  [31:0] acc_0_load_1;
input  [31:0] old1_0_load;
input  [31:0] old_0_load;
input  [11:0] empty;
output  [11:0] tmp_hist_V_0_address0;
output   tmp_hist_V_0_ce0;
output   tmp_hist_V_0_we0;
output  [31:0] tmp_hist_V_0_d0;
input  [31:0] tmp_hist_V_0_q0;
output  [11:0] tmp_hist_V_1_address0;
output   tmp_hist_V_1_ce0;
output   tmp_hist_V_1_we0;
output  [31:0] tmp_hist_V_1_d0;
input  [31:0] tmp_hist_V_1_q0;
output  [11:0] tmp_hist_V_2_address0;
output   tmp_hist_V_2_ce0;
output   tmp_hist_V_2_we0;
output  [31:0] tmp_hist_V_2_d0;
input  [31:0] tmp_hist_V_2_q0;
output  [11:0] tmp_hist_V_3_address0;
output   tmp_hist_V_3_ce0;
output   tmp_hist_V_3_we0;
output  [31:0] tmp_hist_V_3_d0;
input  [31:0] tmp_hist_V_3_q0;
output  [11:0] tmp_hist_V_4_address0;
output   tmp_hist_V_4_ce0;
output   tmp_hist_V_4_we0;
output  [31:0] tmp_hist_V_4_d0;
input  [31:0] tmp_hist_V_4_q0;
output  [11:0] tmp_hist_V_5_address0;
output   tmp_hist_V_5_ce0;
output   tmp_hist_V_5_we0;
output  [31:0] tmp_hist_V_5_d0;
input  [31:0] tmp_hist_V_5_q0;
output  [11:0] tmp_hist1_V_0_address0;
output   tmp_hist1_V_0_ce0;
output   tmp_hist1_V_0_we0;
output  [31:0] tmp_hist1_V_0_d0;
input  [31:0] tmp_hist1_V_0_q0;
output  [11:0] tmp_hist1_V_1_address0;
output   tmp_hist1_V_1_ce0;
output   tmp_hist1_V_1_we0;
output  [31:0] tmp_hist1_V_1_d0;
input  [31:0] tmp_hist1_V_1_q0;
output  [11:0] tmp_hist1_V_2_address0;
output   tmp_hist1_V_2_ce0;
output   tmp_hist1_V_2_we0;
output  [31:0] tmp_hist1_V_2_d0;
input  [31:0] tmp_hist1_V_2_q0;
output  [11:0] tmp_hist1_V_3_address0;
output   tmp_hist1_V_3_ce0;
output   tmp_hist1_V_3_we0;
output  [31:0] tmp_hist1_V_3_d0;
input  [31:0] tmp_hist1_V_3_q0;
output  [11:0] tmp_hist1_V_4_address0;
output   tmp_hist1_V_4_ce0;
output   tmp_hist1_V_4_we0;
output  [31:0] tmp_hist1_V_4_d0;
input  [31:0] tmp_hist1_V_4_q0;
output  [11:0] tmp_hist1_V_5_address0;
output   tmp_hist1_V_5_ce0;
output   tmp_hist1_V_5_we0;
output  [31:0] tmp_hist1_V_5_d0;
input  [31:0] tmp_hist1_V_5_q0;
output  [31:0] tmp_acc1_10_out;
output   tmp_acc1_10_out_ap_vld;
output  [31:0] tmp_acc_10_out;
output   tmp_acc_10_out_ap_vld;
output  [31:0] tmp1_11_out;
output   tmp1_11_out_ap_vld;
output  [31:0] tmp_11_out;
output   tmp_11_out_ap_vld;
output  [31:0] tmp_acc1_8_out;
output   tmp_acc1_8_out_ap_vld;
output  [31:0] tmp_acc_8_out;
output   tmp_acc_8_out_ap_vld;
output  [31:0] tmp1_10_out;
output   tmp1_10_out_ap_vld;
output  [31:0] tmp_10_out;
output   tmp_10_out_ap_vld;
output  [31:0] tmp_acc1_6_out;
output   tmp_acc1_6_out_ap_vld;
output  [31:0] tmp_acc_6_out;
output   tmp_acc_6_out_ap_vld;
output  [31:0] tmp1_9_out;
output   tmp1_9_out_ap_vld;
output  [31:0] tmp_9_out;
output   tmp_9_out_ap_vld;
output  [31:0] tmp_acc1_4_out;
output   tmp_acc1_4_out_ap_vld;
output  [31:0] tmp_acc_4_out;
output   tmp_acc_4_out_ap_vld;
output  [31:0] tmp1_8_out;
output   tmp1_8_out_ap_vld;
output  [31:0] tmp_8_out;
output   tmp_8_out_ap_vld;
output  [31:0] tmp_acc1_2_out;
output   tmp_acc1_2_out_ap_vld;
output  [31:0] tmp_acc_2_out;
output   tmp_acc_2_out_ap_vld;
output  [31:0] tmp1_7_out;
output   tmp1_7_out_ap_vld;
output  [31:0] tmp_7_out;
output   tmp_7_out_ap_vld;
output  [31:0] tmp_acc1_out;
output   tmp_acc1_out_ap_vld;
output  [31:0] tmp_acc_out;
output   tmp_acc_out_ap_vld;
output  [31:0] tmp1_6_out;
output   tmp1_6_out_ap_vld;
output  [31:0] tmp_6_out;
output   tmp_6_out_ap_vld;

reg ap_idle;
reg demosaic_out_4198_read;
reg impop_41_write;
reg[11:0] tmp_hist_V_0_address0;
reg tmp_hist_V_0_ce0;
reg tmp_hist_V_0_we0;
reg[11:0] tmp_hist_V_1_address0;
reg tmp_hist_V_1_ce0;
reg tmp_hist_V_1_we0;
reg[11:0] tmp_hist_V_2_address0;
reg tmp_hist_V_2_ce0;
reg tmp_hist_V_2_we0;
reg[11:0] tmp_hist_V_3_address0;
reg tmp_hist_V_3_ce0;
reg tmp_hist_V_3_we0;
reg[11:0] tmp_hist_V_4_address0;
reg tmp_hist_V_4_ce0;
reg tmp_hist_V_4_we0;
reg[11:0] tmp_hist_V_5_address0;
reg tmp_hist_V_5_ce0;
reg tmp_hist_V_5_we0;
reg[11:0] tmp_hist1_V_0_address0;
reg tmp_hist1_V_0_ce0;
reg tmp_hist1_V_0_we0;
reg[11:0] tmp_hist1_V_1_address0;
reg tmp_hist1_V_1_ce0;
reg tmp_hist1_V_1_we0;
reg[11:0] tmp_hist1_V_2_address0;
reg tmp_hist1_V_2_ce0;
reg tmp_hist1_V_2_we0;
reg[11:0] tmp_hist1_V_3_address0;
reg tmp_hist1_V_3_ce0;
reg tmp_hist1_V_3_we0;
reg[11:0] tmp_hist1_V_4_address0;
reg tmp_hist1_V_4_ce0;
reg tmp_hist1_V_4_we0;
reg[11:0] tmp_hist1_V_5_address0;
reg tmp_hist1_V_5_ce0;
reg tmp_hist1_V_5_we0;
reg tmp_acc1_10_out_ap_vld;
reg tmp_acc_10_out_ap_vld;
reg tmp1_11_out_ap_vld;
reg tmp_11_out_ap_vld;
reg tmp_acc1_8_out_ap_vld;
reg tmp_acc_8_out_ap_vld;
reg tmp1_10_out_ap_vld;
reg tmp_10_out_ap_vld;
reg tmp_acc1_6_out_ap_vld;
reg tmp_acc_6_out_ap_vld;
reg tmp1_9_out_ap_vld;
reg tmp_9_out_ap_vld;
reg tmp_acc1_4_out_ap_vld;
reg tmp_acc_4_out_ap_vld;
reg tmp1_8_out_ap_vld;
reg tmp_8_out_ap_vld;
reg tmp_acc1_2_out_ap_vld;
reg tmp_acc_2_out_ap_vld;
reg tmp1_7_out_ap_vld;
reg tmp_7_out_ap_vld;
reg tmp_acc1_out_ap_vld;
reg tmp_acc_out_ap_vld;
reg tmp1_6_out_ap_vld;
reg tmp_6_out_ap_vld;

(* fsm_encoding = "none" *) reg   [1:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage1;
reg   [0:0] icmp_ln515_reg_2256;
reg    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state4_pp0_stage1_iter1;
reg    ap_block_pp0_stage1_subdone;
reg    ap_condition_exit_pp0_iter0_stage1;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    demosaic_out_4198_blk_n;
wire    ap_block_pp0_stage1;
wire    ap_block_pp0_stage0;
reg    impop_41_blk_n;
wire    ap_block_state1_pp0_stage0_iter0;
reg    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state5_pp0_stage0_iter2;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln515_fu_1120_p2;
reg   [31:0] tmp_6_load_1_reg_2260;
reg    ap_block_pp0_stage1_11001;
wire   [0:0] icmp_ln548_fu_1172_p2;
reg   [0:0] icmp_ln548_reg_2265;
reg   [31:0] tmp_7_load_1_reg_2274;
wire   [0:0] icmp_ln548_1_fu_1214_p2;
reg   [0:0] icmp_ln548_1_reg_2279;
reg   [31:0] tmp_8_load_1_reg_2288;
wire   [0:0] icmp_ln548_2_fu_1256_p2;
reg   [0:0] icmp_ln548_2_reg_2293;
reg   [31:0] tmp_9_load_1_reg_2302;
wire   [0:0] icmp_ln548_3_fu_1298_p2;
reg   [0:0] icmp_ln548_3_reg_2307;
reg   [31:0] tmp_10_load_1_reg_2316;
wire   [0:0] icmp_ln548_4_fu_1340_p2;
reg   [0:0] icmp_ln548_4_reg_2321;
reg   [31:0] tmp_11_load_1_reg_2330;
wire   [0:0] icmp_ln548_5_fu_1382_p2;
reg   [0:0] icmp_ln548_5_reg_2335;
reg   [31:0] tmp1_6_load74_reg_2344;
wire   [0:0] icmp_ln554_fu_1467_p2;
reg   [0:0] icmp_ln554_reg_2349;
reg   [31:0] tmp1_1_load_1_reg_2358;
wire   [0:0] icmp_ln554_1_fu_1518_p2;
reg   [0:0] icmp_ln554_1_reg_2363;
reg   [31:0] tmp1_2_load_1_reg_2372;
wire   [0:0] icmp_ln554_2_fu_1569_p2;
reg   [0:0] icmp_ln554_2_reg_2377;
reg   [31:0] tmp1_3_load_1_reg_2386;
wire   [0:0] icmp_ln554_3_fu_1620_p2;
reg   [0:0] icmp_ln554_3_reg_2391;
reg   [31:0] tmp1_4_load_1_reg_2400;
wire   [0:0] icmp_ln554_4_fu_1671_p2;
reg   [0:0] icmp_ln554_4_reg_2405;
reg   [31:0] tmp1_5_load_1_reg_2414;
wire   [0:0] icmp_ln554_5_fu_1722_p2;
reg   [0:0] icmp_ln554_5_reg_2419;
reg    ap_enable_reg_pp0_iter0_reg;
reg    ap_block_pp0_stage0_subdone;
wire   [63:0] zext_ln552_fu_1178_p1;
wire   [63:0] zext_ln552_1_fu_1220_p1;
wire   [63:0] zext_ln552_2_fu_1262_p1;
wire   [63:0] zext_ln552_3_fu_1304_p1;
wire   [63:0] zext_ln552_4_fu_1346_p1;
wire   [63:0] zext_ln552_5_fu_1388_p1;
wire   [63:0] zext_ln551_fu_1455_p1;
wire   [63:0] zext_ln558_fu_1473_p1;
wire   [63:0] zext_ln551_1_fu_1506_p1;
wire   [63:0] zext_ln558_1_fu_1524_p1;
wire   [63:0] zext_ln551_2_fu_1557_p1;
wire   [63:0] zext_ln558_2_fu_1575_p1;
wire   [63:0] zext_ln551_3_fu_1608_p1;
wire   [63:0] zext_ln558_3_fu_1626_p1;
wire   [63:0] zext_ln551_4_fu_1659_p1;
wire   [63:0] zext_ln558_4_fu_1677_p1;
wire   [63:0] zext_ln551_5_fu_1710_p1;
wire   [63:0] zext_ln558_5_fu_1728_p1;
wire   [63:0] zext_ln557_fu_1769_p1;
wire   [63:0] zext_ln557_1_fu_1784_p1;
wire   [63:0] zext_ln557_2_fu_1799_p1;
wire   [63:0] zext_ln557_3_fu_1814_p1;
wire   [63:0] zext_ln557_4_fu_1829_p1;
wire   [63:0] zext_ln557_5_fu_1844_p1;
reg   [31:0] col_fu_206;
wire    ap_loop_init;
reg   [31:0] ap_sig_allocacmp_col_2;
wire   [31:0] col_3_fu_1126_p2;
reg   [31:0] tmp_6_fu_210;
wire   [31:0] zext_ln584_fu_1168_p1;
reg   [31:0] tmp1_fu_214;
wire   [31:0] zext_ln584_1_fu_1451_p1;
reg   [31:0] tmp_7_fu_218;
wire   [31:0] zext_ln584_2_fu_1210_p1;
reg   [31:0] tmp1_1_fu_222;
wire   [31:0] zext_ln584_3_fu_1502_p1;
reg   [31:0] tmp_8_fu_226;
wire   [31:0] zext_ln584_4_fu_1252_p1;
reg   [31:0] tmp1_2_fu_230;
wire   [31:0] zext_ln584_5_fu_1553_p1;
reg   [31:0] tmp_9_fu_234;
wire   [31:0] zext_ln584_6_fu_1294_p1;
reg   [31:0] tmp1_3_fu_238;
wire   [31:0] zext_ln584_7_fu_1604_p1;
reg   [31:0] tmp_10_fu_242;
wire   [31:0] zext_ln584_8_fu_1336_p1;
reg   [31:0] tmp1_4_fu_246;
wire   [31:0] zext_ln584_9_fu_1655_p1;
reg   [31:0] tmp_11_fu_250;
wire   [31:0] zext_ln584_10_fu_1378_p1;
reg   [31:0] tmp1_5_fu_254;
wire   [31:0] zext_ln584_11_fu_1706_p1;
reg   [31:0] tmp_acc_fu_258;
wire   [31:0] tmp_acc_12_fu_1763_p2;
reg   [31:0] tmp_acc1_fu_262;
wire   [31:0] tmp_acc1_12_fu_1883_p2;
reg   [31:0] tmp_acc_2_fu_266;
wire   [31:0] tmp_acc_13_fu_1778_p2;
reg   [31:0] tmp_acc1_2_fu_270;
wire   [31:0] tmp_acc1_13_fu_1889_p2;
reg   [31:0] tmp_acc_4_fu_274;
wire   [31:0] tmp_acc_14_fu_1793_p2;
reg   [31:0] tmp_acc1_4_fu_278;
wire   [31:0] tmp_acc1_14_fu_1895_p2;
reg   [31:0] tmp_acc_6_fu_282;
wire   [31:0] tmp_acc_15_fu_1808_p2;
reg   [31:0] tmp_acc1_6_fu_286;
wire   [31:0] tmp_acc1_15_fu_1901_p2;
reg   [31:0] tmp_acc_8_fu_290;
wire   [31:0] tmp_acc_16_fu_1823_p2;
reg   [31:0] tmp_acc1_8_fu_294;
wire   [31:0] tmp_acc1_16_fu_1907_p2;
reg   [31:0] tmp_acc_10_fu_298;
wire   [31:0] tmp_acc_17_fu_1838_p2;
reg   [31:0] tmp_acc1_10_fu_302;
wire   [31:0] tmp_acc1_17_fu_1913_p2;
reg    ap_block_pp0_stage1_01001;
reg    ap_block_pp0_stage0_01001;
wire   [31:0] p_cast_fu_988_p1;
wire   [15:0] trunc_ln737_fu_1140_p1;
wire   [21:0] lhs_V_fu_1144_p3;
wire   [21:0] ret_V_fu_1152_p2;
wire   [11:0] tmp_s_fu_1158_p4;
wire   [15:0] grp_fu_890_p4;
wire   [21:0] lhs_V_13_fu_1186_p3;
wire   [21:0] ret_V_43_fu_1194_p2;
wire   [11:0] tmp_29_fu_1200_p4;
wire   [15:0] grp_fu_900_p4;
wire   [21:0] lhs_V_15_fu_1228_p3;
wire   [21:0] ret_V_45_fu_1236_p2;
wire   [11:0] tmp_33_fu_1242_p4;
wire   [15:0] grp_fu_910_p4;
wire   [21:0] lhs_V_17_fu_1270_p3;
wire   [21:0] ret_V_47_fu_1278_p2;
wire   [11:0] tmp_37_fu_1284_p4;
wire   [15:0] grp_fu_920_p4;
wire   [21:0] lhs_V_19_fu_1312_p3;
wire   [21:0] ret_V_49_fu_1320_p2;
wire   [11:0] tmp_41_fu_1326_p4;
wire   [15:0] grp_fu_930_p4;
wire   [21:0] lhs_V_21_fu_1354_p3;
wire   [21:0] ret_V_51_fu_1362_p2;
wire   [11:0] tmp_45_fu_1368_p4;
wire   [15:0] trunc_ln737_1_fu_1423_p1;
wire   [21:0] lhs_V_12_fu_1427_p3;
wire   [21:0] ret_V_42_fu_1435_p2;
wire   [11:0] tmp_27_fu_1441_p4;
wire   [21:0] lhs_V_14_fu_1478_p3;
wire   [21:0] ret_V_44_fu_1486_p2;
wire   [11:0] tmp_31_fu_1492_p4;
wire   [21:0] lhs_V_16_fu_1529_p3;
wire   [21:0] ret_V_46_fu_1537_p2;
wire   [11:0] tmp_34_fu_1543_p4;
wire   [21:0] lhs_V_18_fu_1580_p3;
wire   [21:0] ret_V_48_fu_1588_p2;
wire   [11:0] tmp_39_fu_1594_p4;
wire   [21:0] lhs_V_20_fu_1631_p3;
wire   [21:0] ret_V_50_fu_1639_p2;
wire   [11:0] tmp_43_fu_1645_p4;
wire   [21:0] lhs_V_22_fu_1682_p3;
wire   [21:0] ret_V_52_fu_1690_p2;
wire   [11:0] tmp_47_fu_1696_p4;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_condition_exit_pp0_iter1_stage0;
reg    ap_idle_pp0_0to0;
reg   [1:0] ap_NS_fsm;
reg    ap_idle_pp0_1to2;
reg    ap_done_pending_pp0;
reg    ap_block_pp0;
reg    ap_enable_operation_191;
reg    ap_enable_state3_pp0_iter1_stage0;
reg    ap_predicate_op116_load_state2;
reg    ap_enable_operation_116;
reg    ap_enable_state2_pp0_iter0_stage1;
reg    ap_enable_operation_192;
reg    ap_enable_operation_209;
reg    ap_predicate_op127_load_state2;
reg    ap_enable_operation_127;
reg    ap_enable_operation_210;
reg    ap_enable_operation_227;
reg    ap_predicate_op138_load_state2;
reg    ap_enable_operation_138;
reg    ap_enable_operation_228;
reg    ap_enable_operation_245;
reg    ap_predicate_op149_load_state2;
reg    ap_enable_operation_149;
reg    ap_enable_operation_246;
reg    ap_enable_operation_263;
reg    ap_predicate_op160_load_state2;
reg    ap_enable_operation_160;
reg    ap_enable_operation_264;
reg    ap_enable_operation_281;
reg    ap_predicate_op171_load_state2;
reg    ap_enable_operation_171;
reg    ap_enable_operation_282;
reg    ap_enable_operation_302;
reg    ap_enable_state4_pp0_iter1_stage1;
reg    ap_enable_operation_200;
reg    ap_enable_operation_303;
reg    ap_enable_operation_311;
reg    ap_enable_operation_218;
reg    ap_enable_operation_312;
reg    ap_enable_operation_320;
reg    ap_enable_operation_236;
reg    ap_enable_operation_321;
reg    ap_enable_operation_329;
reg    ap_enable_operation_254;
reg    ap_enable_operation_330;
reg    ap_enable_operation_338;
reg    ap_enable_operation_272;
reg    ap_enable_operation_339;
reg    ap_enable_operation_347;
reg    ap_enable_operation_290;
reg    ap_enable_operation_348;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 2'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

ISPPipeline_accel_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage1),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage1)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter1_stage0) & (ap_idle_pp0_0to0 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln515_fu_1120_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            col_fu_206 <= col_3_fu_1126_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            col_fu_206 <= 32'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            tmp1_1_fu_222 <= old1_1_load;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            tmp1_1_fu_222 <= zext_ln584_3_fu_1502_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            tmp1_2_fu_230 <= old1_2_load;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            tmp1_2_fu_230 <= zext_ln584_5_fu_1553_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            tmp1_3_fu_238 <= old1_3_load;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            tmp1_3_fu_238 <= zext_ln584_7_fu_1604_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            tmp1_4_fu_246 <= old1_4_load;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            tmp1_4_fu_246 <= zext_ln584_9_fu_1655_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            tmp1_5_fu_254 <= old1_5_load;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            tmp1_5_fu_254 <= zext_ln584_11_fu_1706_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            tmp1_fu_214 <= old1_0_load;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            tmp1_fu_214 <= zext_ln584_1_fu_1451_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_10_fu_242 <= old_4_load;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln515_reg_2256 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        tmp_10_fu_242 <= zext_ln584_8_fu_1336_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_11_fu_250 <= old_5_load;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln515_reg_2256 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        tmp_11_fu_250 <= zext_ln584_10_fu_1378_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_6_fu_210 <= old_0_load;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln515_reg_2256 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        tmp_6_fu_210 <= zext_ln584_fu_1168_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_7_fu_218 <= old_1_load;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln515_reg_2256 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        tmp_7_fu_218 <= zext_ln584_2_fu_1210_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_8_fu_226 <= old_2_load;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln515_reg_2256 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        tmp_8_fu_226 <= zext_ln584_4_fu_1252_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_9_fu_234 <= old_3_load;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln515_reg_2256 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        tmp_9_fu_234 <= zext_ln584_6_fu_1294_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_acc1_10_fu_302 <= acc1_5_load_1;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln554_5_reg_2419 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        tmp_acc1_10_fu_302 <= tmp_hist1_V_5_q0;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_acc1_10_fu_302 <= tmp_acc1_17_fu_1913_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_acc1_2_fu_270 <= acc1_1_load_1;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln554_1_reg_2363 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        tmp_acc1_2_fu_270 <= tmp_hist1_V_1_q0;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_acc1_2_fu_270 <= tmp_acc1_13_fu_1889_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_acc1_4_fu_278 <= acc1_2_load_1;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln554_2_reg_2377 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        tmp_acc1_4_fu_278 <= tmp_hist1_V_2_q0;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_acc1_4_fu_278 <= tmp_acc1_14_fu_1895_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_acc1_6_fu_286 <= acc1_3_load_1;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln554_3_reg_2391 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        tmp_acc1_6_fu_286 <= tmp_hist1_V_3_q0;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_acc1_6_fu_286 <= tmp_acc1_15_fu_1901_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_acc1_8_fu_294 <= acc1_4_load_1;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln554_4_reg_2405 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        tmp_acc1_8_fu_294 <= tmp_hist1_V_4_q0;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_acc1_8_fu_294 <= tmp_acc1_16_fu_1907_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_acc1_fu_262 <= acc1_0_load_1;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln554_reg_2349 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        tmp_acc1_fu_262 <= tmp_hist1_V_0_q0;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_acc1_fu_262 <= tmp_acc1_12_fu_1883_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_acc_10_fu_298 <= acc_5_load_1;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln548_5_reg_2335 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_acc_10_fu_298 <= tmp_hist_V_5_q0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        tmp_acc_10_fu_298 <= tmp_acc_17_fu_1838_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_acc_2_fu_266 <= acc_1_load_1;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln548_1_reg_2279 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_acc_2_fu_266 <= tmp_hist_V_1_q0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        tmp_acc_2_fu_266 <= tmp_acc_13_fu_1778_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_acc_4_fu_274 <= acc_2_load_1;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln548_2_reg_2293 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_acc_4_fu_274 <= tmp_hist_V_2_q0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        tmp_acc_4_fu_274 <= tmp_acc_14_fu_1793_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_acc_6_fu_282 <= acc_3_load_1;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln548_3_reg_2307 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_acc_6_fu_282 <= tmp_hist_V_3_q0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        tmp_acc_6_fu_282 <= tmp_acc_15_fu_1808_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_acc_8_fu_290 <= acc_4_load_1;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln548_4_reg_2321 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_acc_8_fu_290 <= tmp_hist_V_4_q0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        tmp_acc_8_fu_290 <= tmp_acc_16_fu_1823_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_acc_fu_258 <= acc_0_load_1;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln548_reg_2265 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_acc_fu_258 <= tmp_hist_V_0_q0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        tmp_acc_fu_258 <= tmp_acc_12_fu_1763_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln515_reg_2256 <= icmp_ln515_fu_1120_p2;
        icmp_ln554_1_reg_2363 <= icmp_ln554_1_fu_1518_p2;
        icmp_ln554_2_reg_2377 <= icmp_ln554_2_fu_1569_p2;
        icmp_ln554_3_reg_2391 <= icmp_ln554_3_fu_1620_p2;
        icmp_ln554_4_reg_2405 <= icmp_ln554_4_fu_1671_p2;
        icmp_ln554_5_reg_2419 <= icmp_ln554_5_fu_1722_p2;
        icmp_ln554_reg_2349 <= icmp_ln554_fu_1467_p2;
        tmp1_1_load_1_reg_2358 <= tmp1_1_fu_222;
        tmp1_2_load_1_reg_2372 <= tmp1_2_fu_230;
        tmp1_3_load_1_reg_2386 <= tmp1_3_fu_238;
        tmp1_4_load_1_reg_2400 <= tmp1_4_fu_246;
        tmp1_5_load_1_reg_2414 <= tmp1_5_fu_254;
        tmp1_6_load74_reg_2344 <= tmp1_fu_214;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln515_reg_2256 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        icmp_ln548_1_reg_2279 <= icmp_ln548_1_fu_1214_p2;
        icmp_ln548_2_reg_2293 <= icmp_ln548_2_fu_1256_p2;
        icmp_ln548_3_reg_2307 <= icmp_ln548_3_fu_1298_p2;
        icmp_ln548_4_reg_2321 <= icmp_ln548_4_fu_1340_p2;
        icmp_ln548_5_reg_2335 <= icmp_ln548_5_fu_1382_p2;
        icmp_ln548_reg_2265 <= icmp_ln548_fu_1172_p2;
        tmp_10_load_1_reg_2316 <= tmp_10_fu_242;
        tmp_11_load_1_reg_2330 <= tmp_11_fu_250;
        tmp_6_load_1_reg_2260 <= tmp_6_fu_210;
        tmp_7_load_1_reg_2274 <= tmp_7_fu_218;
        tmp_8_load_1_reg_2288 <= tmp_8_fu_226;
        tmp_9_load_1_reg_2302 <= tmp_9_fu_234;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_subdone) & (icmp_ln515_reg_2256 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_condition_exit_pp0_iter0_stage1 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln515_reg_2256 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (~((ap_loop_exit_ready == 1'b0) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b0))) begin
        ap_done_pending_pp0 = 1'b1;
    end else begin
        ap_done_pending_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b0)) begin
        ap_idle_pp0_0to0 = 1'b1;
    end else begin
        ap_idle_pp0_0to0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to2 = 1'b1;
    end else begin
        ap_idle_pp0_1to2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_col_2 = 32'd0;
    end else begin
        ap_sig_allocacmp_col_2 = col_fu_206;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage1) & (icmp_ln515_reg_2256 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        demosaic_out_4198_blk_n = demosaic_out_4198_empty_n;
    end else begin
        demosaic_out_4198_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln515_reg_2256 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        demosaic_out_4198_read = 1'b1;
    end else begin
        demosaic_out_4198_read = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage1) & (icmp_ln515_reg_2256 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        impop_41_blk_n = impop_41_full_n;
    end else begin
        impop_41_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln515_reg_2256 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        impop_41_write = 1'b1;
    end else begin
        impop_41_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln515_reg_2256 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp1_10_out_ap_vld = 1'b1;
    end else begin
        tmp1_10_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln515_reg_2256 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp1_11_out_ap_vld = 1'b1;
    end else begin
        tmp1_11_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln515_reg_2256 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp1_6_out_ap_vld = 1'b1;
    end else begin
        tmp1_6_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln515_reg_2256 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp1_7_out_ap_vld = 1'b1;
    end else begin
        tmp1_7_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln515_reg_2256 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp1_8_out_ap_vld = 1'b1;
    end else begin
        tmp1_8_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln515_reg_2256 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp1_9_out_ap_vld = 1'b1;
    end else begin
        tmp1_9_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln515_reg_2256 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_10_out_ap_vld = 1'b1;
    end else begin
        tmp_10_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln515_reg_2256 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_11_out_ap_vld = 1'b1;
    end else begin
        tmp_11_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln515_reg_2256 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_6_out_ap_vld = 1'b1;
    end else begin
        tmp_6_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln515_reg_2256 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_7_out_ap_vld = 1'b1;
    end else begin
        tmp_7_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln515_reg_2256 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_8_out_ap_vld = 1'b1;
    end else begin
        tmp_8_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln515_reg_2256 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_9_out_ap_vld = 1'b1;
    end else begin
        tmp_9_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln515_reg_2256 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_acc1_10_out_ap_vld = 1'b1;
    end else begin
        tmp_acc1_10_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln515_reg_2256 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_acc1_2_out_ap_vld = 1'b1;
    end else begin
        tmp_acc1_2_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln515_reg_2256 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_acc1_4_out_ap_vld = 1'b1;
    end else begin
        tmp_acc1_4_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln515_reg_2256 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_acc1_6_out_ap_vld = 1'b1;
    end else begin
        tmp_acc1_6_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln515_reg_2256 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_acc1_8_out_ap_vld = 1'b1;
    end else begin
        tmp_acc1_8_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln515_reg_2256 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_acc1_out_ap_vld = 1'b1;
    end else begin
        tmp_acc1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln515_reg_2256 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_acc_10_out_ap_vld = 1'b1;
    end else begin
        tmp_acc_10_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln515_reg_2256 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_acc_2_out_ap_vld = 1'b1;
    end else begin
        tmp_acc_2_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln515_reg_2256 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_acc_4_out_ap_vld = 1'b1;
    end else begin
        tmp_acc_4_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln515_reg_2256 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_acc_6_out_ap_vld = 1'b1;
    end else begin
        tmp_acc_6_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln515_reg_2256 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_acc_8_out_ap_vld = 1'b1;
    end else begin
        tmp_acc_8_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln515_reg_2256 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_acc_out_ap_vld = 1'b1;
    end else begin
        tmp_acc_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            tmp_hist1_V_0_address0 = zext_ln557_fu_1769_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            tmp_hist1_V_0_address0 = zext_ln558_fu_1473_p1;
        end else begin
            tmp_hist1_V_0_address0 = 'bx;
        end
    end else begin
        tmp_hist1_V_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        tmp_hist1_V_0_ce0 = 1'b1;
    end else begin
        tmp_hist1_V_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln554_reg_2349 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        tmp_hist1_V_0_we0 = 1'b1;
    end else begin
        tmp_hist1_V_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            tmp_hist1_V_1_address0 = zext_ln557_1_fu_1784_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            tmp_hist1_V_1_address0 = zext_ln558_1_fu_1524_p1;
        end else begin
            tmp_hist1_V_1_address0 = 'bx;
        end
    end else begin
        tmp_hist1_V_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        tmp_hist1_V_1_ce0 = 1'b1;
    end else begin
        tmp_hist1_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln554_1_reg_2363 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        tmp_hist1_V_1_we0 = 1'b1;
    end else begin
        tmp_hist1_V_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            tmp_hist1_V_2_address0 = zext_ln557_2_fu_1799_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            tmp_hist1_V_2_address0 = zext_ln558_2_fu_1575_p1;
        end else begin
            tmp_hist1_V_2_address0 = 'bx;
        end
    end else begin
        tmp_hist1_V_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        tmp_hist1_V_2_ce0 = 1'b1;
    end else begin
        tmp_hist1_V_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln554_2_reg_2377 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        tmp_hist1_V_2_we0 = 1'b1;
    end else begin
        tmp_hist1_V_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            tmp_hist1_V_3_address0 = zext_ln557_3_fu_1814_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            tmp_hist1_V_3_address0 = zext_ln558_3_fu_1626_p1;
        end else begin
            tmp_hist1_V_3_address0 = 'bx;
        end
    end else begin
        tmp_hist1_V_3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        tmp_hist1_V_3_ce0 = 1'b1;
    end else begin
        tmp_hist1_V_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln554_3_reg_2391 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        tmp_hist1_V_3_we0 = 1'b1;
    end else begin
        tmp_hist1_V_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            tmp_hist1_V_4_address0 = zext_ln557_4_fu_1829_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            tmp_hist1_V_4_address0 = zext_ln558_4_fu_1677_p1;
        end else begin
            tmp_hist1_V_4_address0 = 'bx;
        end
    end else begin
        tmp_hist1_V_4_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        tmp_hist1_V_4_ce0 = 1'b1;
    end else begin
        tmp_hist1_V_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln554_4_reg_2405 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        tmp_hist1_V_4_we0 = 1'b1;
    end else begin
        tmp_hist1_V_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            tmp_hist1_V_5_address0 = zext_ln557_5_fu_1844_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            tmp_hist1_V_5_address0 = zext_ln558_5_fu_1728_p1;
        end else begin
            tmp_hist1_V_5_address0 = 'bx;
        end
    end else begin
        tmp_hist1_V_5_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        tmp_hist1_V_5_ce0 = 1'b1;
    end else begin
        tmp_hist1_V_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln554_5_reg_2419 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        tmp_hist1_V_5_we0 = 1'b1;
    end else begin
        tmp_hist1_V_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_hist_V_0_address0 = zext_ln551_fu_1455_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        tmp_hist_V_0_address0 = zext_ln552_fu_1178_p1;
    end else begin
        tmp_hist_V_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        tmp_hist_V_0_ce0 = 1'b1;
    end else begin
        tmp_hist_V_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln548_reg_2265 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_hist_V_0_we0 = 1'b1;
    end else begin
        tmp_hist_V_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_hist_V_1_address0 = zext_ln551_1_fu_1506_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        tmp_hist_V_1_address0 = zext_ln552_1_fu_1220_p1;
    end else begin
        tmp_hist_V_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        tmp_hist_V_1_ce0 = 1'b1;
    end else begin
        tmp_hist_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln548_1_reg_2279 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_hist_V_1_we0 = 1'b1;
    end else begin
        tmp_hist_V_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_hist_V_2_address0 = zext_ln551_2_fu_1557_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        tmp_hist_V_2_address0 = zext_ln552_2_fu_1262_p1;
    end else begin
        tmp_hist_V_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        tmp_hist_V_2_ce0 = 1'b1;
    end else begin
        tmp_hist_V_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln548_2_reg_2293 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_hist_V_2_we0 = 1'b1;
    end else begin
        tmp_hist_V_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_hist_V_3_address0 = zext_ln551_3_fu_1608_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        tmp_hist_V_3_address0 = zext_ln552_3_fu_1304_p1;
    end else begin
        tmp_hist_V_3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        tmp_hist_V_3_ce0 = 1'b1;
    end else begin
        tmp_hist_V_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln548_3_reg_2307 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_hist_V_3_we0 = 1'b1;
    end else begin
        tmp_hist_V_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_hist_V_4_address0 = zext_ln551_4_fu_1659_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        tmp_hist_V_4_address0 = zext_ln552_4_fu_1346_p1;
    end else begin
        tmp_hist_V_4_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        tmp_hist_V_4_ce0 = 1'b1;
    end else begin
        tmp_hist_V_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln548_4_reg_2321 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_hist_V_4_we0 = 1'b1;
    end else begin
        tmp_hist_V_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_hist_V_5_address0 = zext_ln551_5_fu_1710_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        tmp_hist_V_5_address0 = zext_ln552_5_fu_1388_p1;
    end else begin
        tmp_hist_V_5_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        tmp_hist_V_5_ce0 = 1'b1;
    end else begin
        tmp_hist_V_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln548_5_reg_2335 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_hist_V_5_we0 = 1'b1;
    end else begin
        tmp_hist_V_5_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if (((1'b1 == ap_condition_exit_pp0_iter1_stage0) & (ap_idle_pp0_0to0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((~((ap_start_int == 1'b0) & (ap_done_pending_pp0 == 1'b0) & (ap_idle_pp0_1to2 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

always @ (*) begin
    ap_block_pp0 = (((ap_ST_fsm_pp0_stage1 == ap_CS_fsm) & (1'b1 == ap_block_pp0_stage1_subdone)) | ((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b1 == ap_block_pp0_stage0_subdone)));
end

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & ((impop_41_full_n == 1'b0) | (demosaic_out_4198_empty_n == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & ((impop_41_full_n == 1'b0) | (demosaic_out_4198_empty_n == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_enable_reg_pp0_iter1 == 1'b1) & ((impop_41_full_n == 1'b0) | (demosaic_out_4198_empty_n == 1'b0)));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_01001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((impop_41_full_n == 1'b0) & (icmp_ln515_reg_2256 == 1'd0)) | ((icmp_ln515_reg_2256 == 1'd0) & (demosaic_out_4198_empty_n == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage1_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((impop_41_full_n == 1'b0) & (icmp_ln515_reg_2256 == 1'd0)) | ((icmp_ln515_reg_2256 == 1'd0) & (demosaic_out_4198_empty_n == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((impop_41_full_n == 1'b0) & (icmp_ln515_reg_2256 == 1'd0)) | ((icmp_ln515_reg_2256 == 1'd0) & (demosaic_out_4198_empty_n == 1'b0))));
end

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state2_pp0_stage1_iter0 = (((impop_41_full_n == 1'b0) & (icmp_ln515_reg_2256 == 1'd0)) | ((icmp_ln515_reg_2256 == 1'd0) & (demosaic_out_4198_empty_n == 1'b0)));
end

always @ (*) begin
    ap_block_state3_pp0_stage0_iter1 = ((impop_41_full_n == 1'b0) | (demosaic_out_4198_empty_n == 1'b0));
end

assign ap_block_state4_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_enable_operation_116 = (ap_predicate_op116_load_state2 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_127 = (ap_predicate_op127_load_state2 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_138 = (ap_predicate_op138_load_state2 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_149 = (ap_predicate_op149_load_state2 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_160 = (ap_predicate_op160_load_state2 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_171 = (ap_predicate_op171_load_state2 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_191 = (icmp_ln548_reg_2265 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_192 = (icmp_ln548_reg_2265 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_200 = (icmp_ln554_fu_1467_p2 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_209 = (icmp_ln548_1_reg_2279 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_210 = (icmp_ln548_1_reg_2279 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_218 = (icmp_ln554_1_fu_1518_p2 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_227 = (icmp_ln548_2_reg_2293 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_228 = (icmp_ln548_2_reg_2293 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_236 = (icmp_ln554_2_fu_1569_p2 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_245 = (icmp_ln548_3_reg_2307 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_246 = (icmp_ln548_3_reg_2307 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_254 = (icmp_ln554_3_fu_1620_p2 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_263 = (icmp_ln548_4_reg_2321 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_264 = (icmp_ln548_4_reg_2321 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_272 = (icmp_ln554_4_fu_1671_p2 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_281 = (icmp_ln548_5_reg_2335 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_282 = (icmp_ln548_5_reg_2335 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_290 = (icmp_ln554_5_fu_1722_p2 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_302 = (icmp_ln554_reg_2349 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_303 = (icmp_ln554_reg_2349 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_311 = (icmp_ln554_1_reg_2363 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_312 = (icmp_ln554_1_reg_2363 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_320 = (icmp_ln554_2_reg_2377 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_321 = (icmp_ln554_2_reg_2377 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_329 = (icmp_ln554_3_reg_2391 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_330 = (icmp_ln554_3_reg_2391 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_338 = (icmp_ln554_4_reg_2405 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_339 = (icmp_ln554_4_reg_2405 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_347 = (icmp_ln554_5_reg_2419 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_348 = (icmp_ln554_5_reg_2419 == 1'd0);
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_enable_state2_pp0_iter0_stage1 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1));
end

always @ (*) begin
    ap_enable_state3_pp0_iter1_stage0 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_enable_state4_pp0_iter1_stage1 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1));
end

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage1;

always @ (*) begin
    ap_predicate_op116_load_state2 = ((icmp_ln515_reg_2256 == 1'd0) & (icmp_ln548_fu_1172_p2 == 1'd0));
end

always @ (*) begin
    ap_predicate_op127_load_state2 = ((icmp_ln515_reg_2256 == 1'd0) & (icmp_ln548_1_fu_1214_p2 == 1'd0));
end

always @ (*) begin
    ap_predicate_op138_load_state2 = ((icmp_ln515_reg_2256 == 1'd0) & (icmp_ln548_2_fu_1256_p2 == 1'd0));
end

always @ (*) begin
    ap_predicate_op149_load_state2 = ((icmp_ln515_reg_2256 == 1'd0) & (icmp_ln548_3_fu_1298_p2 == 1'd0));
end

always @ (*) begin
    ap_predicate_op160_load_state2 = ((icmp_ln515_reg_2256 == 1'd0) & (icmp_ln548_4_fu_1340_p2 == 1'd0));
end

always @ (*) begin
    ap_predicate_op171_load_state2 = ((icmp_ln515_reg_2256 == 1'd0) & (icmp_ln548_5_fu_1382_p2 == 1'd0));
end

assign col_3_fu_1126_p2 = (ap_sig_allocacmp_col_2 + 32'd2);

assign grp_fu_890_p4 = {{demosaic_out_4198_dout[31:16]}};

assign grp_fu_900_p4 = {{demosaic_out_4198_dout[47:32]}};

assign grp_fu_910_p4 = {{demosaic_out_4198_dout[63:48]}};

assign grp_fu_920_p4 = {{demosaic_out_4198_dout[79:64]}};

assign grp_fu_930_p4 = {{demosaic_out_4198_dout[95:80]}};

assign icmp_ln515_fu_1120_p2 = ((ap_sig_allocacmp_col_2 == p_cast_fu_988_p1) ? 1'b1 : 1'b0);

assign icmp_ln548_1_fu_1214_p2 = ((tmp_7_fu_218 == zext_ln584_2_fu_1210_p1) ? 1'b1 : 1'b0);

assign icmp_ln548_2_fu_1256_p2 = ((tmp_8_fu_226 == zext_ln584_4_fu_1252_p1) ? 1'b1 : 1'b0);

assign icmp_ln548_3_fu_1298_p2 = ((tmp_9_fu_234 == zext_ln584_6_fu_1294_p1) ? 1'b1 : 1'b0);

assign icmp_ln548_4_fu_1340_p2 = ((tmp_10_fu_242 == zext_ln584_8_fu_1336_p1) ? 1'b1 : 1'b0);

assign icmp_ln548_5_fu_1382_p2 = ((tmp_11_fu_250 == zext_ln584_10_fu_1378_p1) ? 1'b1 : 1'b0);

assign icmp_ln548_fu_1172_p2 = ((tmp_6_fu_210 == zext_ln584_fu_1168_p1) ? 1'b1 : 1'b0);

assign icmp_ln554_1_fu_1518_p2 = ((tmp1_1_fu_222 == zext_ln584_3_fu_1502_p1) ? 1'b1 : 1'b0);

assign icmp_ln554_2_fu_1569_p2 = ((tmp1_2_fu_230 == zext_ln584_5_fu_1553_p1) ? 1'b1 : 1'b0);

assign icmp_ln554_3_fu_1620_p2 = ((tmp1_3_fu_238 == zext_ln584_7_fu_1604_p1) ? 1'b1 : 1'b0);

assign icmp_ln554_4_fu_1671_p2 = ((tmp1_4_fu_246 == zext_ln584_9_fu_1655_p1) ? 1'b1 : 1'b0);

assign icmp_ln554_5_fu_1722_p2 = ((tmp1_5_fu_254 == zext_ln584_11_fu_1706_p1) ? 1'b1 : 1'b0);

assign icmp_ln554_fu_1467_p2 = ((tmp1_fu_214 == zext_ln584_1_fu_1451_p1) ? 1'b1 : 1'b0);

assign impop_41_din = demosaic_out_4198_dout;

assign lhs_V_12_fu_1427_p3 = {{trunc_ln737_1_fu_1423_p1}, {6'd0}};

assign lhs_V_13_fu_1186_p3 = {{grp_fu_890_p4}, {6'd0}};

assign lhs_V_14_fu_1478_p3 = {{grp_fu_890_p4}, {6'd0}};

assign lhs_V_15_fu_1228_p3 = {{grp_fu_900_p4}, {6'd0}};

assign lhs_V_16_fu_1529_p3 = {{grp_fu_900_p4}, {6'd0}};

assign lhs_V_17_fu_1270_p3 = {{grp_fu_910_p4}, {6'd0}};

assign lhs_V_18_fu_1580_p3 = {{grp_fu_910_p4}, {6'd0}};

assign lhs_V_19_fu_1312_p3 = {{grp_fu_920_p4}, {6'd0}};

assign lhs_V_20_fu_1631_p3 = {{grp_fu_920_p4}, {6'd0}};

assign lhs_V_21_fu_1354_p3 = {{grp_fu_930_p4}, {6'd0}};

assign lhs_V_22_fu_1682_p3 = {{grp_fu_930_p4}, {6'd0}};

assign lhs_V_fu_1144_p3 = {{trunc_ln737_fu_1140_p1}, {6'd0}};

assign p_cast_fu_988_p1 = empty;

assign ret_V_42_fu_1435_p2 = (lhs_V_12_fu_1427_p3 | 22'd32);

assign ret_V_43_fu_1194_p2 = (lhs_V_13_fu_1186_p3 | 22'd32);

assign ret_V_44_fu_1486_p2 = (lhs_V_14_fu_1478_p3 | 22'd32);

assign ret_V_45_fu_1236_p2 = (lhs_V_15_fu_1228_p3 | 22'd32);

assign ret_V_46_fu_1537_p2 = (lhs_V_16_fu_1529_p3 | 22'd32);

assign ret_V_47_fu_1278_p2 = (lhs_V_17_fu_1270_p3 | 22'd32);

assign ret_V_48_fu_1588_p2 = (lhs_V_18_fu_1580_p3 | 22'd32);

assign ret_V_49_fu_1320_p2 = (lhs_V_19_fu_1312_p3 | 22'd32);

assign ret_V_50_fu_1639_p2 = (lhs_V_20_fu_1631_p3 | 22'd32);

assign ret_V_51_fu_1362_p2 = (lhs_V_21_fu_1354_p3 | 22'd32);

assign ret_V_52_fu_1690_p2 = (lhs_V_22_fu_1682_p3 | 22'd32);

assign ret_V_fu_1152_p2 = (lhs_V_fu_1144_p3 | 22'd32);

assign tmp1_10_out = tmp1_4_fu_246;

assign tmp1_11_out = tmp1_5_fu_254;

assign tmp1_6_out = tmp1_fu_214;

assign tmp1_7_out = tmp1_1_fu_222;

assign tmp1_8_out = tmp1_2_fu_230;

assign tmp1_9_out = tmp1_3_fu_238;

assign tmp_10_out = tmp_10_fu_242;

assign tmp_11_out = tmp_11_fu_250;

assign tmp_27_fu_1441_p4 = {{ret_V_42_fu_1435_p2[21:10]}};

assign tmp_29_fu_1200_p4 = {{ret_V_43_fu_1194_p2[21:10]}};

assign tmp_31_fu_1492_p4 = {{ret_V_44_fu_1486_p2[21:10]}};

assign tmp_33_fu_1242_p4 = {{ret_V_45_fu_1236_p2[21:10]}};

assign tmp_34_fu_1543_p4 = {{ret_V_46_fu_1537_p2[21:10]}};

assign tmp_37_fu_1284_p4 = {{ret_V_47_fu_1278_p2[21:10]}};

assign tmp_39_fu_1594_p4 = {{ret_V_48_fu_1588_p2[21:10]}};

assign tmp_41_fu_1326_p4 = {{ret_V_49_fu_1320_p2[21:10]}};

assign tmp_43_fu_1645_p4 = {{ret_V_50_fu_1639_p2[21:10]}};

assign tmp_45_fu_1368_p4 = {{ret_V_51_fu_1362_p2[21:10]}};

assign tmp_47_fu_1696_p4 = {{ret_V_52_fu_1690_p2[21:10]}};

assign tmp_6_out = tmp_6_fu_210;

assign tmp_7_out = tmp_7_fu_218;

assign tmp_8_out = tmp_8_fu_226;

assign tmp_9_out = tmp_9_fu_234;

assign tmp_acc1_10_out = tmp_acc1_10_fu_302;

assign tmp_acc1_12_fu_1883_p2 = (tmp_acc1_fu_262 + 32'd1);

assign tmp_acc1_13_fu_1889_p2 = (tmp_acc1_2_fu_270 + 32'd1);

assign tmp_acc1_14_fu_1895_p2 = (tmp_acc1_4_fu_278 + 32'd1);

assign tmp_acc1_15_fu_1901_p2 = (tmp_acc1_6_fu_286 + 32'd1);

assign tmp_acc1_16_fu_1907_p2 = (tmp_acc1_8_fu_294 + 32'd1);

assign tmp_acc1_17_fu_1913_p2 = (tmp_acc1_10_fu_302 + 32'd1);

assign tmp_acc1_2_out = tmp_acc1_2_fu_270;

assign tmp_acc1_4_out = tmp_acc1_4_fu_278;

assign tmp_acc1_6_out = tmp_acc1_6_fu_286;

assign tmp_acc1_8_out = tmp_acc1_8_fu_294;

assign tmp_acc1_out = tmp_acc1_fu_262;

assign tmp_acc_10_out = tmp_acc_10_fu_298;

assign tmp_acc_12_fu_1763_p2 = (tmp_acc_fu_258 + 32'd1);

assign tmp_acc_13_fu_1778_p2 = (tmp_acc_2_fu_266 + 32'd1);

assign tmp_acc_14_fu_1793_p2 = (tmp_acc_4_fu_274 + 32'd1);

assign tmp_acc_15_fu_1808_p2 = (tmp_acc_6_fu_282 + 32'd1);

assign tmp_acc_16_fu_1823_p2 = (tmp_acc_8_fu_290 + 32'd1);

assign tmp_acc_17_fu_1838_p2 = (tmp_acc_10_fu_298 + 32'd1);

assign tmp_acc_2_out = tmp_acc_2_fu_266;

assign tmp_acc_4_out = tmp_acc_4_fu_274;

assign tmp_acc_6_out = tmp_acc_6_fu_282;

assign tmp_acc_8_out = tmp_acc_8_fu_290;

assign tmp_acc_out = tmp_acc_fu_258;

assign tmp_hist1_V_0_d0 = tmp_acc1_fu_262;

assign tmp_hist1_V_1_d0 = tmp_acc1_2_fu_270;

assign tmp_hist1_V_2_d0 = tmp_acc1_4_fu_278;

assign tmp_hist1_V_3_d0 = tmp_acc1_6_fu_286;

assign tmp_hist1_V_4_d0 = tmp_acc1_8_fu_294;

assign tmp_hist1_V_5_d0 = tmp_acc1_10_fu_302;

assign tmp_hist_V_0_d0 = tmp_acc_fu_258;

assign tmp_hist_V_1_d0 = tmp_acc_2_fu_266;

assign tmp_hist_V_2_d0 = tmp_acc_4_fu_274;

assign tmp_hist_V_3_d0 = tmp_acc_6_fu_282;

assign tmp_hist_V_4_d0 = tmp_acc_8_fu_290;

assign tmp_hist_V_5_d0 = tmp_acc_10_fu_298;

assign tmp_s_fu_1158_p4 = {{ret_V_fu_1152_p2[21:10]}};

assign trunc_ln737_1_fu_1423_p1 = demosaic_out_4198_dout[15:0];

assign trunc_ln737_fu_1140_p1 = demosaic_out_4198_dout[15:0];

assign zext_ln551_1_fu_1506_p1 = tmp_7_load_1_reg_2274;

assign zext_ln551_2_fu_1557_p1 = tmp_8_load_1_reg_2288;

assign zext_ln551_3_fu_1608_p1 = tmp_9_load_1_reg_2302;

assign zext_ln551_4_fu_1659_p1 = tmp_10_load_1_reg_2316;

assign zext_ln551_5_fu_1710_p1 = tmp_11_load_1_reg_2330;

assign zext_ln551_fu_1455_p1 = tmp_6_load_1_reg_2260;

assign zext_ln552_1_fu_1220_p1 = tmp_29_fu_1200_p4;

assign zext_ln552_2_fu_1262_p1 = tmp_33_fu_1242_p4;

assign zext_ln552_3_fu_1304_p1 = tmp_37_fu_1284_p4;

assign zext_ln552_4_fu_1346_p1 = tmp_41_fu_1326_p4;

assign zext_ln552_5_fu_1388_p1 = tmp_45_fu_1368_p4;

assign zext_ln552_fu_1178_p1 = tmp_s_fu_1158_p4;

assign zext_ln557_1_fu_1784_p1 = tmp1_1_load_1_reg_2358;

assign zext_ln557_2_fu_1799_p1 = tmp1_2_load_1_reg_2372;

assign zext_ln557_3_fu_1814_p1 = tmp1_3_load_1_reg_2386;

assign zext_ln557_4_fu_1829_p1 = tmp1_4_load_1_reg_2400;

assign zext_ln557_5_fu_1844_p1 = tmp1_5_load_1_reg_2414;

assign zext_ln557_fu_1769_p1 = tmp1_6_load74_reg_2344;

assign zext_ln558_1_fu_1524_p1 = tmp_31_fu_1492_p4;

assign zext_ln558_2_fu_1575_p1 = tmp_34_fu_1543_p4;

assign zext_ln558_3_fu_1626_p1 = tmp_39_fu_1594_p4;

assign zext_ln558_4_fu_1677_p1 = tmp_43_fu_1645_p4;

assign zext_ln558_5_fu_1728_p1 = tmp_47_fu_1696_p4;

assign zext_ln558_fu_1473_p1 = tmp_27_fu_1441_p4;

assign zext_ln584_10_fu_1378_p1 = tmp_45_fu_1368_p4;

assign zext_ln584_11_fu_1706_p1 = tmp_47_fu_1696_p4;

assign zext_ln584_1_fu_1451_p1 = tmp_27_fu_1441_p4;

assign zext_ln584_2_fu_1210_p1 = tmp_29_fu_1200_p4;

assign zext_ln584_3_fu_1502_p1 = tmp_31_fu_1492_p4;

assign zext_ln584_4_fu_1252_p1 = tmp_33_fu_1242_p4;

assign zext_ln584_5_fu_1553_p1 = tmp_34_fu_1543_p4;

assign zext_ln584_6_fu_1294_p1 = tmp_37_fu_1284_p4;

assign zext_ln584_7_fu_1604_p1 = tmp_39_fu_1594_p4;

assign zext_ln584_8_fu_1336_p1 = tmp_41_fu_1326_p4;

assign zext_ln584_9_fu_1655_p1 = tmp_43_fu_1645_p4;

assign zext_ln584_fu_1168_p1 = tmp_s_fu_1158_p4;

endmodule //ISPPipeline_accel_AWBhistogramkernel_10_10_2160_3840_2_20_1_4096_Pipeline_COL_LOOP
