// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
// Version: 2021.1
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module ISPPipeline_accel_rgr_bgb_kernel_ap_uint_16_6_s (
        ap_clk,
        ap_rst,
        p_read,
        p_read1,
        p_read2,
        p_read3,
        p_read4,
        p_read5,
        p_read6,
        p_read7,
        p_read8,
        p_read9,
        p_read10,
        p_read11,
        p_read12,
        p_read13,
        p_read14,
        p_read15,
        p_read16,
        p_read17,
        p_read18,
        p_read19,
        p_read20,
        p_read21,
        p_read22,
        p_read23,
        p_read24,
        p_read25,
        p_read26,
        p_read27,
        p_read28,
        p_read29,
        loop_offset,
        ap_return,
        ap_ce
);


input   ap_clk;
input   ap_rst;
input  [15:0] p_read;
input  [15:0] p_read1;
input  [15:0] p_read2;
input  [15:0] p_read3;
input  [15:0] p_read4;
input  [15:0] p_read5;
input  [15:0] p_read6;
input  [15:0] p_read7;
input  [15:0] p_read8;
input  [15:0] p_read9;
input  [15:0] p_read10;
input  [15:0] p_read11;
input  [15:0] p_read12;
input  [15:0] p_read13;
input  [15:0] p_read14;
input  [15:0] p_read15;
input  [15:0] p_read16;
input  [15:0] p_read17;
input  [15:0] p_read18;
input  [15:0] p_read19;
input  [15:0] p_read20;
input  [15:0] p_read21;
input  [15:0] p_read22;
input  [15:0] p_read23;
input  [15:0] p_read24;
input  [15:0] p_read25;
input  [15:0] p_read26;
input  [15:0] p_read27;
input  [15:0] p_read28;
input  [15:0] p_read29;
input  [0:0] loop_offset;
output  [18:0] ap_return;
input   ap_ce;

reg[18:0] ap_return;

wire   [16:0] ret_5_fu_422_p2;
reg   [16:0] ret_5_reg_790;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_pp0_stage0_11001;
wire   [16:0] add_ln1525_fu_484_p2;
reg   [16:0] add_ln1525_reg_795;
wire   [16:0] add_ln1525_2_fu_534_p2;
reg   [16:0] add_ln1525_2_reg_800;
wire   [16:0] ret_4_fu_584_p2;
reg   [16:0] ret_4_reg_805;
wire   [15:0] tmp_fu_590_p8;
reg   [15:0] tmp_reg_810;
reg   [15:0] lshr_ln_reg_816;
reg   [15:0] lshr_ln_reg_816_pp0_iter1_reg;
wire   [18:0] ret_3_fu_637_p2;
reg   [18:0] ret_3_reg_821;
wire   [19:0] add_ln98_1_fu_678_p2;
reg   [19:0] add_ln98_1_reg_826;
wire   [20:0] add_ln98_fu_703_p2;
reg   [20:0] add_ln98_reg_831;
reg   [0:0] tmp_59_reg_836;
reg   [17:0] trunc_ln98_2_reg_841;
wire    ap_block_pp0_stage0;
wire   [1:0] or_ln_fu_300_p3;
wire   [2:0] zext_ln225_fu_308_p1;
wire   [15:0] lhs_fu_312_p8;
wire   [15:0] rhs_fu_334_p8;
wire   [16:0] zext_ln225_2_fu_352_p1;
wire   [16:0] zext_ln225_1_fu_330_p1;
wire   [2:0] select_ln225_fu_362_p3;
wire   [15:0] lhs_6_fu_370_p8;
wire   [2:0] select_ln225_1_fu_392_p3;
wire   [15:0] rhs_1_fu_400_p8;
wire   [16:0] zext_ln225_4_fu_418_p1;
wire   [16:0] zext_ln225_3_fu_388_p1;
wire   [2:0] rhs_2_fu_432_p7;
wire   [15:0] rhs_2_fu_432_p8;
wire   [2:0] rhs_3_fu_462_p7;
wire   [15:0] rhs_3_fu_462_p8;
wire   [16:0] zext_ln1525_fu_450_p1;
wire   [16:0] zext_ln1525_13_fu_480_p1;
wire   [15:0] rhs_4_fu_490_p8;
wire   [15:0] rhs_5_fu_512_p8;
wire   [16:0] zext_ln1525_15_fu_508_p1;
wire   [16:0] zext_ln1525_16_fu_530_p1;
wire   [15:0] lhs_9_fu_540_p8;
wire   [15:0] rhs_6_fu_562_p8;
wire   [16:0] zext_ln225_9_fu_580_p1;
wire   [16:0] zext_ln225_8_fu_558_p1;
wire   [16:0] ret_fu_356_p2;
wire   [17:0] zext_ln1525_14_fu_621_p1;
wire   [17:0] zext_ln225_5_fu_618_p1;
wire   [17:0] ret_6_fu_624_p2;
wire   [18:0] zext_ln1525_17_fu_634_p1;
wire   [18:0] zext_ln1525_12_fu_630_p1;
wire   [18:0] shl_ln_fu_643_p3;
wire   [17:0] shl_ln1_fu_657_p3;
wire   [18:0] zext_ln97_fu_664_p1;
wire   [18:0] zext_ln96_fu_654_p1;
wire   [18:0] add_ln97_fu_668_p2;
wire   [19:0] zext_ln225_10_fu_650_p1;
wire   [19:0] zext_ln98_fu_674_p1;
wire   [19:0] zext_ln97_1_fu_687_p1;
wire   [19:0] zext_ln225_7_fu_684_p1;
wire   [19:0] sub_ln97_fu_690_p2;
wire   [20:0] zext_ln98_1_fu_700_p1;
wire  signed [20:0] sext_ln97_fu_696_p1;
wire   [20:0] sub_ln98_fu_727_p2;
wire   [17:0] trunc_ln98_1_fu_732_p4;
wire  signed [18:0] sext_ln98_fu_742_p1;
wire   [19:0] zext_ln98_2_fu_746_p1;
wire  signed [18:0] sext_ln98_1_fu_756_p1;
wire   [19:0] sub_ln98_1_fu_750_p2;
wire   [19:0] zext_ln98_3_fu_759_p1;
wire   [19:0] res_fu_763_p3;
wire   [0:0] tmp_60_fu_774_p3;
wire   [18:0] trunc_ln97_fu_770_p1;
wire   [18:0] select_ln99_fu_782_p3;
reg    ap_ce_reg;
reg   [15:0] p_read_int_reg;
reg   [15:0] p_read1_int_reg;
reg   [15:0] p_read2_int_reg;
reg   [15:0] p_read3_int_reg;
reg   [15:0] p_read4_int_reg;
reg   [15:0] p_read5_int_reg;
reg   [15:0] p_read6_int_reg;
reg   [15:0] p_read7_int_reg;
reg   [15:0] p_read8_int_reg;
reg   [15:0] p_read9_int_reg;
reg   [15:0] p_read10_int_reg;
reg   [15:0] p_read11_int_reg;
reg   [15:0] p_read12_int_reg;
reg   [15:0] p_read13_int_reg;
reg   [15:0] p_read14_int_reg;
reg   [15:0] p_read15_int_reg;
reg   [15:0] p_read16_int_reg;
reg   [15:0] p_read17_int_reg;
reg   [15:0] p_read18_int_reg;
reg   [15:0] p_read19_int_reg;
reg   [15:0] p_read20_int_reg;
reg   [15:0] p_read21_int_reg;
reg   [15:0] p_read22_int_reg;
reg   [15:0] p_read23_int_reg;
reg   [15:0] p_read24_int_reg;
reg   [15:0] p_read25_int_reg;
reg   [15:0] p_read26_int_reg;
reg   [15:0] p_read27_int_reg;
reg   [15:0] p_read28_int_reg;
reg   [15:0] p_read29_int_reg;
reg   [0:0] loop_offset_int_reg;
reg   [18:0] ap_return_int_reg;

ISPPipeline_accel_mux_63_16_1_0 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 3 ),
    .dout_WIDTH( 16 ))
mux_63_16_1_0_U194(
    .din0(p_read_int_reg),
    .din1(p_read1_int_reg),
    .din2(p_read2_int_reg),
    .din3(p_read3_int_reg),
    .din4(p_read4_int_reg),
    .din5(p_read5_int_reg),
    .din6(zext_ln225_fu_308_p1),
    .dout(lhs_fu_312_p8)
);

ISPPipeline_accel_mux_63_16_1_0 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 3 ),
    .dout_WIDTH( 16 ))
mux_63_16_1_0_U195(
    .din0(p_read24_int_reg),
    .din1(p_read25_int_reg),
    .din2(p_read26_int_reg),
    .din3(p_read27_int_reg),
    .din4(p_read28_int_reg),
    .din5(p_read29_int_reg),
    .din6(zext_ln225_fu_308_p1),
    .dout(rhs_fu_334_p8)
);

ISPPipeline_accel_mux_63_16_1_0 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 3 ),
    .dout_WIDTH( 16 ))
mux_63_16_1_0_U196(
    .din0(p_read6_int_reg),
    .din1(p_read7_int_reg),
    .din2(p_read8_int_reg),
    .din3(p_read9_int_reg),
    .din4(p_read10_int_reg),
    .din5(p_read11_int_reg),
    .din6(select_ln225_fu_362_p3),
    .dout(lhs_6_fu_370_p8)
);

ISPPipeline_accel_mux_63_16_1_0 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 3 ),
    .dout_WIDTH( 16 ))
mux_63_16_1_0_U197(
    .din0(p_read6_int_reg),
    .din1(p_read7_int_reg),
    .din2(p_read8_int_reg),
    .din3(p_read9_int_reg),
    .din4(p_read10_int_reg),
    .din5(p_read11_int_reg),
    .din6(select_ln225_1_fu_392_p3),
    .dout(rhs_1_fu_400_p8)
);

ISPPipeline_accel_mux_63_16_1_0 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 3 ),
    .dout_WIDTH( 16 ))
mux_63_16_1_0_U198(
    .din0(p_read12_int_reg),
    .din1(p_read13_int_reg),
    .din2(p_read14_int_reg),
    .din3(p_read15_int_reg),
    .din4(p_read16_int_reg),
    .din5(p_read17_int_reg),
    .din6(rhs_2_fu_432_p7),
    .dout(rhs_2_fu_432_p8)
);

ISPPipeline_accel_mux_63_16_1_0 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 3 ),
    .dout_WIDTH( 16 ))
mux_63_16_1_0_U199(
    .din0(p_read12_int_reg),
    .din1(p_read13_int_reg),
    .din2(p_read14_int_reg),
    .din3(p_read15_int_reg),
    .din4(p_read16_int_reg),
    .din5(p_read17_int_reg),
    .din6(rhs_3_fu_462_p7),
    .dout(rhs_3_fu_462_p8)
);

ISPPipeline_accel_mux_63_16_1_0 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 3 ),
    .dout_WIDTH( 16 ))
mux_63_16_1_0_U200(
    .din0(p_read18_int_reg),
    .din1(p_read19_int_reg),
    .din2(p_read20_int_reg),
    .din3(p_read21_int_reg),
    .din4(p_read22_int_reg),
    .din5(p_read23_int_reg),
    .din6(select_ln225_fu_362_p3),
    .dout(rhs_4_fu_490_p8)
);

ISPPipeline_accel_mux_63_16_1_0 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 3 ),
    .dout_WIDTH( 16 ))
mux_63_16_1_0_U201(
    .din0(p_read18_int_reg),
    .din1(p_read19_int_reg),
    .din2(p_read20_int_reg),
    .din3(p_read21_int_reg),
    .din4(p_read22_int_reg),
    .din5(p_read23_int_reg),
    .din6(select_ln225_1_fu_392_p3),
    .dout(rhs_5_fu_512_p8)
);

ISPPipeline_accel_mux_63_16_1_0 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 3 ),
    .dout_WIDTH( 16 ))
mux_63_16_1_0_U202(
    .din0(p_read12_int_reg),
    .din1(p_read13_int_reg),
    .din2(p_read14_int_reg),
    .din3(p_read15_int_reg),
    .din4(p_read16_int_reg),
    .din5(p_read17_int_reg),
    .din6(select_ln225_fu_362_p3),
    .dout(lhs_9_fu_540_p8)
);

ISPPipeline_accel_mux_63_16_1_0 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 3 ),
    .dout_WIDTH( 16 ))
mux_63_16_1_0_U203(
    .din0(p_read12_int_reg),
    .din1(p_read13_int_reg),
    .din2(p_read14_int_reg),
    .din3(p_read15_int_reg),
    .din4(p_read16_int_reg),
    .din5(p_read17_int_reg),
    .din6(select_ln225_1_fu_392_p3),
    .dout(rhs_6_fu_562_p8)
);

ISPPipeline_accel_mux_63_16_1_0 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 3 ),
    .dout_WIDTH( 16 ))
mux_63_16_1_0_U204(
    .din0(p_read12_int_reg),
    .din1(p_read13_int_reg),
    .din2(p_read14_int_reg),
    .din3(p_read15_int_reg),
    .din4(p_read16_int_reg),
    .din5(p_read17_int_reg),
    .din6(zext_ln225_fu_308_p1),
    .dout(tmp_fu_590_p8)
);

always @ (posedge ap_clk) begin
    ap_ce_reg <= ap_ce;
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        add_ln1525_2_reg_800 <= add_ln1525_2_fu_534_p2;
        add_ln1525_reg_795 <= add_ln1525_fu_484_p2;
        add_ln98_1_reg_826 <= add_ln98_1_fu_678_p2;
        add_ln98_reg_831 <= add_ln98_fu_703_p2;
        lshr_ln_reg_816 <= {{ret_fu_356_p2[16:1]}};
        lshr_ln_reg_816_pp0_iter1_reg <= lshr_ln_reg_816;
        ret_3_reg_821 <= ret_3_fu_637_p2;
        ret_4_reg_805 <= ret_4_fu_584_p2;
        ret_5_reg_790 <= ret_5_fu_422_p2;
        tmp_59_reg_836 <= add_ln98_fu_703_p2[32'd20];
        tmp_reg_810 <= tmp_fu_590_p8;
        trunc_ln98_2_reg_841 <= {{add_ln98_fu_703_p2[20:3]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce_reg)) begin
        ap_return_int_reg <= select_ln99_fu_782_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce)) begin
        loop_offset_int_reg <= loop_offset;
        p_read10_int_reg <= p_read10;
        p_read11_int_reg <= p_read11;
        p_read12_int_reg <= p_read12;
        p_read13_int_reg <= p_read13;
        p_read14_int_reg <= p_read14;
        p_read15_int_reg <= p_read15;
        p_read16_int_reg <= p_read16;
        p_read17_int_reg <= p_read17;
        p_read18_int_reg <= p_read18;
        p_read19_int_reg <= p_read19;
        p_read1_int_reg <= p_read1;
        p_read20_int_reg <= p_read20;
        p_read21_int_reg <= p_read21;
        p_read22_int_reg <= p_read22;
        p_read23_int_reg <= p_read23;
        p_read24_int_reg <= p_read24;
        p_read25_int_reg <= p_read25;
        p_read26_int_reg <= p_read26;
        p_read27_int_reg <= p_read27;
        p_read28_int_reg <= p_read28;
        p_read29_int_reg <= p_read29;
        p_read2_int_reg <= p_read2;
        p_read3_int_reg <= p_read3;
        p_read4_int_reg <= p_read4;
        p_read5_int_reg <= p_read5;
        p_read6_int_reg <= p_read6;
        p_read7_int_reg <= p_read7;
        p_read8_int_reg <= p_read8;
        p_read9_int_reg <= p_read9;
        p_read_int_reg <= p_read;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return = ap_return_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return = select_ln99_fu_782_p3;
    end else begin
        ap_return = 'bx;
    end
end

assign add_ln1525_2_fu_534_p2 = (zext_ln1525_15_fu_508_p1 + zext_ln1525_16_fu_530_p1);

assign add_ln1525_fu_484_p2 = (zext_ln1525_fu_450_p1 + zext_ln1525_13_fu_480_p1);

assign add_ln97_fu_668_p2 = (zext_ln97_fu_664_p1 + zext_ln96_fu_654_p1);

assign add_ln98_1_fu_678_p2 = (zext_ln225_10_fu_650_p1 + zext_ln98_fu_674_p1);

assign add_ln98_fu_703_p2 = ($signed(zext_ln98_1_fu_700_p1) + $signed(sext_ln97_fu_696_p1));

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign or_ln_fu_300_p3 = {{1'd1}, {loop_offset_int_reg}};

assign res_fu_763_p3 = ((tmp_59_reg_836[0:0] == 1'b1) ? sub_ln98_1_fu_750_p2 : zext_ln98_3_fu_759_p1);

assign ret_3_fu_637_p2 = (zext_ln1525_17_fu_634_p1 + zext_ln1525_12_fu_630_p1);

assign ret_4_fu_584_p2 = (zext_ln225_9_fu_580_p1 + zext_ln225_8_fu_558_p1);

assign ret_5_fu_422_p2 = (zext_ln225_4_fu_418_p1 + zext_ln225_3_fu_388_p1);

assign ret_6_fu_624_p2 = (zext_ln1525_14_fu_621_p1 + zext_ln225_5_fu_618_p1);

assign ret_fu_356_p2 = (zext_ln225_2_fu_352_p1 + zext_ln225_1_fu_330_p1);

assign rhs_2_fu_432_p7 = loop_offset_int_reg;

assign rhs_3_fu_462_p7 = {{2'd2}, {loop_offset_int_reg}};

assign select_ln225_1_fu_392_p3 = ((loop_offset_int_reg[0:0] == 1'b1) ? 3'd4 : 3'd3);

assign select_ln225_fu_362_p3 = ((loop_offset_int_reg[0:0] == 1'b1) ? 3'd2 : 3'd1);

assign select_ln99_fu_782_p3 = ((tmp_60_fu_774_p3[0:0] == 1'b1) ? 19'd0 : trunc_ln97_fu_770_p1);

assign sext_ln97_fu_696_p1 = $signed(sub_ln97_fu_690_p2);

assign sext_ln98_1_fu_756_p1 = $signed(trunc_ln98_2_reg_841);

assign sext_ln98_fu_742_p1 = $signed(trunc_ln98_1_fu_732_p4);

assign shl_ln1_fu_657_p3 = {{tmp_reg_810}, {2'd0}};

assign shl_ln_fu_643_p3 = {{ret_4_reg_805}, {2'd0}};

assign sub_ln97_fu_690_p2 = (zext_ln97_1_fu_687_p1 - zext_ln225_7_fu_684_p1);

assign sub_ln98_1_fu_750_p2 = (20'd0 - zext_ln98_2_fu_746_p1);

assign sub_ln98_fu_727_p2 = (21'd0 - add_ln98_reg_831);

assign tmp_60_fu_774_p3 = res_fu_763_p3[32'd19];

assign trunc_ln97_fu_770_p1 = res_fu_763_p3[18:0];

assign trunc_ln98_1_fu_732_p4 = {{sub_ln98_fu_727_p2[20:3]}};

assign zext_ln1525_12_fu_630_p1 = ret_6_fu_624_p2;

assign zext_ln1525_13_fu_480_p1 = rhs_3_fu_462_p8;

assign zext_ln1525_14_fu_621_p1 = add_ln1525_reg_795;

assign zext_ln1525_15_fu_508_p1 = rhs_4_fu_490_p8;

assign zext_ln1525_16_fu_530_p1 = rhs_5_fu_512_p8;

assign zext_ln1525_17_fu_634_p1 = add_ln1525_2_reg_800;

assign zext_ln1525_fu_450_p1 = rhs_2_fu_432_p8;

assign zext_ln225_10_fu_650_p1 = shl_ln_fu_643_p3;

assign zext_ln225_1_fu_330_p1 = lhs_fu_312_p8;

assign zext_ln225_2_fu_352_p1 = rhs_fu_334_p8;

assign zext_ln225_3_fu_388_p1 = lhs_6_fu_370_p8;

assign zext_ln225_4_fu_418_p1 = rhs_1_fu_400_p8;

assign zext_ln225_5_fu_618_p1 = ret_5_reg_790;

assign zext_ln225_7_fu_684_p1 = ret_3_reg_821;

assign zext_ln225_8_fu_558_p1 = lhs_9_fu_540_p8;

assign zext_ln225_9_fu_580_p1 = rhs_6_fu_562_p8;

assign zext_ln225_fu_308_p1 = or_ln_fu_300_p3;

assign zext_ln96_fu_654_p1 = tmp_reg_810;

assign zext_ln97_1_fu_687_p1 = lshr_ln_reg_816_pp0_iter1_reg;

assign zext_ln97_fu_664_p1 = shl_ln1_fu_657_p3;

assign zext_ln98_1_fu_700_p1 = add_ln98_1_reg_826;

assign zext_ln98_2_fu_746_p1 = $unsigned(sext_ln98_fu_742_p1);

assign zext_ln98_3_fu_759_p1 = $unsigned(sext_ln98_1_fu_756_p1);

assign zext_ln98_fu_674_p1 = add_ln97_fu_668_p2;

endmodule //ISPPipeline_accel_rgr_bgb_kernel_ap_uint_16_6_s
